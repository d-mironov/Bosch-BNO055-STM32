ARM GAS  /tmp/cctFn18N.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"bno055.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.bno055_mag_x,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	bno055_mag_x
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	bno055_mag_x:
  28              	.LVL0:
  29              	.LFB147:
  30              		.file 1 "./../bno055.c"
   1:./../bno055.c **** #include <stdint.h>
   2:./../bno055.c **** #include <stdio.h>
   3:./../bno055.c **** #include <stm32f4xx.h>
   4:./../bno055.c **** 
   5:./../bno055.c **** #include "bno055.h"
   6:./../bno055.c **** #include "stm32f4xx_hal.h"
   7:./../bno055.c **** #include "stm32f4xx_hal_def.h"
   8:./../bno055.c **** #include "stm32f4xx_hal_i2c.h"
   9:./../bno055.c **** 
  10:./../bno055.c **** /**
  11:./../bno055.c ****  * Initialize the Bosch BNO055 Sensor
  12:./../bno055.c ****  * ---------------------------------------------------------------
  13:./../bno055.c ****  *
  14:./../bno055.c ****  *  Initializes the Bosch BNO055 Sensor with
  15:./../bno055.c ****  *  the specified operation mode.
  16:./../bno055.c ****  * ---------------------------------------------------------------
  17:./../bno055.c ****  *
  18:./../bno055.c ****  *  Args:
  19:./../bno055.c ****  *  > `imu[bno055_t*]`: pointer to the structure to initialize
  20:./../bno055.c ****  * ---------------------------------------------------------------
  21:./../bno055.c ****  *
  22:./../bno055.c ****  *  Return:
  23:./../bno055.c ****  *  > `bool`: `true` if none of the init steps fail, `false` else
  24:./../bno055.c ****  * ---------------------------------------------------------------
  25:./../bno055.c ****  */
  26:./../bno055.c **** error_bno bno055_init(bno055_t* imu) {
  27:./../bno055.c ****     u8 id = 0;
  28:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 2


  29:./../bno055.c **** 
  30:./../bno055.c ****     imu->addr = (imu->addr << 1);
  31:./../bno055.c ****     err = bno055_read_regs(*imu, BNO_CHIP_ID, &id, 1);
  32:./../bno055.c ****     if (err != BNO_OK) {
  33:./../bno055.c ****         return err;
  34:./../bno055.c ****     }
  35:./../bno055.c ****     if (id != BNO_DEF_CHIP_ID) {
  36:./../bno055.c ****         return BNO_ERR_WRONG_CHIP_ID;
  37:./../bno055.c ****     }
  38:./../bno055.c ****     if ((err = bno055_set_opmode(imu, BNO_MODE_CONFIG)) != BNO_OK) {
  39:./../bno055.c ****         return err;
  40:./../bno055.c ****     }
  41:./../bno055.c ****     HAL_Delay(2);
  42:./../bno055.c ****     bno055_reset(imu);
  43:./../bno055.c ****     HAL_Delay(5000);
  44:./../bno055.c ****     if ((err = bno055_set_pwr_mode(imu, BNO_PWR_NORMAL)) != BNO_OK) {
  45:./../bno055.c ****         return err;
  46:./../bno055.c ****     }
  47:./../bno055.c ****     HAL_Delay(10);
  48:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
  49:./../bno055.c ****         return err;
  50:./../bno055.c ****     }
  51:./../bno055.c ****     HAL_Delay(BNO_CONFIG_TIME_DELAY + 5);
  52:./../bno055.c ****     bno055_on(imu);
  53:./../bno055.c ****     if ((err = bno055_set_opmode(imu, imu->mode)) != BNO_OK) {
  54:./../bno055.c ****         return err;
  55:./../bno055.c ****     }
  56:./../bno055.c ****     HAL_Delay(BNO_ANY_TIME_DELAY + 5);
  57:./../bno055.c **** 
  58:./../bno055.c ****     imu->temperature = &bno055_temperature;
  59:./../bno055.c ****     imu->acc_x = &bno055_acc_x;
  60:./../bno055.c ****     imu->acc_y = &bno055_acc_y;
  61:./../bno055.c ****     imu->acc_z = &bno055_acc_z;
  62:./../bno055.c ****     imu->acc = &bno055_acc;
  63:./../bno055.c ****     imu->linear_acc_x = &bno055_linear_acc_x;
  64:./../bno055.c ****     imu->linear_acc_y = &bno055_linear_acc_y;
  65:./../bno055.c ****     imu->linear_acc_z = &bno055_linear_acc_z;
  66:./../bno055.c ****     imu->linear_acc = &bno055_linear_acc;
  67:./../bno055.c ****     imu->gyro_x = &bno055_gyro_x;
  68:./../bno055.c ****     imu->gyro_y = &bno055_gyro_y;
  69:./../bno055.c ****     imu->gyro_z = &bno055_gyro_z;
  70:./../bno055.c ****     imu->gyro = &bno055_gyro;
  71:./../bno055.c ****     imu->mag_x = &bno055_mag_x;
  72:./../bno055.c ****     imu->mag_y = &bno055_mag_y;
  73:./../bno055.c ****     imu->mag_z = &bno055_mag_z;
  74:./../bno055.c ****     imu->mag = &bno055_mag;
  75:./../bno055.c ****     imu->gravity_x = &bno055_gravity_x;
  76:./../bno055.c ****     imu->gravity_y = &bno055_gravity_y;
  77:./../bno055.c ****     imu->gravity_z = &bno055_gravity_z;
  78:./../bno055.c ****     imu->gravity = &bno055_gravity;
  79:./../bno055.c ****     imu->euler_yaw = &bno055_euler_yaw;
  80:./../bno055.c ****     imu->euler_roll = &bno055_euler_roll;
  81:./../bno055.c ****     imu->euler_pitch = &bno055_euler_pitch;
  82:./../bno055.c ****     imu->euler = &bno055_euler;
  83:./../bno055.c ****     imu->quaternion_w = &bno055_quaternion_w;
  84:./../bno055.c ****     imu->quaternion_x = &bno055_quaternion_x;
  85:./../bno055.c ****     imu->quaternion_y = &bno055_quaternion_y;
ARM GAS  /tmp/cctFn18N.s 			page 3


  86:./../bno055.c ****     imu->quaternion_z = &bno055_quaternion_z;
  87:./../bno055.c ****     imu->quaternion = &bno055_quaternion;
  88:./../bno055.c **** 
  89:./../bno055.c ****     imu->acc_config = &bno055_acc_conf;
  90:./../bno055.c ****     imu->gyr_config = &bno055_gyr_conf;
  91:./../bno055.c ****     imu->mag_config = &bno055_mag_conf;
  92:./../bno055.c ****     return BNO_OK;
  93:./../bno055.c **** }
  94:./../bno055.c **** 
  95:./../bno055.c **** /**
  96:./../bno055.c ****  * Bosch BNO055 read temperature function
  97:./../bno055.c ****  * ----------------------------------------------------------------------
  98:./../bno055.c ****  *
  99:./../bno055.c ****  * Read the temperature of the Bosch BNO055 Sensor and store it in a
 100:./../bno055.c ****  * specified buffer.
 101:./../bno055.c ****  * Unit can be specified with `bno055_set_unit(...)`. (Default: Celsius)
 102:./../bno055.c ****  * ----------------------------------------------------------------------
 103:./../bno055.c ****  *
 104:./../bno055.c ****  * Args:
 105:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the temperature from
 106:./../bno055.c ****  *     > `buf[s8*|int8_t*]`: Buffer to store the read value in
 107:./../bno055.c ****  * ----------------------------------------------------------------------
 108:./../bno055.c ****  *
 109:./../bno055.c ****  * Return:
 110:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, `BNO_ERR_X` else.
 111:./../bno055.c ****  * ----------------------------------------------------------------------
 112:./../bno055.c ****  */
 113:./../bno055.c **** error_bno bno055_temperature(bno055_t* imu, s8* buf) {
 114:./../bno055.c ****     error_bno err;
 115:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 116:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 117:./../bno055.c ****         return err;
 118:./../bno055.c ****     }
 119:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 120:./../bno055.c ****     u8 data = 0;
 121:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_TEMP, &data, 1)) != BNO_OK) {
 122:./../bno055.c ****         return err;
 123:./../bno055.c ****     }
 124:./../bno055.c ****     *buf = (imu->_temp_unit) ? data * 2 : data;
 125:./../bno055.c ****     return BNO_OK;
 126:./../bno055.c **** }
 127:./../bno055.c **** 
 128:./../bno055.c **** /**
 129:./../bno055.c ****  * Bosch BNO055 read accelerometer data on X-axis
 130:./../bno055.c ****  * ----------------------------------------------------------------------
 131:./../bno055.c ****  *
 132:./../bno055.c ****  * Reads the accelerometer data and stores the value in the specified buffer.
 133:./../bno055.c ****  * Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 134:./../bno055.c ****  * ----------------------------------------------------------------------
 135:./../bno055.c ****  *
 136:./../bno055.c ****  * Args:
 137:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 138:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 139:./../bno055.c ****  * ----------------------------------------------------------------------
 140:./../bno055.c ****  *
 141:./../bno055.c ****  * Return:
 142:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
ARM GAS  /tmp/cctFn18N.s 			page 4


 143:./../bno055.c ****  * ----------------------------------------------------------------------
 144:./../bno055.c ****  */
 145:./../bno055.c **** error_bno bno055_acc_x(bno055_t* imu, f32* buf) {
 146:./../bno055.c ****     error_bno err;
 147:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 148:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 149:./../bno055.c ****         return err;
 150:./../bno055.c ****     }
 151:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 152:./../bno055.c ****     u8 data[2];
 153:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_X_LSB, data, 2)) != BNO_OK) {
 154:./../bno055.c ****         return err;
 155:./../bno055.c ****     }
 156:./../bno055.c **** 
 157:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 158:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 159:./../bno055.c ****                                                      : BNO_ACC_SCALE_MG);
 160:./../bno055.c ****     return BNO_OK;
 161:./../bno055.c **** };
 162:./../bno055.c **** 
 163:./../bno055.c **** /**
 164:./../bno055.c ****  * Bosch BNO055 read accelerometer data on Y-axis
 165:./../bno055.c ****  * ----------------------------------------------------------------------
 166:./../bno055.c ****  *
 167:./../bno055.c ****  * Reads the accelerometer data and stores the value in the specified buffer.
 168:./../bno055.c ****  * Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 169:./../bno055.c ****  * ----------------------------------------------------------------------
 170:./../bno055.c ****  *
 171:./../bno055.c ****  * Args:
 172:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 173:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 174:./../bno055.c ****  * ----------------------------------------------------------------------
 175:./../bno055.c ****  *
 176:./../bno055.c ****  * Return:
 177:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 178:./../bno055.c ****  * ----------------------------------------------------------------------
 179:./../bno055.c ****  */
 180:./../bno055.c **** error_bno bno055_acc_y(bno055_t* imu, f32* buf) {
 181:./../bno055.c ****     error_bno err;
 182:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 183:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 184:./../bno055.c ****         return err;
 185:./../bno055.c ****     }
 186:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 187:./../bno055.c ****     u8 data[2];
 188:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_Y_LSB, data, 2)) != BNO_OK) {
 189:./../bno055.c ****         return err;
 190:./../bno055.c ****     }
 191:./../bno055.c **** 
 192:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 193:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 194:./../bno055.c ****                                                      : BNO_ACC_SCALE_MG);
 195:./../bno055.c ****     return BNO_OK;
 196:./../bno055.c **** };
 197:./../bno055.c **** 
 198:./../bno055.c **** /**
 199:./../bno055.c ****  * Bosch BNO055 read accelerometer data on Z-axis
ARM GAS  /tmp/cctFn18N.s 			page 5


 200:./../bno055.c ****  * ----------------------------------------------------------------------
 201:./../bno055.c ****  *
 202:./../bno055.c ****  * Reads the accelerometer data and stores the value in the specified buffer.
 203:./../bno055.c ****  * Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 204:./../bno055.c ****  * ----------------------------------------------------------------------
 205:./../bno055.c ****  *
 206:./../bno055.c ****  * Args:
 207:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 208:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 209:./../bno055.c ****  * ----------------------------------------------------------------------
 210:./../bno055.c ****  *
 211:./../bno055.c ****  * Return:
 212:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 213:./../bno055.c ****  * ----------------------------------------------------------------------
 214:./../bno055.c ****  */
 215:./../bno055.c **** error_bno bno055_acc_z(bno055_t* imu, f32* buf) {
 216:./../bno055.c ****     error_bno err;
 217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 218:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 219:./../bno055.c ****         return err;
 220:./../bno055.c ****     }
 221:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 222:./../bno055.c ****     u8 data[2];
 223:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_Z_LSB, data, 2)) != BNO_OK) {
 224:./../bno055.c ****         return err;
 225:./../bno055.c ****     }
 226:./../bno055.c **** 
 227:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 228:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 229:./../bno055.c ****                                                      : BNO_ACC_SCALE_MG);
 230:./../bno055.c ****     return BNO_OK;
 231:./../bno055.c **** };
 232:./../bno055.c **** 
 233:./../bno055.c **** /**
 234:./../bno055.c ****  * Bosch BNO055 read acceleration data on all axis
 235:./../bno055.c ****  * ----------------------------------------------------------------------
 236:./../bno055.c ****  *
 237:./../bno055.c ****  * Reads the acceleration data and stores the value in the specified
 238:./../bno055.c ****  * vector buffer. Unit can be specified with `bno055_set_unit(...)`. (Default:
 239:./../bno055.c ****  * m/s^2)
 240:./../bno055.c ****  * ----------------------------------------------------------------------
 241:./../bno055.c ****  *
 242:./../bno055.c ****  * Args:
 243:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 244:./../bno055.c ****  *     > `buf[bno055_vec3_t*]`: Buffer to store the read value in
 245:./../bno055.c ****  * ----------------------------------------------------------------------
 246:./../bno055.c ****  *
 247:./../bno055.c ****  * Return:
 248:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 249:./../bno055.c ****  * ----------------------------------------------------------------------
 250:./../bno055.c ****  */
 251:./../bno055.c **** error_bno bno055_acc(bno055_t* imu, bno055_vec3_t* xyz) {
 252:./../bno055.c ****     error_bno err;
 253:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 254:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 255:./../bno055.c ****         return err;
 256:./../bno055.c ****     }
ARM GAS  /tmp/cctFn18N.s 			page 6


 257:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 258:./../bno055.c ****     u8 data[6];
 259:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_X_LSB, data, 6)) != BNO_OK) {
 260:./../bno055.c ****         return err;
 261:./../bno055.c ****     }
 262:./../bno055.c ****     float scale = (imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 263:./../bno055.c ****                                                            : BNO_ACC_SCALE_MG;
 264:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 265:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 266:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 267:./../bno055.c **** 
 268:./../bno055.c ****     return BNO_OK;
 269:./../bno055.c **** };
 270:./../bno055.c **** 
 271:./../bno055.c **** /**
 272:./../bno055.c ****  * Bosch BNO055 read linear acceleration data on X-axis
 273:./../bno055.c ****  * ----------------------------------------------------------------------
 274:./../bno055.c ****  *
 275:./../bno055.c ****  * Reads the linear acceleration data and stores the value in the specified
 276:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 277:./../bno055.c ****  * ----------------------------------------------------------------------
 278:./../bno055.c ****  *
 279:./../bno055.c ****  * Args:
 280:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 281:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 282:./../bno055.c ****  * ----------------------------------------------------------------------
 283:./../bno055.c ****  *
 284:./../bno055.c ****  * Return:
 285:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 286:./../bno055.c ****  * ----------------------------------------------------------------------
 287:./../bno055.c ****  */
 288:./../bno055.c **** error_bno bno055_linear_acc_x(bno055_t* imu, f32* buf) {
 289:./../bno055.c ****     error_bno err;
 290:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 291:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 292:./../bno055.c ****         return err;
 293:./../bno055.c ****     }
 294:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 295:./../bno055.c ****     u8 data[2];
 296:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_X_LSB, data, 2)) != BNO_OK) {
 297:./../bno055.c ****         return err;
 298:./../bno055.c ****     }
 299:./../bno055.c **** 
 300:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 301:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 302:./../bno055.c ****                                                      : BNO_ACC_SCALE_MG);
 303:./../bno055.c ****     return BNO_OK;
 304:./../bno055.c **** };
 305:./../bno055.c **** 
 306:./../bno055.c **** /**
 307:./../bno055.c ****  * Bosch BNO055 read linear acceleration data on Y-axis
 308:./../bno055.c ****  * ----------------------------------------------------------------------
 309:./../bno055.c ****  *
 310:./../bno055.c ****  * Reads the linear acceleration data and stores the value in the specified
 311:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 312:./../bno055.c ****  * ----------------------------------------------------------------------
 313:./../bno055.c ****  *
ARM GAS  /tmp/cctFn18N.s 			page 7


 314:./../bno055.c ****  * Args:
 315:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 316:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 317:./../bno055.c ****  * ----------------------------------------------------------------------
 318:./../bno055.c ****  *
 319:./../bno055.c ****  * Return:
 320:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 321:./../bno055.c ****  * ----------------------------------------------------------------------
 322:./../bno055.c ****  */
 323:./../bno055.c **** error_bno bno055_linear_acc_y(bno055_t* imu, f32* buf) {
 324:./../bno055.c ****     error_bno err;
 325:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 326:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 327:./../bno055.c ****         return err;
 328:./../bno055.c ****     }
 329:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 330:./../bno055.c ****     u8 data[2];
 331:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_Y_LSB, data, 2)) != BNO_OK) {
 332:./../bno055.c ****         return err;
 333:./../bno055.c ****     }
 334:./../bno055.c **** 
 335:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 336:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 337:./../bno055.c ****                                                      : BNO_ACC_SCALE_MG);
 338:./../bno055.c ****     return BNO_OK;
 339:./../bno055.c **** };
 340:./../bno055.c **** 
 341:./../bno055.c **** /**
 342:./../bno055.c ****  * Bosch BNO055 read linear acceleration data on Z-axis
 343:./../bno055.c ****  * ----------------------------------------------------------------------
 344:./../bno055.c ****  *
 345:./../bno055.c ****  * Reads the linear acceleration data and stores the value in the specified
 346:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 347:./../bno055.c ****  * ----------------------------------------------------------------------
 348:./../bno055.c ****  *
 349:./../bno055.c ****  * Args:
 350:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 351:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 352:./../bno055.c ****  * ----------------------------------------------------------------------
 353:./../bno055.c ****  *
 354:./../bno055.c ****  * Return:
 355:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 356:./../bno055.c ****  * ----------------------------------------------------------------------
 357:./../bno055.c ****  */
 358:./../bno055.c **** error_bno bno055_linear_acc_z(bno055_t* imu, f32* buf) {
 359:./../bno055.c ****     error_bno err;
 360:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 361:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 362:./../bno055.c ****         return err;
 363:./../bno055.c ****     }
 364:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 365:./../bno055.c ****     u8 data[2];
 366:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_Z_LSB, data, 2)) != BNO_OK) {
 367:./../bno055.c ****         return err;
 368:./../bno055.c ****     }
 369:./../bno055.c **** 
 370:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
ARM GAS  /tmp/cctFn18N.s 			page 8


 371:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 372:./../bno055.c ****                                                      : BNO_ACC_SCALE_MG);
 373:./../bno055.c ****     return BNO_OK;
 374:./../bno055.c **** };
 375:./../bno055.c **** 
 376:./../bno055.c **** /**
 377:./../bno055.c ****  * Bosch BNO055 read linear acceleration data on all axis
 378:./../bno055.c ****  * ----------------------------------------------------------------------
 379:./../bno055.c ****  *
 380:./../bno055.c ****  * Reads the linear acceleration data and stores the value in the specified
 381:./../bno055.c ****  * vector buffer. Unit can be specified with `bno055_set_unit(...)`. (Default:
 382:./../bno055.c ****  * m/s^2)
 383:./../bno055.c ****  * ----------------------------------------------------------------------
 384:./../bno055.c ****  *
 385:./../bno055.c ****  * Args:
 386:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 387:./../bno055.c ****  *     > `buf[bno055_vec3_t*]`: Buffer to store the read value in
 388:./../bno055.c ****  * ----------------------------------------------------------------------
 389:./../bno055.c ****  *
 390:./../bno055.c ****  * Return:
 391:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 392:./../bno055.c ****  * ----------------------------------------------------------------------
 393:./../bno055.c ****  */
 394:./../bno055.c **** error_bno bno055_linear_acc(bno055_t* imu, bno055_vec3_t* xyz) {
 395:./../bno055.c ****     error_bno err;
 396:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 397:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 398:./../bno055.c ****         return err;
 399:./../bno055.c ****     }
 400:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 401:./../bno055.c ****     u8 data[6];
 402:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_X_LSB, data, 6)) != BNO_OK) {
 403:./../bno055.c ****         return err;
 404:./../bno055.c ****     }
 405:./../bno055.c ****     float scale = (imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 406:./../bno055.c ****                                                            : BNO_ACC_SCALE_MG;
 407:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 408:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 409:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 410:./../bno055.c **** 
 411:./../bno055.c ****     return BNO_OK;
 412:./../bno055.c **** };
 413:./../bno055.c **** 
 414:./../bno055.c **** /**
 415:./../bno055.c ****  * Bosch BNO055 read gyroscope data on X-axis
 416:./../bno055.c ****  * ----------------------------------------------------------------------
 417:./../bno055.c ****  *
 418:./../bno055.c ****  * Reads the gyroscope data and stores the value in the specified
 419:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 420:./../bno055.c ****  * ----------------------------------------------------------------------
 421:./../bno055.c ****  *
 422:./../bno055.c ****  * Args:
 423:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 424:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 425:./../bno055.c ****  * ----------------------------------------------------------------------
 426:./../bno055.c ****  *
 427:./../bno055.c ****  * Return:
ARM GAS  /tmp/cctFn18N.s 			page 9


 428:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 429:./../bno055.c ****  * ----------------------------------------------------------------------
 430:./../bno055.c ****  */
 431:./../bno055.c **** error_bno bno055_gyro_x(bno055_t* imu, f32* buf) {
 432:./../bno055.c ****     error_bno err;
 433:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 434:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 435:./../bno055.c ****         return err;
 436:./../bno055.c ****     }
 437:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 438:./../bno055.c ****     u8 data[2];
 439:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_X_LSB, data, 2)) != BNO_OK) {
 440:./../bno055.c ****         return err;
 441:./../bno055.c ****     }
 442:./../bno055.c **** 
 443:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 444:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 445:./../bno055.c ****                                                  : BNO_GYR_SCALE_RPS);
 446:./../bno055.c ****     return BNO_OK;
 447:./../bno055.c **** };
 448:./../bno055.c **** 
 449:./../bno055.c **** /**
 450:./../bno055.c ****  * Bosch BNO055 read gyroscope data on Y-axis
 451:./../bno055.c ****  * ----------------------------------------------------------------------
 452:./../bno055.c ****  *
 453:./../bno055.c ****  * Reads the gyroscope data and stores the value in the specified
 454:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 455:./../bno055.c ****  * ----------------------------------------------------------------------
 456:./../bno055.c ****  *
 457:./../bno055.c ****  * Args:
 458:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 459:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 460:./../bno055.c ****  * ----------------------------------------------------------------------
 461:./../bno055.c ****  *
 462:./../bno055.c ****  * Return:
 463:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 464:./../bno055.c ****  * ----------------------------------------------------------------------
 465:./../bno055.c ****  */
 466:./../bno055.c **** error_bno bno055_gyro_y(bno055_t* imu, f32* buf) {
 467:./../bno055.c ****     error_bno err;
 468:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 469:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 470:./../bno055.c ****         return err;
 471:./../bno055.c ****     }
 472:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 473:./../bno055.c ****     u8 data[2];
 474:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_Y_LSB, data, 2)) != BNO_OK) {
 475:./../bno055.c ****         return err;
 476:./../bno055.c ****     }
 477:./../bno055.c **** 
 478:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 479:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 480:./../bno055.c ****                                                  : BNO_GYR_SCALE_RPS);
 481:./../bno055.c ****     return BNO_OK;
 482:./../bno055.c **** };
 483:./../bno055.c **** 
 484:./../bno055.c **** /**
ARM GAS  /tmp/cctFn18N.s 			page 10


 485:./../bno055.c ****  * Bosch BNO055 read gyroscope data on Z-axis
 486:./../bno055.c ****  * ----------------------------------------------------------------------
 487:./../bno055.c ****  *
 488:./../bno055.c ****  * Reads the gyroscope data and stores the value in the specified
 489:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 490:./../bno055.c ****  * ----------------------------------------------------------------------
 491:./../bno055.c ****  *
 492:./../bno055.c ****  * Args:
 493:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 494:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 495:./../bno055.c ****  * ----------------------------------------------------------------------
 496:./../bno055.c ****  *
 497:./../bno055.c ****  * Return:
 498:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 499:./../bno055.c ****  * ----------------------------------------------------------------------
 500:./../bno055.c ****  */
 501:./../bno055.c **** error_bno bno055_gyro_z(bno055_t* imu, f32* buf) {
 502:./../bno055.c ****     error_bno err;
 503:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 504:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 505:./../bno055.c ****         return err;
 506:./../bno055.c ****     }
 507:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 508:./../bno055.c ****     u8 data[2];
 509:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_Z_LSB, data, 2)) != BNO_OK) {
 510:./../bno055.c ****         return err;
 511:./../bno055.c ****     }
 512:./../bno055.c **** 
 513:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) /
 514:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 515:./../bno055.c ****                                                  : BNO_GYR_SCALE_RPS);
 516:./../bno055.c ****     return BNO_OK;
 517:./../bno055.c **** };
 518:./../bno055.c **** 
 519:./../bno055.c **** /**
 520:./../bno055.c ****  * Bosch BNO055 read gyroscope data on all axis
 521:./../bno055.c ****  * ----------------------------------------------------------------------
 522:./../bno055.c ****  *
 523:./../bno055.c ****  * Reads the gyroscope data and stores the value in the specified
 524:./../bno055.c ****  * vector buffer. Unit can be specified with `bno055_set_unit(...)`. (Default:
 525:./../bno055.c ****  * m/s^2)
 526:./../bno055.c ****  *
 527:./../bno055.c ****  * FIX: MCU restart when moving
 528:./../bno055.c ****  * ----------------------------------------------------------------------
 529:./../bno055.c ****  *
 530:./../bno055.c ****  * Args:
 531:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 532:./../bno055.c ****  *     > `buf[bno055_vec3_t*]`: Buffer to store the read value in
 533:./../bno055.c ****  * ----------------------------------------------------------------------
 534:./../bno055.c ****  *
 535:./../bno055.c ****  * Return:
 536:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 537:./../bno055.c ****  * ----------------------------------------------------------------------
 538:./../bno055.c ****  */
 539:./../bno055.c **** error_bno bno055_gyro(bno055_t* imu, bno055_vec3_t* xyz) {
 540:./../bno055.c ****     error_bno err;
 541:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
ARM GAS  /tmp/cctFn18N.s 			page 11


 542:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 543:./../bno055.c ****         return err;
 544:./../bno055.c ****     }
 545:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 546:./../bno055.c ****     u8 data[6];
 547:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_X_LSB, data, 6)) != BNO_OK) {
 548:./../bno055.c ****         return err;
 549:./../bno055.c ****     }
 550:./../bno055.c **** 
 551:./../bno055.c ****     f32 scale = (imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 552:./../bno055.c ****                                                      : BNO_GYR_SCALE_RPS;
 553:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 554:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 555:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 556:./../bno055.c **** 
 557:./../bno055.c ****     return BNO_OK;
 558:./../bno055.c **** }
 559:./../bno055.c **** 
 560:./../bno055.c **** /**
 561:./../bno055.c ****  * Bosch BNO055 read magnetometer data on X-axis
 562:./../bno055.c ****  * ----------------------------------------------------------------------
 563:./../bno055.c ****  *
 564:./../bno055.c ****  * Reads the magnetometer data and stores the value in the specified
 565:./../bno055.c ****  * buffer. Unit is `[uT]`.
 566:./../bno055.c **** 
 567:./../bno055.c ****  * ----------------------------------------------------------------------
 568:./../bno055.c ****  *
 569:./../bno055.c ****  * Args:
 570:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 571:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 572:./../bno055.c ****  * ----------------------------------------------------------------------
 573:./../bno055.c ****  *
 574:./../bno055.c ****  * Return:
 575:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 576:./../bno055.c ****  * ----------------------------------------------------------------------
 577:./../bno055.c ****  */
 578:./../bno055.c **** error_bno bno055_mag_x(bno055_t* imu, f32* buf) {
  31              		.loc 1 578 49 view -0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 8
  34              		@ frame_needed = 0, uses_anonymous_args = 0
 579:./../bno055.c ****     error_bno err;
  35              		.loc 1 579 5 view .LVU1
 580:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 581:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 582:./../bno055.c ****         return err;
 583:./../bno055.c ****     }
 584:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 585:./../bno055.c ****     u8 data[2];
  36              		.loc 1 585 5 view .LVU2
 586:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_X_LSB, data, 2)) != BNO_OK) {
  37              		.loc 1 586 5 view .LVU3
 578:./../bno055.c ****     error_bno err;
  38              		.loc 1 578 49 is_stmt 0 view .LVU4
  39 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cctFn18N.s 			page 12


  42              		.cfi_offset 4, -20
  43              		.cfi_offset 5, -16
  44              		.cfi_offset 6, -12
  45              		.cfi_offset 7, -8
  46              		.cfi_offset 14, -4
  47 0002 0568     		ldr	r5, [r0]
  48              	.LVL1:
  49              	.LBB28:
  50              	.LBB29:
 587:./../bno055.c ****         return err;
 588:./../bno055.c ****     }
 589:./../bno055.c **** 
 590:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / BNO_MAG_SCALE;
 591:./../bno055.c ****     return BNO_OK;
 592:./../bno055.c **** }
 593:./../bno055.c **** 
 594:./../bno055.c **** /**
 595:./../bno055.c ****  * Bosch BNO055 read magnetometer data on Y-axis
 596:./../bno055.c ****  * ----------------------------------------------------------------------
 597:./../bno055.c ****  *
 598:./../bno055.c ****  * Reads the magnetometer data and stores the value in the specified
 599:./../bno055.c ****  * buffer. Unit is `[uT]`.
 600:./../bno055.c **** 
 601:./../bno055.c ****  * ----------------------------------------------------------------------
 602:./../bno055.c ****  *
 603:./../bno055.c ****  * Args:
 604:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 605:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 606:./../bno055.c ****  * ----------------------------------------------------------------------
 607:./../bno055.c ****  *
 608:./../bno055.c ****  * Return:
 609:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 610:./../bno055.c ****  * ----------------------------------------------------------------------
 611:./../bno055.c ****  */
 612:./../bno055.c **** error_bno bno055_mag_y(bno055_t* imu, f32* buf) {
 613:./../bno055.c ****     error_bno err;
 614:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 615:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 616:./../bno055.c ****         return err;
 617:./../bno055.c ****     }
 618:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 619:./../bno055.c ****     u8 data[2];
 620:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_Y_LSB, data, 2)) != BNO_OK) {
 621:./../bno055.c ****         return err;
 622:./../bno055.c ****     }
 623:./../bno055.c **** 
 624:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / BNO_MAG_SCALE;
 625:./../bno055.c ****     return BNO_OK;
 626:./../bno055.c **** }
 627:./../bno055.c **** 
 628:./../bno055.c **** /**
 629:./../bno055.c ****  * Bosch BNO055 read magnetometer data on Z-axis
 630:./../bno055.c ****  * ----------------------------------------------------------------------
 631:./../bno055.c ****  *
 632:./../bno055.c ****  * Reads the magnetometer data and stores the value in the specified
 633:./../bno055.c ****  * buffer. Unit is `[uT]`.
 634:./../bno055.c ****  * ----------------------------------------------------------------------
ARM GAS  /tmp/cctFn18N.s 			page 13


 635:./../bno055.c ****  *
 636:./../bno055.c ****  * Args:
 637:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 638:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 639:./../bno055.c ****  * ----------------------------------------------------------------------
 640:./../bno055.c ****  *
 641:./../bno055.c ****  * Return:
 642:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 643:./../bno055.c ****  * ----------------------------------------------------------------------
 644:./../bno055.c ****  */
 645:./../bno055.c **** error_bno bno055_mag_z(bno055_t* imu, f32* buf) {
 646:./../bno055.c ****     error_bno err;
 647:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 648:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 649:./../bno055.c ****         return err;
 650:./../bno055.c ****     }
 651:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 652:./../bno055.c ****     u8 data[2];
 653:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_Z_LSB, data, 2)) != BNO_OK) {
 654:./../bno055.c ****         return err;
 655:./../bno055.c ****     }
 656:./../bno055.c **** 
 657:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / BNO_MAG_SCALE;
 658:./../bno055.c ****     return BNO_OK;
 659:./../bno055.c **** }
 660:./../bno055.c **** 
 661:./../bno055.c **** /**
 662:./../bno055.c ****  * Bosch BNO055 read magnetometer data on all axis
 663:./../bno055.c ****  * ----------------------------------------------------------------------
 664:./../bno055.c ****  *
 665:./../bno055.c ****  * Reads the magnetometer data and stores the value in the specified vector
 666:./../bno055.c ****  * buffer. Unit is `[uT]`.
 667:./../bno055.c ****  * ----------------------------------------------------------------------
 668:./../bno055.c ****  *
 669:./../bno055.c ****  * Args:
 670:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 671:./../bno055.c ****  *     > `buf[bno055_vec3_t*]`: Buffer to store the read value in
 672:./../bno055.c ****  * ----------------------------------------------------------------------
 673:./../bno055.c ****  *
 674:./../bno055.c ****  * Return:
 675:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 676:./../bno055.c ****  * ----------------------------------------------------------------------
 677:./../bno055.c ****  */
 678:./../bno055.c **** error_bno bno055_mag(bno055_t* imu, bno055_vec3_t* xyz) {
 679:./../bno055.c ****     error_bno err;
 680:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 681:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 682:./../bno055.c ****         return err;
 683:./../bno055.c ****     }
 684:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 685:./../bno055.c ****     u8 data[6];
 686:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_X_LSB, data, 6)) != BNO_OK) {
 687:./../bno055.c ****         return err;
 688:./../bno055.c ****     }
 689:./../bno055.c **** 
 690:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / BNO_MAG_SCALE;
 691:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / BNO_MAG_SCALE;
ARM GAS  /tmp/cctFn18N.s 			page 14


 692:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / BNO_MAG_SCALE;
 693:./../bno055.c **** 
 694:./../bno055.c ****     return BNO_OK;
 695:./../bno055.c **** };
 696:./../bno055.c **** 
 697:./../bno055.c **** /**
 698:./../bno055.c ****  * Bosch BNO055 read gravity data on X-axis
 699:./../bno055.c ****  * ----------------------------------------------------------------------
 700:./../bno055.c ****  *
 701:./../bno055.c ****  * Reads the gravity data and stores the value in the specified
 702:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 703:./../bno055.c ****  * ----------------------------------------------------------------------
 704:./../bno055.c ****  *
 705:./../bno055.c ****  * Args:
 706:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 707:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 708:./../bno055.c ****  * ----------------------------------------------------------------------
 709:./../bno055.c ****  *
 710:./../bno055.c ****  * Return:
 711:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 712:./../bno055.c ****  * ----------------------------------------------------------------------
 713:./../bno055.c ****  */
 714:./../bno055.c **** error_bno bno055_gravity_x(bno055_t* imu, f32* buf) {
 715:./../bno055.c ****     error_bno err;
 716:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 717:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 718:./../bno055.c ****         return err;
 719:./../bno055.c ****     }
 720:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 721:./../bno055.c ****     u8 data[2];
 722:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_X_LSB, data, 2)) != BNO_OK) {
 723:./../bno055.c ****         return err;
 724:./../bno055.c ****     }
 725:./../bno055.c ****     f32 scale = (imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 726:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 727:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 728:./../bno055.c ****     return BNO_OK;
 729:./../bno055.c **** }
 730:./../bno055.c **** 
 731:./../bno055.c **** /**
 732:./../bno055.c ****  * Bosch BNO055 read gravity data on Y-axis
 733:./../bno055.c ****  * ----------------------------------------------------------------------
 734:./../bno055.c ****  *
 735:./../bno055.c ****  * Reads the gravity data and stores the value in the specified
 736:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 737:./../bno055.c ****  * ----------------------------------------------------------------------
 738:./../bno055.c ****  *
 739:./../bno055.c ****  * Args:
 740:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 741:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 742:./../bno055.c ****  * ----------------------------------------------------------------------
 743:./../bno055.c ****  *
 744:./../bno055.c ****  * Return:
 745:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 746:./../bno055.c ****  * ----------------------------------------------------------------------
 747:./../bno055.c ****  */
 748:./../bno055.c **** error_bno bno055_gravity_y(bno055_t* imu, f32* buf) {
ARM GAS  /tmp/cctFn18N.s 			page 15


 749:./../bno055.c ****     error_bno err;
 750:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 751:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 752:./../bno055.c ****         return err;
 753:./../bno055.c ****     }
 754:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 755:./../bno055.c ****     u8 data[2];
 756:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_Y_LSB, data, 2)) != BNO_OK) {
 757:./../bno055.c ****         return err;
 758:./../bno055.c ****     }
 759:./../bno055.c ****     f32 scale = (imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 760:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 761:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 762:./../bno055.c ****     return BNO_OK;
 763:./../bno055.c **** }
 764:./../bno055.c **** 
 765:./../bno055.c **** /**
 766:./../bno055.c ****  * Bosch BNO055 read gravity data on Z-axis
 767:./../bno055.c ****  * ----------------------------------------------------------------------
 768:./../bno055.c ****  *
 769:./../bno055.c ****  * Reads the gravity data and stores the value in the specified
 770:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: m/s^2)
 771:./../bno055.c ****  * ----------------------------------------------------------------------
 772:./../bno055.c ****  *
 773:./../bno055.c ****  * Args:
 774:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 775:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 776:./../bno055.c ****  * ----------------------------------------------------------------------
 777:./../bno055.c ****  *
 778:./../bno055.c ****  * Return:
 779:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 780:./../bno055.c ****  * ----------------------------------------------------------------------
 781:./../bno055.c ****  */
 782:./../bno055.c **** error_bno bno055_gravity_z(bno055_t* imu, f32* buf) {
 783:./../bno055.c ****     error_bno err;
 784:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 785:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 786:./../bno055.c ****         return err;
 787:./../bno055.c ****     }
 788:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 789:./../bno055.c ****     u8 data[2];
 790:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_Z_LSB, data, 2)) != BNO_OK) {
 791:./../bno055.c ****         return err;
 792:./../bno055.c ****     }
 793:./../bno055.c ****     f32 scale = (imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 794:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 795:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 796:./../bno055.c ****     return BNO_OK;
 797:./../bno055.c **** }
 798:./../bno055.c **** 
 799:./../bno055.c **** /**
 800:./../bno055.c ****  * Bosch BNO055 read gravity data on all axis
 801:./../bno055.c ****  * ----------------------------------------------------------------------
 802:./../bno055.c ****  *
 803:./../bno055.c ****  * Reads the gravity data and stores the value in the specified
 804:./../bno055.c ****  * vector buffer. Unit can be selected with `bno055_set_unit(...)` (default:
 805:./../bno055.c ****  * m/s^2).
ARM GAS  /tmp/cctFn18N.s 			page 16


 806:./../bno055.c ****  * ----------------------------------------------------------------------
 807:./../bno055.c ****  *
 808:./../bno055.c ****  * Args:
 809:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 810:./../bno055.c ****  *     > `buf[bno055_vec3_t*]`: Buffer to store the read value in
 811:./../bno055.c ****  * ----------------------------------------------------------------------
 812:./../bno055.c ****  *
 813:./../bno055.c ****  * Return:
 814:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 815:./../bno055.c ****  * ----------------------------------------------------------------------
 816:./../bno055.c ****  */
 817:./../bno055.c **** error_bno bno055_gravity(bno055_t* imu, bno055_vec3_t* buf) {
 818:./../bno055.c ****     error_bno err;
 819:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 820:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 821:./../bno055.c ****         return err;
 822:./../bno055.c ****     }
 823:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 824:./../bno055.c ****     u8 data[6];
 825:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_X_LSB, data, 6)) != BNO_OK) {
 826:./../bno055.c ****         return err;
 827:./../bno055.c ****     }
 828:./../bno055.c ****     f32 scale = (imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 829:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 830:./../bno055.c ****     buf->x = (s16)((data[1] << 8) | data[0]) / scale;
 831:./../bno055.c ****     buf->y = (s16)((data[3] << 8) | data[2]) / scale;
 832:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 833:./../bno055.c ****     return BNO_OK;
 834:./../bno055.c **** }
 835:./../bno055.c **** 
 836:./../bno055.c **** /**
 837:./../bno055.c ****  * Bosch BNO055 read euler yaw data
 838:./../bno055.c ****  * ----------------------------------------------------------------------
 839:./../bno055.c ****  *
 840:./../bno055.c ****  * Reads the yaw data and stores the value in the specified
 841:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: deg)
 842:./../bno055.c ****  * ----------------------------------------------------------------------
 843:./../bno055.c ****  *
 844:./../bno055.c ****  * Args:
 845:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 846:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 847:./../bno055.c ****  * ----------------------------------------------------------------------
 848:./../bno055.c ****  *
 849:./../bno055.c ****  * Return:
 850:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 851:./../bno055.c ****  * ----------------------------------------------------------------------
 852:./../bno055.c ****  */
 853:./../bno055.c **** error_bno bno055_euler_yaw(bno055_t* imu, f32* buf) {
 854:./../bno055.c ****     error_bno err;
 855:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 856:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 857:./../bno055.c ****         return err;
 858:./../bno055.c ****     }
 859:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 860:./../bno055.c ****     u8 data[2];
 861:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_HEADING_LSB, data, 2)) !=
 862:./../bno055.c ****         BNO_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 17


 863:./../bno055.c ****         return err;
 864:./../bno055.c ****     }
 865:./../bno055.c ****     f32 scale = (imu->_eul_unit == BNO_EUL_UNIT_DEG) ? BNO_EUL_SCALE_DEG
 866:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 867:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 868:./../bno055.c ****     return BNO_OK;
 869:./../bno055.c **** }
 870:./../bno055.c **** 
 871:./../bno055.c **** /**
 872:./../bno055.c ****  * Bosch BNO055 read euler roll data
 873:./../bno055.c ****  * ----------------------------------------------------------------------
 874:./../bno055.c ****  *
 875:./../bno055.c ****  * Reads the roll data and stores the value in the specified
 876:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: deg)
 877:./../bno055.c ****  * ----------------------------------------------------------------------
 878:./../bno055.c ****  *
 879:./../bno055.c ****  * Args:
 880:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 881:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 882:./../bno055.c ****  * ----------------------------------------------------------------------
 883:./../bno055.c ****  *
 884:./../bno055.c ****  * Return:
 885:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 886:./../bno055.c ****  * ----------------------------------------------------------------------
 887:./../bno055.c ****  */
 888:./../bno055.c **** error_bno bno055_euler_roll(bno055_t* imu, f32* buf) {
 889:./../bno055.c ****     error_bno err;
 890:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 891:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 892:./../bno055.c ****         return err;
 893:./../bno055.c ****     }
 894:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 895:./../bno055.c ****     u8 data[2];
 896:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_ROLL_LSB, data, 2)) != BNO_OK) {
 897:./../bno055.c ****         return err;
 898:./../bno055.c ****     }
 899:./../bno055.c ****     f32 scale = (imu->_eul_unit == BNO_EUL_UNIT_DEG) ? BNO_EUL_SCALE_DEG
 900:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 901:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 902:./../bno055.c ****     return BNO_OK;
 903:./../bno055.c **** }
 904:./../bno055.c **** 
 905:./../bno055.c **** /**
 906:./../bno055.c ****  * Bosch BNO055 read euler pitch data
 907:./../bno055.c ****  * ----------------------------------------------------------------------
 908:./../bno055.c ****  *
 909:./../bno055.c ****  * Reads the pitch data and stores the value in the specified
 910:./../bno055.c ****  * buffer. Unit can be specified with `bno055_set_unit(...)`. (Default: deg)
 911:./../bno055.c ****  * ----------------------------------------------------------------------
 912:./../bno055.c ****  *
 913:./../bno055.c ****  * Args:
 914:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 915:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 916:./../bno055.c ****  * ----------------------------------------------------------------------
 917:./../bno055.c ****  *
 918:./../bno055.c ****  * Return:
 919:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
ARM GAS  /tmp/cctFn18N.s 			page 18


 920:./../bno055.c ****  * ----------------------------------------------------------------------
 921:./../bno055.c ****  */
 922:./../bno055.c **** error_bno bno055_euler_pitch(bno055_t* imu, f32* buf) {
 923:./../bno055.c ****     error_bno err;
 924:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 925:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 926:./../bno055.c ****         return err;
 927:./../bno055.c ****     }
 928:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 929:./../bno055.c ****     u8 data[2];
 930:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_PITCH_LSB, data, 2)) != BNO_OK) {
 931:./../bno055.c ****         return err;
 932:./../bno055.c ****     }
 933:./../bno055.c ****     f32 scale = (imu->_eul_unit == BNO_EUL_UNIT_DEG) ? BNO_EUL_SCALE_DEG
 934:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 935:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 936:./../bno055.c ****     return BNO_OK;
 937:./../bno055.c **** }
 938:./../bno055.c **** 
 939:./../bno055.c **** /**
 940:./../bno055.c ****  * Bosch BNO055 read euler data on all axis
 941:./../bno055.c ****  * ----------------------------------------------------------------------
 942:./../bno055.c ****  *
 943:./../bno055.c ****  * Reads the euler data and stores the value in the specified
 944:./../bno055.c ****  * vector buffer. Unit can be selected with `bno055_set_unit(...)` (default:
 945:./../bno055.c ****  * deg).
 946:./../bno055.c ****  * ----------------------------------------------------------------------
 947:./../bno055.c ****  *
 948:./../bno055.c ****  * Args:
 949:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 950:./../bno055.c ****  *     > `buf[bno055_euler_t*]`: Buffer to store the read value in
 951:./../bno055.c ****  * ----------------------------------------------------------------------
 952:./../bno055.c ****  *
 953:./../bno055.c ****  * Return:
 954:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 955:./../bno055.c ****  * ----------------------------------------------------------------------
 956:./../bno055.c ****  */
 957:./../bno055.c **** error_bno bno055_euler(bno055_t* imu, bno055_euler_t* buf) {
 958:./../bno055.c ****     error_bno err;
 959:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 960:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 961:./../bno055.c ****         return err;
 962:./../bno055.c ****     }
 963:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
 964:./../bno055.c ****     u8 data[6];
 965:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_HEADING_LSB, data, 6)) !=
 966:./../bno055.c ****         BNO_OK) {
 967:./../bno055.c ****         return err;
 968:./../bno055.c ****     }
 969:./../bno055.c ****     f32 scale = (imu->_eul_unit == BNO_EUL_UNIT_DEG) ? BNO_EUL_SCALE_DEG
 970:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 971:./../bno055.c ****     buf->yaw = (s16)((data[1] << 8) | data[0]) / scale;
 972:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 973:./../bno055.c ****     buf->pitch = (s16)((data[5] << 8) | data[4]) / scale;
 974:./../bno055.c ****     return BNO_OK;
 975:./../bno055.c **** }
 976:./../bno055.c **** 
ARM GAS  /tmp/cctFn18N.s 			page 19


 977:./../bno055.c **** /**
 978:./../bno055.c ****  * Bosch BNO055 read quaternion W-axis data
 979:./../bno055.c ****  * ----------------------------------------------------------------------
 980:./../bno055.c ****  *
 981:./../bno055.c ****  * Reads the quaternion data and stores the value in the specified
 982:./../bno055.c ****  * buffer.
 983:./../bno055.c ****  * ----------------------------------------------------------------------
 984:./../bno055.c ****  *
 985:./../bno055.c ****  * Args:
 986:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
 987:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
 988:./../bno055.c ****  * ----------------------------------------------------------------------
 989:./../bno055.c ****  *
 990:./../bno055.c ****  * Return:
 991:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
 992:./../bno055.c ****  * ----------------------------------------------------------------------
 993:./../bno055.c ****  */
 994:./../bno055.c **** error_bno bno055_quaternion_w(bno055_t* imu, f32* buf) {
 995:./../bno055.c ****     error_bno err;
 996:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 997:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 998:./../bno055.c ****         return err;
 999:./../bno055.c ****     }
1000:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
1001:./../bno055.c ****     u8 data[2];
1002:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_W_LSB, data, 2)) != BNO_OK) {
1003:./../bno055.c ****         return err;
1004:./../bno055.c ****     }
1005:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / (f32)BNO_QUA_SCALE;
1006:./../bno055.c ****     return BNO_OK;
1007:./../bno055.c **** }
1008:./../bno055.c **** 
1009:./../bno055.c **** /**
1010:./../bno055.c ****  * Bosch BNO055 read quaternion X-axis data
1011:./../bno055.c ****  * ----------------------------------------------------------------------
1012:./../bno055.c ****  *
1013:./../bno055.c ****  * Reads the quaternion data and stores the value in the specified
1014:./../bno055.c ****  * buffer.
1015:./../bno055.c ****  * ----------------------------------------------------------------------
1016:./../bno055.c ****  *
1017:./../bno055.c ****  * Args:
1018:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
1019:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
1020:./../bno055.c ****  * ----------------------------------------------------------------------
1021:./../bno055.c ****  *
1022:./../bno055.c ****  * Return:
1023:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
1024:./../bno055.c ****  * ----------------------------------------------------------------------
1025:./../bno055.c ****  */
1026:./../bno055.c **** error_bno bno055_quaternion_x(bno055_t* imu, f32* buf) {
1027:./../bno055.c ****     error_bno err;
1028:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
1029:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1030:./../bno055.c ****         return err;
1031:./../bno055.c ****     }
1032:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
1033:./../bno055.c ****     u8 data[2];
ARM GAS  /tmp/cctFn18N.s 			page 20


1034:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_X_LSB, data, 2)) != BNO_OK) {
1035:./../bno055.c ****         return err;
1036:./../bno055.c ****     }
1037:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / (f32)BNO_QUA_SCALE;
1038:./../bno055.c ****     return BNO_OK;
1039:./../bno055.c **** }
1040:./../bno055.c **** 
1041:./../bno055.c **** /**
1042:./../bno055.c ****  * Bosch BNO055 read quaternion Y-axis data
1043:./../bno055.c ****  * ----------------------------------------------------------------------
1044:./../bno055.c ****  *
1045:./../bno055.c ****  * Reads the quaternion data and stores the value in the specified
1046:./../bno055.c ****  * buffer.
1047:./../bno055.c ****  * ----------------------------------------------------------------------
1048:./../bno055.c ****  *
1049:./../bno055.c ****  * Args:
1050:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
1051:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
1052:./../bno055.c ****  * ----------------------------------------------------------------------
1053:./../bno055.c ****  *
1054:./../bno055.c ****  * Return:
1055:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
1056:./../bno055.c ****  * ----------------------------------------------------------------------
1057:./../bno055.c ****  */
1058:./../bno055.c **** error_bno bno055_quaternion_y(bno055_t* imu, f32* buf) {
1059:./../bno055.c ****     error_bno err;
1060:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
1061:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1062:./../bno055.c ****         return err;
1063:./../bno055.c ****     }
1064:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
1065:./../bno055.c ****     u8 data[2];
1066:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_Y_LSB, data, 2)) != BNO_OK) {
1067:./../bno055.c ****         return err;
1068:./../bno055.c ****     }
1069:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / (f32)BNO_QUA_SCALE;
1070:./../bno055.c ****     return BNO_OK;
1071:./../bno055.c **** }
1072:./../bno055.c **** 
1073:./../bno055.c **** /**
1074:./../bno055.c ****  * Bosch BNO055 read quaternion Z-axis data
1075:./../bno055.c ****  * ----------------------------------------------------------------------
1076:./../bno055.c ****  *
1077:./../bno055.c ****  * Reads the quaternion data and stores the value in the specified
1078:./../bno055.c ****  * buffer.
1079:./../bno055.c ****  * ----------------------------------------------------------------------
1080:./../bno055.c ****  *
1081:./../bno055.c ****  * Args:
1082:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
1083:./../bno055.c ****  *     > `buf[f32*]`: Buffer to store the read value in
1084:./../bno055.c ****  * ----------------------------------------------------------------------
1085:./../bno055.c ****  *
1086:./../bno055.c ****  * Return:
1087:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
1088:./../bno055.c ****  * ----------------------------------------------------------------------
1089:./../bno055.c ****  */
1090:./../bno055.c **** error_bno bno055_quaternion_z(bno055_t* imu, f32* buf) {
ARM GAS  /tmp/cctFn18N.s 			page 21


1091:./../bno055.c ****     error_bno err;
1092:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
1093:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1094:./../bno055.c ****         return err;
1095:./../bno055.c ****     }
1096:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
1097:./../bno055.c ****     u8 data[2];
1098:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_Z_LSB, data, 2)) != BNO_OK) {
1099:./../bno055.c ****         return err;
1100:./../bno055.c ****     }
1101:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / (f32)BNO_QUA_SCALE;
1102:./../bno055.c ****     return BNO_OK;
1103:./../bno055.c **** }
1104:./../bno055.c **** 
1105:./../bno055.c **** /**
1106:./../bno055.c ****  * Bosch BNO055 read quaternion data on all axis
1107:./../bno055.c ****  * ----------------------------------------------------------------------
1108:./../bno055.c ****  *
1109:./../bno055.c ****  * Reads the euler data and stores the value in the specified
1110:./../bno055.c ****  * vector buffer. Unit can be selected with `bno055_set_unit(...)` (default:
1111:./../bno055.c ****  * deg).
1112:./../bno055.c ****  * ----------------------------------------------------------------------
1113:./../bno055.c ****  *
1114:./../bno055.c ****  * Args:
1115:./../bno055.c ****  *     > `imu[bno055_t*]`: BNO055 to read the data from
1116:./../bno055.c ****  *     > `buf[bno055_euler_t*]`: Buffer to store the read value in
1117:./../bno055.c ****  * ----------------------------------------------------------------------
1118:./../bno055.c ****  *
1119:./../bno055.c ****  * Return:
1120:./../bno055.c ****  *     > `error_bno`: `BNO_OK` on success, errorcode else.
1121:./../bno055.c ****  * ----------------------------------------------------------------------
1122:./../bno055.c ****  */
1123:./../bno055.c **** error_bno bno055_quaternion(bno055_t* imu, bno055_vec4_t* buf) {
1124:./../bno055.c ****     error_bno err;
1125:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
1126:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1127:./../bno055.c ****         return err;
1128:./../bno055.c ****     }
1129:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
1130:./../bno055.c ****     u8 data[8];
1131:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_W_LSB, data, 8)) != BNO_OK) {
1132:./../bno055.c ****         return err;
1133:./../bno055.c ****     }
1134:./../bno055.c ****     buf->w = (s16)((data[1] << 8) | data[0]) / (f32)BNO_QUA_SCALE;
1135:./../bno055.c ****     buf->x = (s16)((data[3] << 8) | data[2]) / (f32)BNO_QUA_SCALE;
1136:./../bno055.c ****     buf->y = (s16)((data[5] << 8) | data[4]) / (f32)BNO_QUA_SCALE;
1137:./../bno055.c ****     buf->z = (s16)((data[7] << 8) | data[6]) / (f32)BNO_QUA_SCALE;
1138:./../bno055.c ****     return BNO_OK;
1139:./../bno055.c **** }
1140:./../bno055.c **** 
1141:./../bno055.c **** error_bno bno055_acc_conf(bno055_t* bno, const bno055_acc_range_t range,
1142:./../bno055.c ****                           const bno055_acc_band_t bandwidth,
1143:./../bno055.c ****                           const bno055_acc_mode_t mode) {
1144:./../bno055.c ****     error_bno err;
1145:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_1)) != BNO_OK) {
1146:./../bno055.c ****         return err;
1147:./../bno055.c ****     }
ARM GAS  /tmp/cctFn18N.s 			page 22


1148:./../bno055.c ****     if ((err = bno055_set_opmode(bno, BNO_MODE_CONFIG)) != BNO_OK) {
1149:./../bno055.c ****         return err;
1150:./../bno055.c ****     }
1151:./../bno055.c ****     HAL_Delay(BNO_CONFIG_TIME_DELAY + 5);
1152:./../bno055.c ****     u8 config = range | bandwidth | mode;
1153:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_ACC_CONFIG, &config, 1)) != BNO_OK) {
1154:./../bno055.c ****         return err;
1155:./../bno055.c ****     }
1156:./../bno055.c ****     if ((err = bno055_set_opmode(bno, bno->mode)) != BNO_OK) {
1157:./../bno055.c ****         return err;
1158:./../bno055.c ****     }
1159:./../bno055.c ****     HAL_Delay(BNO_ANY_TIME_DELAY + 5);
1160:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
1161:./../bno055.c ****         return err;
1162:./../bno055.c ****     }
1163:./../bno055.c ****     return BNO_OK;
1164:./../bno055.c **** }
1165:./../bno055.c **** 
1166:./../bno055.c **** error_bno bno055_gyr_conf(bno055_t* bno, const bno055_gyr_range_t range,
1167:./../bno055.c ****                           const bno055_gyr_band_t bandwidth,
1168:./../bno055.c ****                           const bno055_gyr_mode_t mode) {
1169:./../bno055.c ****     error_bno err;
1170:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_1)) != BNO_OK) {
1171:./../bno055.c ****         return err;
1172:./../bno055.c ****     }
1173:./../bno055.c ****     if ((err = bno055_set_opmode(bno, BNO_MODE_CONFIG)) != BNO_OK) {
1174:./../bno055.c ****         return err;
1175:./../bno055.c ****     }
1176:./../bno055.c ****     HAL_Delay(BNO_CONFIG_TIME_DELAY + 5);
1177:./../bno055.c ****     u8 config[2] = {range | bandwidth, mode};
1178:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_GYR_CONFIG_0, config, 2)) !=
1179:./../bno055.c ****         BNO_OK) {
1180:./../bno055.c ****         return err;
1181:./../bno055.c ****     }
1182:./../bno055.c ****     if ((err = bno055_set_opmode(bno, bno->mode)) != BNO_OK) {
1183:./../bno055.c ****         return err;
1184:./../bno055.c ****     }
1185:./../bno055.c ****     HAL_Delay(BNO_ANY_TIME_DELAY + 5);
1186:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
1187:./../bno055.c ****         return err;
1188:./../bno055.c ****     }
1189:./../bno055.c ****     return BNO_OK;
1190:./../bno055.c **** }
1191:./../bno055.c **** error_bno bno055_mag_conf(bno055_t* bno, const bno055_mag_rate_t out_rate,
1192:./../bno055.c ****                           const bno055_mag_pwr_t pwr_mode,
1193:./../bno055.c ****                           const bno055_mag_mode_t mode) {
1194:./../bno055.c ****     error_bno err;
1195:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_1)) != BNO_OK) {
1196:./../bno055.c ****         return err;
1197:./../bno055.c ****     }
1198:./../bno055.c ****     if ((err = bno055_set_opmode(bno, BNO_MODE_CONFIG)) != BNO_OK) {
1199:./../bno055.c ****         return err;
1200:./../bno055.c ****     }
1201:./../bno055.c ****     HAL_Delay(BNO_CONFIG_TIME_DELAY + 5);
1202:./../bno055.c ****     u8 config = out_rate | pwr_mode | mode;
1203:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_MAG_CONFIG, &config, 1)) != BNO_OK) {
1204:./../bno055.c ****         return err;
ARM GAS  /tmp/cctFn18N.s 			page 23


1205:./../bno055.c ****     }
1206:./../bno055.c ****     if ((err = bno055_set_opmode(bno, bno->mode)) != BNO_OK) {
1207:./../bno055.c ****         return err;
1208:./../bno055.c ****     }
1209:./../bno055.c ****     HAL_Delay(BNO_ANY_TIME_DELAY + 5);
1210:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
1211:./../bno055.c ****         return err;
1212:./../bno055.c ****     }
1213:./../bno055.c ****     return BNO_OK;
1214:./../bno055.c **** }
1215:./../bno055.c **** 
1216:./../bno055.c **** error_bno bno055_set_opmode(bno055_t* imu, const bno055_opmode_t opmode) {
1217:./../bno055.c ****     error_bno err;
1218:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
1219:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1220:./../bno055.c ****         return err;
1221:./../bno055.c ****     }
1222:./../bno055.c **** #endif  // BNO_AUTO_PAGE_SET
1223:./../bno055.c ****     if ((err = bno055_write_regs(*imu, BNO_OPR_MODE, (u8*)&opmode, 1)) !=
1224:./../bno055.c ****         BNO_OK) {
1225:./../bno055.c ****         return err;
1226:./../bno055.c ****     }
1227:./../bno055.c ****     HAL_Delay(BNO_ANY_TIME_DELAY + 5);
1228:./../bno055.c ****     return BNO_OK;
1229:./../bno055.c **** }
1230:./../bno055.c **** 
1231:./../bno055.c **** error_bno bno055_set_unit(bno055_t* bno, const bno055_temp_unitsel_t t_unit,
1232:./../bno055.c ****                           const bno055_gyr_unitsel_t g_unit,
1233:./../bno055.c ****                           const bno055_acc_unitsel_t a_unit,
1234:./../bno055.c ****                           const bno055_eul_unitsel_t e_unit) {
1235:./../bno055.c ****     error_bno err;
1236:./../bno055.c ****     if ((err = bno055_set_opmode(bno, BNO_MODE_CONFIG)) != BNO_OK) {
1237:./../bno055.c ****         return err;
1238:./../bno055.c ****     }
1239:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
1240:./../bno055.c ****         return err;
1241:./../bno055.c ****     }
1242:./../bno055.c ****     uint8_t data = t_unit | g_unit | a_unit | e_unit;
1243:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_UNIT_SEL, &data, 1)) != BNO_OK) {
1244:./../bno055.c ****         return err;
1245:./../bno055.c ****     }
1246:./../bno055.c ****     bno->_gyr_unit = g_unit;
1247:./../bno055.c ****     bno->_acc_unit = a_unit;
1248:./../bno055.c ****     bno->_eul_unit = e_unit;
1249:./../bno055.c ****     bno->_temp_unit = t_unit;
1250:./../bno055.c **** 
1251:./../bno055.c ****     if ((err = bno055_set_opmode(bno, bno->mode)) != BNO_OK) {
1252:./../bno055.c ****         return err;
1253:./../bno055.c ****     }
1254:./../bno055.c ****     return BNO_OK;
1255:./../bno055.c **** }
1256:./../bno055.c **** 
1257:./../bno055.c **** error_bno bno055_set_pwr_mode(bno055_t* imu, bno055_pwr_t pwr_mode) {
1258:./../bno055.c ****     if (imu == NULL) {
1259:./../bno055.c ****         return BNO_ERR_NULL_PTR;
1260:./../bno055.c ****     }
1261:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 24


1262:./../bno055.c ****     if ((err = bno055_set_opmode(imu, BNO_MODE_CONFIG)) != BNO_OK) {
1263:./../bno055.c ****         return err;
1264:./../bno055.c ****     }
1265:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1266:./../bno055.c ****         return err;
1267:./../bno055.c ****     }
1268:./../bno055.c ****     if ((err = bno055_write_regs(*imu, BNO_PWR_MODE, (u8*)&pwr_mode, 1)) !=
1269:./../bno055.c ****         BNO_OK) {
1270:./../bno055.c ****         return err;
1271:./../bno055.c ****     }
1272:./../bno055.c ****     imu->_pwr_mode = pwr_mode;
1273:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
1274:./../bno055.c ****         return err;
1275:./../bno055.c ****     }
1276:./../bno055.c ****     if ((err = bno055_set_opmode(imu, imu->mode)) != BNO_OK) {
1277:./../bno055.c ****         return err;
1278:./../bno055.c ****     }
1279:./../bno055.c ****     HAL_Delay(2);
1280:./../bno055.c ****     return BNO_OK;
1281:./../bno055.c **** }
1282:./../bno055.c **** 
1283:./../bno055.c **** error_bno bno055_reset(bno055_t* imu) {
1284:./../bno055.c ****     u8 data = 0x20U;
1285:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
1286:./../bno055.c ****         return BNO_ERR_I2C;
1287:./../bno055.c ****     }
1288:./../bno055.c ****     return BNO_OK;
1289:./../bno055.c **** }
1290:./../bno055.c **** 
1291:./../bno055.c **** error_bno bno055_on(bno055_t* imu) {
1292:./../bno055.c ****     u8 data = 0x00U;
1293:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
1294:./../bno055.c ****         return BNO_ERR_I2C;
1295:./../bno055.c ****     }
1296:./../bno055.c ****     return BNO_OK;
1297:./../bno055.c **** }
1298:./../bno055.c **** 
1299:./../bno055.c **** error_bno bno055_read_regs(bno055_t imu, u8 addr, uint8_t* buf,
1300:./../bno055.c ****                            uint32_t buf_size) {
1301:./../bno055.c ****     HAL_StatusTypeDef err;
1302:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
1303:./../bno055.c ****     // buf,
1304:./../bno055.c ****     //                        buf_size, HAL_MAX_DELAY);
1305:./../bno055.c ****     err = HAL_I2C_Master_Transmit(imu.i2c, imu.addr, &addr, 1, HAL_MAX_DELAY);
  51              		.loc 1 1305 11 view .LVU5
  52 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
  53              	.LBE29:
  54              	.LBE28:
 578:./../bno055.c ****     error_bno err;
  55              		.loc 1 578 49 view .LVU6
  56 0006 85B0     		sub	sp, sp, #20
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 40
  59 0008 0E23     		movs	r3, #14
  60              	.LBB33:
  61              	.LBB30:
  62              		.loc 1 1305 11 view .LVU7
ARM GAS  /tmp/cctFn18N.s 			page 25


  63 000a 4FF0FF37 		mov	r7, #-1
  64              	.LBE30:
  65              	.LBE33:
 578:./../bno055.c ****     error_bno err;
  66              		.loc 1 578 49 view .LVU8
  67 000e 0C46     		mov	r4, r1
  68 0010 8DF80B30 		strb	r3, [sp, #11]
  69              	.LVL2:
  70              	.LBB34:
  71              	.LBI28:
1299:./../bno055.c ****                            uint32_t buf_size) {
  72              		.loc 1 1299 11 is_stmt 1 view .LVU9
  73              	.LBB31:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
  74              		.loc 1 1301 5 view .LVU10
  75              		.loc 1 1305 5 view .LVU11
  76              		.loc 1 1305 11 is_stmt 0 view .LVU12
  77 0014 0097     		str	r7, [sp]
  78              	.LVL3:
  79              		.loc 1 1305 11 view .LVU13
  80 0016 0123     		movs	r3, #1
  81              	.LVL4:
  82              		.loc 1 1305 11 view .LVU14
  83 0018 0DF10B02 		add	r2, sp, #11
  84              	.LVL5:
  85              		.loc 1 1305 11 view .LVU15
  86 001c 3146     		mov	r1, r6
  87              	.LVL6:
  88              		.loc 1 1305 11 view .LVU16
  89 001e 2846     		mov	r0, r5
  90              	.LVL7:
  91              		.loc 1 1305 11 view .LVU17
  92 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  93              	.LVL8:
1306:./../bno055.c ****     if (err != HAL_OK) {
  94              		.loc 1 1306 5 is_stmt 1 view .LVU18
  95              		.loc 1 1306 8 is_stmt 0 view .LVU19
  96 0024 10B1     		cbz	r0, .L2
  97              	.L4:
  98              	.LVL9:
1307:./../bno055.c ****         return BNO_ERR_I2C;
  99              		.loc 1 1307 16 view .LVU20
 100 0026 0120     		movs	r0, #1
 101              	.LBE31:
 102              	.LBE34:
 592:./../bno055.c **** 
 103              		.loc 1 592 1 view .LVU21
 104 0028 05B0     		add	sp, sp, #20
 105              	.LCFI2:
 106              		.cfi_remember_state
 107              		.cfi_def_cfa_offset 20
 108              		@ sp needed
 109 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 110              	.LVL10:
 111              	.L2:
 112              	.LCFI3:
 113              		.cfi_restore_state
ARM GAS  /tmp/cctFn18N.s 			page 26


 114              	.LBB35:
 115              	.LBB32:
1308:./../bno055.c ****     }
1309:./../bno055.c ****     err =
 116              		.loc 1 1309 5 is_stmt 1 view .LVU22
1310:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 117              		.loc 1 1310 9 is_stmt 0 view .LVU23
 118 002c 0097     		str	r7, [sp]
 119 002e 0223     		movs	r3, #2
 120 0030 03AA     		add	r2, sp, #12
 121              	.LVL11:
 122              		.loc 1 1310 9 view .LVU24
 123 0032 3146     		mov	r1, r6
 124 0034 2846     		mov	r0, r5
 125              	.LVL12:
 126              		.loc 1 1310 9 view .LVU25
 127 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 128              	.LVL13:
1311:./../bno055.c ****     if (err != HAL_OK) {
 129              		.loc 1 1311 5 is_stmt 1 view .LVU26
 130              		.loc 1 1311 8 is_stmt 0 view .LVU27
 131 003a 0028     		cmp	r0, #0
 132 003c F3D1     		bne	.L4
 133              	.LVL14:
 134              		.loc 1 1311 8 view .LVU28
 135              	.LBE32:
 136              	.LBE35:
 590:./../bno055.c ****     return BNO_OK;
 137              		.loc 1 590 5 is_stmt 1 view .LVU29
 590:./../bno055.c ****     return BNO_OK;
 138              		.loc 1 590 44 is_stmt 0 view .LVU30
 139 003e BDF90C30 		ldrsh	r3, [sp, #12]
 140 0042 07EE903A 		vmov	s15, r3	@ int
 141 0046 FAEECE7A 		vcvt.f32.s32	s15, s15, #4
 590:./../bno055.c ****     return BNO_OK;
 142              		.loc 1 590 10 view .LVU31
 143 004a C4ED007A 		vstr.32	s15, [r4]
 591:./../bno055.c **** }
 144              		.loc 1 591 5 is_stmt 1 view .LVU32
 592:./../bno055.c **** 
 145              		.loc 1 592 1 is_stmt 0 view .LVU33
 146 004e 05B0     		add	sp, sp, #20
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 20
 149              		@ sp needed
 150 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 592:./../bno055.c **** 
 151              		.loc 1 592 1 view .LVU34
 152              		.cfi_endproc
 153              	.LFE147:
 155 0052 00BF     		.section	.text.bno055_mag_y,"ax",%progbits
 156              		.align	1
 157              		.p2align 2,,3
 158              		.global	bno055_mag_y
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
ARM GAS  /tmp/cctFn18N.s 			page 27


 162              		.fpu fpv4-sp-d16
 164              	bno055_mag_y:
 165              	.LVL15:
 166              	.LFB148:
 612:./../bno055.c ****     error_bno err;
 167              		.loc 1 612 49 is_stmt 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 613:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 171              		.loc 1 613 5 view .LVU36
 619:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_Y_LSB, data, 2)) != BNO_OK) {
 172              		.loc 1 619 5 view .LVU37
 620:./../bno055.c ****         return err;
 173              		.loc 1 620 5 view .LVU38
 612:./../bno055.c ****     error_bno err;
 174              		.loc 1 612 49 is_stmt 0 view .LVU39
 175 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 176              	.LCFI5:
 177              		.cfi_def_cfa_offset 20
 178              		.cfi_offset 4, -20
 179              		.cfi_offset 5, -16
 180              		.cfi_offset 6, -12
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 0568     		ldr	r5, [r0]
 184              	.LVL16:
 185              	.LBB38:
 186              	.LBB39:
1305:./../bno055.c ****     if (err != HAL_OK) {
 187              		.loc 1 1305 11 view .LVU40
 188 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 189              	.LBE39:
 190              	.LBE38:
 612:./../bno055.c ****     error_bno err;
 191              		.loc 1 612 49 view .LVU41
 192 0006 85B0     		sub	sp, sp, #20
 193              	.LCFI6:
 194              		.cfi_def_cfa_offset 40
 195 0008 1023     		movs	r3, #16
 196              	.LBB43:
 197              	.LBB40:
1305:./../bno055.c ****     if (err != HAL_OK) {
 198              		.loc 1 1305 11 view .LVU42
 199 000a 4FF0FF37 		mov	r7, #-1
 200              	.LBE40:
 201              	.LBE43:
 612:./../bno055.c ****     error_bno err;
 202              		.loc 1 612 49 view .LVU43
 203 000e 0C46     		mov	r4, r1
 204 0010 8DF80B30 		strb	r3, [sp, #11]
 205              	.LVL17:
 206              	.LBB44:
 207              	.LBI38:
1299:./../bno055.c ****                            uint32_t buf_size) {
 208              		.loc 1 1299 11 is_stmt 1 view .LVU44
 209              	.LBB41:
ARM GAS  /tmp/cctFn18N.s 			page 28


1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 210              		.loc 1 1301 5 view .LVU45
1305:./../bno055.c ****     if (err != HAL_OK) {
 211              		.loc 1 1305 5 view .LVU46
1305:./../bno055.c ****     if (err != HAL_OK) {
 212              		.loc 1 1305 11 is_stmt 0 view .LVU47
 213 0014 0097     		str	r7, [sp]
 214              	.LVL18:
1305:./../bno055.c ****     if (err != HAL_OK) {
 215              		.loc 1 1305 11 view .LVU48
 216 0016 0123     		movs	r3, #1
 217              	.LVL19:
1305:./../bno055.c ****     if (err != HAL_OK) {
 218              		.loc 1 1305 11 view .LVU49
 219 0018 0DF10B02 		add	r2, sp, #11
 220              	.LVL20:
1305:./../bno055.c ****     if (err != HAL_OK) {
 221              		.loc 1 1305 11 view .LVU50
 222 001c 3146     		mov	r1, r6
 223              	.LVL21:
1305:./../bno055.c ****     if (err != HAL_OK) {
 224              		.loc 1 1305 11 view .LVU51
 225 001e 2846     		mov	r0, r5
 226              	.LVL22:
1305:./../bno055.c ****     if (err != HAL_OK) {
 227              		.loc 1 1305 11 view .LVU52
 228 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 229              	.LVL23:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 230              		.loc 1 1306 5 is_stmt 1 view .LVU53
1306:./../bno055.c ****         return BNO_ERR_I2C;
 231              		.loc 1 1306 8 is_stmt 0 view .LVU54
 232 0024 10B1     		cbz	r0, .L8
 233              	.L10:
 234              	.LVL24:
1307:./../bno055.c ****     }
 235              		.loc 1 1307 16 view .LVU55
 236 0026 0120     		movs	r0, #1
 237              	.LBE41:
 238              	.LBE44:
 626:./../bno055.c **** 
 239              		.loc 1 626 1 view .LVU56
 240 0028 05B0     		add	sp, sp, #20
 241              	.LCFI7:
 242              		.cfi_remember_state
 243              		.cfi_def_cfa_offset 20
 244              		@ sp needed
 245 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 246              	.LVL25:
 247              	.L8:
 248              	.LCFI8:
 249              		.cfi_restore_state
 250              	.LBB45:
 251              	.LBB42:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 252              		.loc 1 1309 5 is_stmt 1 view .LVU57
1310:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 29


 253              		.loc 1 1310 9 is_stmt 0 view .LVU58
 254 002c 0097     		str	r7, [sp]
 255 002e 0223     		movs	r3, #2
 256 0030 03AA     		add	r2, sp, #12
 257              	.LVL26:
1310:./../bno055.c ****     if (err != HAL_OK) {
 258              		.loc 1 1310 9 view .LVU59
 259 0032 3146     		mov	r1, r6
 260 0034 2846     		mov	r0, r5
 261              	.LVL27:
1310:./../bno055.c ****     if (err != HAL_OK) {
 262              		.loc 1 1310 9 view .LVU60
 263 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 264              	.LVL28:
 265              		.loc 1 1311 5 is_stmt 1 view .LVU61
 266              		.loc 1 1311 8 is_stmt 0 view .LVU62
 267 003a 0028     		cmp	r0, #0
 268 003c F3D1     		bne	.L10
 269              	.LVL29:
 270              		.loc 1 1311 8 view .LVU63
 271              	.LBE42:
 272              	.LBE45:
 624:./../bno055.c ****     return BNO_OK;
 273              		.loc 1 624 5 is_stmt 1 view .LVU64
 624:./../bno055.c ****     return BNO_OK;
 274              		.loc 1 624 44 is_stmt 0 view .LVU65
 275 003e BDF90C30 		ldrsh	r3, [sp, #12]
 276 0042 07EE903A 		vmov	s15, r3	@ int
 277 0046 FAEECE7A 		vcvt.f32.s32	s15, s15, #4
 624:./../bno055.c ****     return BNO_OK;
 278              		.loc 1 624 10 view .LVU66
 279 004a C4ED007A 		vstr.32	s15, [r4]
 625:./../bno055.c **** }
 280              		.loc 1 625 5 is_stmt 1 view .LVU67
 626:./../bno055.c **** 
 281              		.loc 1 626 1 is_stmt 0 view .LVU68
 282 004e 05B0     		add	sp, sp, #20
 283              	.LCFI9:
 284              		.cfi_def_cfa_offset 20
 285              		@ sp needed
 286 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 626:./../bno055.c **** 
 287              		.loc 1 626 1 view .LVU69
 288              		.cfi_endproc
 289              	.LFE148:
 291 0052 00BF     		.section	.text.bno055_mag_z,"ax",%progbits
 292              		.align	1
 293              		.p2align 2,,3
 294              		.global	bno055_mag_z
 295              		.syntax unified
 296              		.thumb
 297              		.thumb_func
 298              		.fpu fpv4-sp-d16
 300              	bno055_mag_z:
 301              	.LVL30:
 302              	.LFB149:
 645:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 30


 303              		.loc 1 645 49 is_stmt 1 view -0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 646:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 307              		.loc 1 646 5 view .LVU71
 652:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_Z_LSB, data, 2)) != BNO_OK) {
 308              		.loc 1 652 5 view .LVU72
 653:./../bno055.c ****         return err;
 309              		.loc 1 653 5 view .LVU73
 645:./../bno055.c ****     error_bno err;
 310              		.loc 1 645 49 is_stmt 0 view .LVU74
 311 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 312              	.LCFI10:
 313              		.cfi_def_cfa_offset 20
 314              		.cfi_offset 4, -20
 315              		.cfi_offset 5, -16
 316              		.cfi_offset 6, -12
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 0568     		ldr	r5, [r0]
 320              	.LVL31:
 321              	.LBB48:
 322              	.LBB49:
1305:./../bno055.c ****     if (err != HAL_OK) {
 323              		.loc 1 1305 11 view .LVU75
 324 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 325              	.LBE49:
 326              	.LBE48:
 645:./../bno055.c ****     error_bno err;
 327              		.loc 1 645 49 view .LVU76
 328 0006 85B0     		sub	sp, sp, #20
 329              	.LCFI11:
 330              		.cfi_def_cfa_offset 40
 331 0008 1223     		movs	r3, #18
 332              	.LBB53:
 333              	.LBB50:
1305:./../bno055.c ****     if (err != HAL_OK) {
 334              		.loc 1 1305 11 view .LVU77
 335 000a 4FF0FF37 		mov	r7, #-1
 336              	.LBE50:
 337              	.LBE53:
 645:./../bno055.c ****     error_bno err;
 338              		.loc 1 645 49 view .LVU78
 339 000e 0C46     		mov	r4, r1
 340 0010 8DF80B30 		strb	r3, [sp, #11]
 341              	.LVL32:
 342              	.LBB54:
 343              	.LBI48:
1299:./../bno055.c ****                            uint32_t buf_size) {
 344              		.loc 1 1299 11 is_stmt 1 view .LVU79
 345              	.LBB51:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 346              		.loc 1 1301 5 view .LVU80
1305:./../bno055.c ****     if (err != HAL_OK) {
 347              		.loc 1 1305 5 view .LVU81
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 31


 348              		.loc 1 1305 11 is_stmt 0 view .LVU82
 349 0014 0097     		str	r7, [sp]
 350              	.LVL33:
1305:./../bno055.c ****     if (err != HAL_OK) {
 351              		.loc 1 1305 11 view .LVU83
 352 0016 0123     		movs	r3, #1
 353              	.LVL34:
1305:./../bno055.c ****     if (err != HAL_OK) {
 354              		.loc 1 1305 11 view .LVU84
 355 0018 0DF10B02 		add	r2, sp, #11
 356              	.LVL35:
1305:./../bno055.c ****     if (err != HAL_OK) {
 357              		.loc 1 1305 11 view .LVU85
 358 001c 3146     		mov	r1, r6
 359              	.LVL36:
1305:./../bno055.c ****     if (err != HAL_OK) {
 360              		.loc 1 1305 11 view .LVU86
 361 001e 2846     		mov	r0, r5
 362              	.LVL37:
1305:./../bno055.c ****     if (err != HAL_OK) {
 363              		.loc 1 1305 11 view .LVU87
 364 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 365              	.LVL38:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 366              		.loc 1 1306 5 is_stmt 1 view .LVU88
1306:./../bno055.c ****         return BNO_ERR_I2C;
 367              		.loc 1 1306 8 is_stmt 0 view .LVU89
 368 0024 10B1     		cbz	r0, .L13
 369              	.L15:
 370              	.LVL39:
1307:./../bno055.c ****     }
 371              		.loc 1 1307 16 view .LVU90
 372 0026 0120     		movs	r0, #1
 373              	.LBE51:
 374              	.LBE54:
 659:./../bno055.c **** 
 375              		.loc 1 659 1 view .LVU91
 376 0028 05B0     		add	sp, sp, #20
 377              	.LCFI12:
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 20
 380              		@ sp needed
 381 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 382              	.LVL40:
 383              	.L13:
 384              	.LCFI13:
 385              		.cfi_restore_state
 386              	.LBB55:
 387              	.LBB52:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 388              		.loc 1 1309 5 is_stmt 1 view .LVU92
1310:./../bno055.c ****     if (err != HAL_OK) {
 389              		.loc 1 1310 9 is_stmt 0 view .LVU93
 390 002c 0097     		str	r7, [sp]
 391 002e 0223     		movs	r3, #2
 392 0030 03AA     		add	r2, sp, #12
 393              	.LVL41:
ARM GAS  /tmp/cctFn18N.s 			page 32


1310:./../bno055.c ****     if (err != HAL_OK) {
 394              		.loc 1 1310 9 view .LVU94
 395 0032 3146     		mov	r1, r6
 396 0034 2846     		mov	r0, r5
 397              	.LVL42:
1310:./../bno055.c ****     if (err != HAL_OK) {
 398              		.loc 1 1310 9 view .LVU95
 399 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 400              	.LVL43:
 401              		.loc 1 1311 5 is_stmt 1 view .LVU96
 402              		.loc 1 1311 8 is_stmt 0 view .LVU97
 403 003a 0028     		cmp	r0, #0
 404 003c F3D1     		bne	.L15
 405              	.LVL44:
 406              		.loc 1 1311 8 view .LVU98
 407              	.LBE52:
 408              	.LBE55:
 657:./../bno055.c ****     return BNO_OK;
 409              		.loc 1 657 5 is_stmt 1 view .LVU99
 657:./../bno055.c ****     return BNO_OK;
 410              		.loc 1 657 44 is_stmt 0 view .LVU100
 411 003e BDF90C30 		ldrsh	r3, [sp, #12]
 412 0042 07EE903A 		vmov	s15, r3	@ int
 413 0046 FAEECE7A 		vcvt.f32.s32	s15, s15, #4
 657:./../bno055.c ****     return BNO_OK;
 414              		.loc 1 657 10 view .LVU101
 415 004a C4ED007A 		vstr.32	s15, [r4]
 658:./../bno055.c **** }
 416              		.loc 1 658 5 is_stmt 1 view .LVU102
 659:./../bno055.c **** 
 417              		.loc 1 659 1 is_stmt 0 view .LVU103
 418 004e 05B0     		add	sp, sp, #20
 419              	.LCFI14:
 420              		.cfi_def_cfa_offset 20
 421              		@ sp needed
 422 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
 659:./../bno055.c **** 
 423              		.loc 1 659 1 view .LVU104
 424              		.cfi_endproc
 425              	.LFE149:
 427 0052 00BF     		.section	.text.bno055_quaternion_w,"ax",%progbits
 428              		.align	1
 429              		.p2align 2,,3
 430              		.global	bno055_quaternion_w
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 434              		.fpu fpv4-sp-d16
 436              	bno055_quaternion_w:
 437              	.LVL45:
 438              	.LFB159:
 994:./../bno055.c ****     error_bno err;
 439              		.loc 1 994 56 is_stmt 1 view -0
 440              		.cfi_startproc
 441              		@ args = 0, pretend = 0, frame = 8
 442              		@ frame_needed = 0, uses_anonymous_args = 0
 995:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
ARM GAS  /tmp/cctFn18N.s 			page 33


 443              		.loc 1 995 5 view .LVU106
1001:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_W_LSB, data, 2)) != BNO_OK) {
 444              		.loc 1 1001 5 view .LVU107
1002:./../bno055.c ****         return err;
 445              		.loc 1 1002 5 view .LVU108
 994:./../bno055.c ****     error_bno err;
 446              		.loc 1 994 56 is_stmt 0 view .LVU109
 447 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 448              	.LCFI15:
 449              		.cfi_def_cfa_offset 20
 450              		.cfi_offset 4, -20
 451              		.cfi_offset 5, -16
 452              		.cfi_offset 6, -12
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 0568     		ldr	r5, [r0]
 456              	.LVL46:
 457              	.LBB58:
 458              	.LBB59:
1305:./../bno055.c ****     if (err != HAL_OK) {
 459              		.loc 1 1305 11 view .LVU110
 460 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 461              	.LBE59:
 462              	.LBE58:
 994:./../bno055.c ****     error_bno err;
 463              		.loc 1 994 56 view .LVU111
 464 0006 85B0     		sub	sp, sp, #20
 465              	.LCFI16:
 466              		.cfi_def_cfa_offset 40
 467 0008 2023     		movs	r3, #32
 468              	.LBB63:
 469              	.LBB60:
1305:./../bno055.c ****     if (err != HAL_OK) {
 470              		.loc 1 1305 11 view .LVU112
 471 000a 4FF0FF37 		mov	r7, #-1
 472              	.LBE60:
 473              	.LBE63:
 994:./../bno055.c ****     error_bno err;
 474              		.loc 1 994 56 view .LVU113
 475 000e 0C46     		mov	r4, r1
 476 0010 8DF80B30 		strb	r3, [sp, #11]
 477              	.LVL47:
 478              	.LBB64:
 479              	.LBI58:
1299:./../bno055.c ****                            uint32_t buf_size) {
 480              		.loc 1 1299 11 is_stmt 1 view .LVU114
 481              	.LBB61:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 482              		.loc 1 1301 5 view .LVU115
1305:./../bno055.c ****     if (err != HAL_OK) {
 483              		.loc 1 1305 5 view .LVU116
1305:./../bno055.c ****     if (err != HAL_OK) {
 484              		.loc 1 1305 11 is_stmt 0 view .LVU117
 485 0014 0097     		str	r7, [sp]
 486              	.LVL48:
1305:./../bno055.c ****     if (err != HAL_OK) {
 487              		.loc 1 1305 11 view .LVU118
ARM GAS  /tmp/cctFn18N.s 			page 34


 488 0016 0123     		movs	r3, #1
 489              	.LVL49:
1305:./../bno055.c ****     if (err != HAL_OK) {
 490              		.loc 1 1305 11 view .LVU119
 491 0018 0DF10B02 		add	r2, sp, #11
 492              	.LVL50:
1305:./../bno055.c ****     if (err != HAL_OK) {
 493              		.loc 1 1305 11 view .LVU120
 494 001c 3146     		mov	r1, r6
 495              	.LVL51:
1305:./../bno055.c ****     if (err != HAL_OK) {
 496              		.loc 1 1305 11 view .LVU121
 497 001e 2846     		mov	r0, r5
 498              	.LVL52:
1305:./../bno055.c ****     if (err != HAL_OK) {
 499              		.loc 1 1305 11 view .LVU122
 500 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 501              	.LVL53:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 502              		.loc 1 1306 5 is_stmt 1 view .LVU123
1306:./../bno055.c ****         return BNO_ERR_I2C;
 503              		.loc 1 1306 8 is_stmt 0 view .LVU124
 504 0024 10B1     		cbz	r0, .L18
 505              	.L20:
 506              	.LVL54:
1307:./../bno055.c ****     }
 507              		.loc 1 1307 16 view .LVU125
 508 0026 0120     		movs	r0, #1
 509              	.LBE61:
 510              	.LBE64:
1007:./../bno055.c **** 
 511              		.loc 1 1007 1 view .LVU126
 512 0028 05B0     		add	sp, sp, #20
 513              	.LCFI17:
 514              		.cfi_remember_state
 515              		.cfi_def_cfa_offset 20
 516              		@ sp needed
 517 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 518              	.LVL55:
 519              	.L18:
 520              	.LCFI18:
 521              		.cfi_restore_state
 522              	.LBB65:
 523              	.LBB62:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 524              		.loc 1 1309 5 is_stmt 1 view .LVU127
1310:./../bno055.c ****     if (err != HAL_OK) {
 525              		.loc 1 1310 9 is_stmt 0 view .LVU128
 526 002c 0097     		str	r7, [sp]
 527 002e 0223     		movs	r3, #2
 528 0030 03AA     		add	r2, sp, #12
 529              	.LVL56:
1310:./../bno055.c ****     if (err != HAL_OK) {
 530              		.loc 1 1310 9 view .LVU129
 531 0032 3146     		mov	r1, r6
 532 0034 2846     		mov	r0, r5
 533              	.LVL57:
ARM GAS  /tmp/cctFn18N.s 			page 35


1310:./../bno055.c ****     if (err != HAL_OK) {
 534              		.loc 1 1310 9 view .LVU130
 535 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 536              	.LVL58:
 537              		.loc 1 1311 5 is_stmt 1 view .LVU131
 538              		.loc 1 1311 8 is_stmt 0 view .LVU132
 539 003a 0028     		cmp	r0, #0
 540 003c F3D1     		bne	.L20
 541              	.LVL59:
 542              		.loc 1 1311 8 view .LVU133
 543              	.LBE62:
 544              	.LBE65:
1005:./../bno055.c ****     return BNO_OK;
 545              		.loc 1 1005 5 is_stmt 1 view .LVU134
1005:./../bno055.c ****     return BNO_OK;
 546              		.loc 1 1005 44 is_stmt 0 view .LVU135
 547 003e BDF90C30 		ldrsh	r3, [sp, #12]
 548 0042 07EE903A 		vmov	s15, r3	@ int
 549 0046 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
1005:./../bno055.c ****     return BNO_OK;
 550              		.loc 1 1005 10 view .LVU136
 551 004a C4ED007A 		vstr.32	s15, [r4]
1006:./../bno055.c **** }
 552              		.loc 1 1006 5 is_stmt 1 view .LVU137
1007:./../bno055.c **** 
 553              		.loc 1 1007 1 is_stmt 0 view .LVU138
 554 004e 05B0     		add	sp, sp, #20
 555              	.LCFI19:
 556              		.cfi_def_cfa_offset 20
 557              		@ sp needed
 558 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
1007:./../bno055.c **** 
 559              		.loc 1 1007 1 view .LVU139
 560              		.cfi_endproc
 561              	.LFE159:
 563 0052 00BF     		.section	.text.bno055_quaternion_x,"ax",%progbits
 564              		.align	1
 565              		.p2align 2,,3
 566              		.global	bno055_quaternion_x
 567              		.syntax unified
 568              		.thumb
 569              		.thumb_func
 570              		.fpu fpv4-sp-d16
 572              	bno055_quaternion_x:
 573              	.LVL60:
 574              	.LFB160:
1026:./../bno055.c ****     error_bno err;
 575              		.loc 1 1026 56 is_stmt 1 view -0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 8
 578              		@ frame_needed = 0, uses_anonymous_args = 0
1027:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 579              		.loc 1 1027 5 view .LVU141
1033:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_X_LSB, data, 2)) != BNO_OK) {
 580              		.loc 1 1033 5 view .LVU142
1034:./../bno055.c ****         return err;
 581              		.loc 1 1034 5 view .LVU143
ARM GAS  /tmp/cctFn18N.s 			page 36


1026:./../bno055.c ****     error_bno err;
 582              		.loc 1 1026 56 is_stmt 0 view .LVU144
 583 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 584              	.LCFI20:
 585              		.cfi_def_cfa_offset 20
 586              		.cfi_offset 4, -20
 587              		.cfi_offset 5, -16
 588              		.cfi_offset 6, -12
 589              		.cfi_offset 7, -8
 590              		.cfi_offset 14, -4
 591 0002 0568     		ldr	r5, [r0]
 592              	.LVL61:
 593              	.LBB68:
 594              	.LBB69:
1305:./../bno055.c ****     if (err != HAL_OK) {
 595              		.loc 1 1305 11 view .LVU145
 596 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 597              	.LBE69:
 598              	.LBE68:
1026:./../bno055.c ****     error_bno err;
 599              		.loc 1 1026 56 view .LVU146
 600 0006 85B0     		sub	sp, sp, #20
 601              	.LCFI21:
 602              		.cfi_def_cfa_offset 40
 603 0008 2223     		movs	r3, #34
 604              	.LBB73:
 605              	.LBB70:
1305:./../bno055.c ****     if (err != HAL_OK) {
 606              		.loc 1 1305 11 view .LVU147
 607 000a 4FF0FF37 		mov	r7, #-1
 608              	.LBE70:
 609              	.LBE73:
1026:./../bno055.c ****     error_bno err;
 610              		.loc 1 1026 56 view .LVU148
 611 000e 0C46     		mov	r4, r1
 612 0010 8DF80B30 		strb	r3, [sp, #11]
 613              	.LVL62:
 614              	.LBB74:
 615              	.LBI68:
1299:./../bno055.c ****                            uint32_t buf_size) {
 616              		.loc 1 1299 11 is_stmt 1 view .LVU149
 617              	.LBB71:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 618              		.loc 1 1301 5 view .LVU150
1305:./../bno055.c ****     if (err != HAL_OK) {
 619              		.loc 1 1305 5 view .LVU151
1305:./../bno055.c ****     if (err != HAL_OK) {
 620              		.loc 1 1305 11 is_stmt 0 view .LVU152
 621 0014 0097     		str	r7, [sp]
 622              	.LVL63:
1305:./../bno055.c ****     if (err != HAL_OK) {
 623              		.loc 1 1305 11 view .LVU153
 624 0016 0123     		movs	r3, #1
 625              	.LVL64:
1305:./../bno055.c ****     if (err != HAL_OK) {
 626              		.loc 1 1305 11 view .LVU154
 627 0018 0DF10B02 		add	r2, sp, #11
ARM GAS  /tmp/cctFn18N.s 			page 37


 628              	.LVL65:
1305:./../bno055.c ****     if (err != HAL_OK) {
 629              		.loc 1 1305 11 view .LVU155
 630 001c 3146     		mov	r1, r6
 631              	.LVL66:
1305:./../bno055.c ****     if (err != HAL_OK) {
 632              		.loc 1 1305 11 view .LVU156
 633 001e 2846     		mov	r0, r5
 634              	.LVL67:
1305:./../bno055.c ****     if (err != HAL_OK) {
 635              		.loc 1 1305 11 view .LVU157
 636 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 637              	.LVL68:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 638              		.loc 1 1306 5 is_stmt 1 view .LVU158
1306:./../bno055.c ****         return BNO_ERR_I2C;
 639              		.loc 1 1306 8 is_stmt 0 view .LVU159
 640 0024 10B1     		cbz	r0, .L23
 641              	.L25:
 642              	.LVL69:
1307:./../bno055.c ****     }
 643              		.loc 1 1307 16 view .LVU160
 644 0026 0120     		movs	r0, #1
 645              	.LBE71:
 646              	.LBE74:
1039:./../bno055.c **** 
 647              		.loc 1 1039 1 view .LVU161
 648 0028 05B0     		add	sp, sp, #20
 649              	.LCFI22:
 650              		.cfi_remember_state
 651              		.cfi_def_cfa_offset 20
 652              		@ sp needed
 653 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 654              	.LVL70:
 655              	.L23:
 656              	.LCFI23:
 657              		.cfi_restore_state
 658              	.LBB75:
 659              	.LBB72:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 660              		.loc 1 1309 5 is_stmt 1 view .LVU162
1310:./../bno055.c ****     if (err != HAL_OK) {
 661              		.loc 1 1310 9 is_stmt 0 view .LVU163
 662 002c 0097     		str	r7, [sp]
 663 002e 0223     		movs	r3, #2
 664 0030 03AA     		add	r2, sp, #12
 665              	.LVL71:
1310:./../bno055.c ****     if (err != HAL_OK) {
 666              		.loc 1 1310 9 view .LVU164
 667 0032 3146     		mov	r1, r6
 668 0034 2846     		mov	r0, r5
 669              	.LVL72:
1310:./../bno055.c ****     if (err != HAL_OK) {
 670              		.loc 1 1310 9 view .LVU165
 671 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 672              	.LVL73:
 673              		.loc 1 1311 5 is_stmt 1 view .LVU166
ARM GAS  /tmp/cctFn18N.s 			page 38


 674              		.loc 1 1311 8 is_stmt 0 view .LVU167
 675 003a 0028     		cmp	r0, #0
 676 003c F3D1     		bne	.L25
 677              	.LVL74:
 678              		.loc 1 1311 8 view .LVU168
 679              	.LBE72:
 680              	.LBE75:
1037:./../bno055.c ****     return BNO_OK;
 681              		.loc 1 1037 5 is_stmt 1 view .LVU169
1037:./../bno055.c ****     return BNO_OK;
 682              		.loc 1 1037 44 is_stmt 0 view .LVU170
 683 003e BDF90C30 		ldrsh	r3, [sp, #12]
 684 0042 07EE903A 		vmov	s15, r3	@ int
 685 0046 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
1037:./../bno055.c ****     return BNO_OK;
 686              		.loc 1 1037 10 view .LVU171
 687 004a C4ED007A 		vstr.32	s15, [r4]
1038:./../bno055.c **** }
 688              		.loc 1 1038 5 is_stmt 1 view .LVU172
1039:./../bno055.c **** 
 689              		.loc 1 1039 1 is_stmt 0 view .LVU173
 690 004e 05B0     		add	sp, sp, #20
 691              	.LCFI24:
 692              		.cfi_def_cfa_offset 20
 693              		@ sp needed
 694 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
1039:./../bno055.c **** 
 695              		.loc 1 1039 1 view .LVU174
 696              		.cfi_endproc
 697              	.LFE160:
 699 0052 00BF     		.section	.text.bno055_quaternion_y,"ax",%progbits
 700              		.align	1
 701              		.p2align 2,,3
 702              		.global	bno055_quaternion_y
 703              		.syntax unified
 704              		.thumb
 705              		.thumb_func
 706              		.fpu fpv4-sp-d16
 708              	bno055_quaternion_y:
 709              	.LVL75:
 710              	.LFB161:
1058:./../bno055.c ****     error_bno err;
 711              		.loc 1 1058 56 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 8
 714              		@ frame_needed = 0, uses_anonymous_args = 0
1059:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 715              		.loc 1 1059 5 view .LVU176
1065:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_Y_LSB, data, 2)) != BNO_OK) {
 716              		.loc 1 1065 5 view .LVU177
1066:./../bno055.c ****         return err;
 717              		.loc 1 1066 5 view .LVU178
1058:./../bno055.c ****     error_bno err;
 718              		.loc 1 1058 56 is_stmt 0 view .LVU179
 719 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 720              	.LCFI25:
 721              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cctFn18N.s 			page 39


 722              		.cfi_offset 4, -20
 723              		.cfi_offset 5, -16
 724              		.cfi_offset 6, -12
 725              		.cfi_offset 7, -8
 726              		.cfi_offset 14, -4
 727 0002 0568     		ldr	r5, [r0]
 728              	.LVL76:
 729              	.LBB78:
 730              	.LBB79:
1305:./../bno055.c ****     if (err != HAL_OK) {
 731              		.loc 1 1305 11 view .LVU180
 732 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 733              	.LBE79:
 734              	.LBE78:
1058:./../bno055.c ****     error_bno err;
 735              		.loc 1 1058 56 view .LVU181
 736 0006 85B0     		sub	sp, sp, #20
 737              	.LCFI26:
 738              		.cfi_def_cfa_offset 40
 739 0008 2423     		movs	r3, #36
 740              	.LBB83:
 741              	.LBB80:
1305:./../bno055.c ****     if (err != HAL_OK) {
 742              		.loc 1 1305 11 view .LVU182
 743 000a 4FF0FF37 		mov	r7, #-1
 744              	.LBE80:
 745              	.LBE83:
1058:./../bno055.c ****     error_bno err;
 746              		.loc 1 1058 56 view .LVU183
 747 000e 0C46     		mov	r4, r1
 748 0010 8DF80B30 		strb	r3, [sp, #11]
 749              	.LVL77:
 750              	.LBB84:
 751              	.LBI78:
1299:./../bno055.c ****                            uint32_t buf_size) {
 752              		.loc 1 1299 11 is_stmt 1 view .LVU184
 753              	.LBB81:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 754              		.loc 1 1301 5 view .LVU185
1305:./../bno055.c ****     if (err != HAL_OK) {
 755              		.loc 1 1305 5 view .LVU186
1305:./../bno055.c ****     if (err != HAL_OK) {
 756              		.loc 1 1305 11 is_stmt 0 view .LVU187
 757 0014 0097     		str	r7, [sp]
 758              	.LVL78:
1305:./../bno055.c ****     if (err != HAL_OK) {
 759              		.loc 1 1305 11 view .LVU188
 760 0016 0123     		movs	r3, #1
 761              	.LVL79:
1305:./../bno055.c ****     if (err != HAL_OK) {
 762              		.loc 1 1305 11 view .LVU189
 763 0018 0DF10B02 		add	r2, sp, #11
 764              	.LVL80:
1305:./../bno055.c ****     if (err != HAL_OK) {
 765              		.loc 1 1305 11 view .LVU190
 766 001c 3146     		mov	r1, r6
 767              	.LVL81:
ARM GAS  /tmp/cctFn18N.s 			page 40


1305:./../bno055.c ****     if (err != HAL_OK) {
 768              		.loc 1 1305 11 view .LVU191
 769 001e 2846     		mov	r0, r5
 770              	.LVL82:
1305:./../bno055.c ****     if (err != HAL_OK) {
 771              		.loc 1 1305 11 view .LVU192
 772 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 773              	.LVL83:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 774              		.loc 1 1306 5 is_stmt 1 view .LVU193
1306:./../bno055.c ****         return BNO_ERR_I2C;
 775              		.loc 1 1306 8 is_stmt 0 view .LVU194
 776 0024 10B1     		cbz	r0, .L28
 777              	.L30:
 778              	.LVL84:
1307:./../bno055.c ****     }
 779              		.loc 1 1307 16 view .LVU195
 780 0026 0120     		movs	r0, #1
 781              	.LBE81:
 782              	.LBE84:
1071:./../bno055.c **** 
 783              		.loc 1 1071 1 view .LVU196
 784 0028 05B0     		add	sp, sp, #20
 785              	.LCFI27:
 786              		.cfi_remember_state
 787              		.cfi_def_cfa_offset 20
 788              		@ sp needed
 789 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 790              	.LVL85:
 791              	.L28:
 792              	.LCFI28:
 793              		.cfi_restore_state
 794              	.LBB85:
 795              	.LBB82:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 796              		.loc 1 1309 5 is_stmt 1 view .LVU197
1310:./../bno055.c ****     if (err != HAL_OK) {
 797              		.loc 1 1310 9 is_stmt 0 view .LVU198
 798 002c 0097     		str	r7, [sp]
 799 002e 0223     		movs	r3, #2
 800 0030 03AA     		add	r2, sp, #12
 801              	.LVL86:
1310:./../bno055.c ****     if (err != HAL_OK) {
 802              		.loc 1 1310 9 view .LVU199
 803 0032 3146     		mov	r1, r6
 804 0034 2846     		mov	r0, r5
 805              	.LVL87:
1310:./../bno055.c ****     if (err != HAL_OK) {
 806              		.loc 1 1310 9 view .LVU200
 807 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 808              	.LVL88:
 809              		.loc 1 1311 5 is_stmt 1 view .LVU201
 810              		.loc 1 1311 8 is_stmt 0 view .LVU202
 811 003a 0028     		cmp	r0, #0
 812 003c F3D1     		bne	.L30
 813              	.LVL89:
 814              		.loc 1 1311 8 view .LVU203
ARM GAS  /tmp/cctFn18N.s 			page 41


 815              	.LBE82:
 816              	.LBE85:
1069:./../bno055.c ****     return BNO_OK;
 817              		.loc 1 1069 5 is_stmt 1 view .LVU204
1069:./../bno055.c ****     return BNO_OK;
 818              		.loc 1 1069 44 is_stmt 0 view .LVU205
 819 003e BDF90C30 		ldrsh	r3, [sp, #12]
 820 0042 07EE903A 		vmov	s15, r3	@ int
 821 0046 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
1069:./../bno055.c ****     return BNO_OK;
 822              		.loc 1 1069 10 view .LVU206
 823 004a C4ED007A 		vstr.32	s15, [r4]
1070:./../bno055.c **** }
 824              		.loc 1 1070 5 is_stmt 1 view .LVU207
1071:./../bno055.c **** 
 825              		.loc 1 1071 1 is_stmt 0 view .LVU208
 826 004e 05B0     		add	sp, sp, #20
 827              	.LCFI29:
 828              		.cfi_def_cfa_offset 20
 829              		@ sp needed
 830 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
1071:./../bno055.c **** 
 831              		.loc 1 1071 1 view .LVU209
 832              		.cfi_endproc
 833              	.LFE161:
 835 0052 00BF     		.section	.text.bno055_quaternion_z,"ax",%progbits
 836              		.align	1
 837              		.p2align 2,,3
 838              		.global	bno055_quaternion_z
 839              		.syntax unified
 840              		.thumb
 841              		.thumb_func
 842              		.fpu fpv4-sp-d16
 844              	bno055_quaternion_z:
 845              	.LVL90:
 846              	.LFB162:
1090:./../bno055.c ****     error_bno err;
 847              		.loc 1 1090 56 is_stmt 1 view -0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 8
 850              		@ frame_needed = 0, uses_anonymous_args = 0
1091:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 851              		.loc 1 1091 5 view .LVU211
1097:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_Z_LSB, data, 2)) != BNO_OK) {
 852              		.loc 1 1097 5 view .LVU212
1098:./../bno055.c ****         return err;
 853              		.loc 1 1098 5 view .LVU213
1090:./../bno055.c ****     error_bno err;
 854              		.loc 1 1090 56 is_stmt 0 view .LVU214
 855 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 856              	.LCFI30:
 857              		.cfi_def_cfa_offset 20
 858              		.cfi_offset 4, -20
 859              		.cfi_offset 5, -16
 860              		.cfi_offset 6, -12
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
ARM GAS  /tmp/cctFn18N.s 			page 42


 863 0002 0568     		ldr	r5, [r0]
 864              	.LVL91:
 865              	.LBB88:
 866              	.LBB89:
1305:./../bno055.c ****     if (err != HAL_OK) {
 867              		.loc 1 1305 11 view .LVU215
 868 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 869              	.LBE89:
 870              	.LBE88:
1090:./../bno055.c ****     error_bno err;
 871              		.loc 1 1090 56 view .LVU216
 872 0006 85B0     		sub	sp, sp, #20
 873              	.LCFI31:
 874              		.cfi_def_cfa_offset 40
 875 0008 2623     		movs	r3, #38
 876              	.LBB93:
 877              	.LBB90:
1305:./../bno055.c ****     if (err != HAL_OK) {
 878              		.loc 1 1305 11 view .LVU217
 879 000a 4FF0FF37 		mov	r7, #-1
 880              	.LBE90:
 881              	.LBE93:
1090:./../bno055.c ****     error_bno err;
 882              		.loc 1 1090 56 view .LVU218
 883 000e 0C46     		mov	r4, r1
 884 0010 8DF80B30 		strb	r3, [sp, #11]
 885              	.LVL92:
 886              	.LBB94:
 887              	.LBI88:
1299:./../bno055.c ****                            uint32_t buf_size) {
 888              		.loc 1 1299 11 is_stmt 1 view .LVU219
 889              	.LBB91:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 890              		.loc 1 1301 5 view .LVU220
1305:./../bno055.c ****     if (err != HAL_OK) {
 891              		.loc 1 1305 5 view .LVU221
1305:./../bno055.c ****     if (err != HAL_OK) {
 892              		.loc 1 1305 11 is_stmt 0 view .LVU222
 893 0014 0097     		str	r7, [sp]
 894              	.LVL93:
1305:./../bno055.c ****     if (err != HAL_OK) {
 895              		.loc 1 1305 11 view .LVU223
 896 0016 0123     		movs	r3, #1
 897              	.LVL94:
1305:./../bno055.c ****     if (err != HAL_OK) {
 898              		.loc 1 1305 11 view .LVU224
 899 0018 0DF10B02 		add	r2, sp, #11
 900              	.LVL95:
1305:./../bno055.c ****     if (err != HAL_OK) {
 901              		.loc 1 1305 11 view .LVU225
 902 001c 3146     		mov	r1, r6
 903              	.LVL96:
1305:./../bno055.c ****     if (err != HAL_OK) {
 904              		.loc 1 1305 11 view .LVU226
 905 001e 2846     		mov	r0, r5
 906              	.LVL97:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 43


 907              		.loc 1 1305 11 view .LVU227
 908 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 909              	.LVL98:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 910              		.loc 1 1306 5 is_stmt 1 view .LVU228
1306:./../bno055.c ****         return BNO_ERR_I2C;
 911              		.loc 1 1306 8 is_stmt 0 view .LVU229
 912 0024 10B1     		cbz	r0, .L33
 913              	.L35:
 914              	.LVL99:
1307:./../bno055.c ****     }
 915              		.loc 1 1307 16 view .LVU230
 916 0026 0120     		movs	r0, #1
 917              	.LBE91:
 918              	.LBE94:
1103:./../bno055.c **** 
 919              		.loc 1 1103 1 view .LVU231
 920 0028 05B0     		add	sp, sp, #20
 921              	.LCFI32:
 922              		.cfi_remember_state
 923              		.cfi_def_cfa_offset 20
 924              		@ sp needed
 925 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 926              	.LVL100:
 927              	.L33:
 928              	.LCFI33:
 929              		.cfi_restore_state
 930              	.LBB95:
 931              	.LBB92:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 932              		.loc 1 1309 5 is_stmt 1 view .LVU232
1310:./../bno055.c ****     if (err != HAL_OK) {
 933              		.loc 1 1310 9 is_stmt 0 view .LVU233
 934 002c 0097     		str	r7, [sp]
 935 002e 0223     		movs	r3, #2
 936 0030 03AA     		add	r2, sp, #12
 937              	.LVL101:
1310:./../bno055.c ****     if (err != HAL_OK) {
 938              		.loc 1 1310 9 view .LVU234
 939 0032 3146     		mov	r1, r6
 940 0034 2846     		mov	r0, r5
 941              	.LVL102:
1310:./../bno055.c ****     if (err != HAL_OK) {
 942              		.loc 1 1310 9 view .LVU235
 943 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 944              	.LVL103:
 945              		.loc 1 1311 5 is_stmt 1 view .LVU236
 946              		.loc 1 1311 8 is_stmt 0 view .LVU237
 947 003a 0028     		cmp	r0, #0
 948 003c F3D1     		bne	.L35
 949              	.LVL104:
 950              		.loc 1 1311 8 view .LVU238
 951              	.LBE92:
 952              	.LBE95:
1101:./../bno055.c ****     return BNO_OK;
 953              		.loc 1 1101 5 is_stmt 1 view .LVU239
1101:./../bno055.c ****     return BNO_OK;
ARM GAS  /tmp/cctFn18N.s 			page 44


 954              		.loc 1 1101 44 is_stmt 0 view .LVU240
 955 003e BDF90C30 		ldrsh	r3, [sp, #12]
 956 0042 07EE903A 		vmov	s15, r3	@ int
 957 0046 FAEEC97A 		vcvt.f32.s32	s15, s15, #14
1101:./../bno055.c ****     return BNO_OK;
 958              		.loc 1 1101 10 view .LVU241
 959 004a C4ED007A 		vstr.32	s15, [r4]
1102:./../bno055.c **** }
 960              		.loc 1 1102 5 is_stmt 1 view .LVU242
1103:./../bno055.c **** 
 961              		.loc 1 1103 1 is_stmt 0 view .LVU243
 962 004e 05B0     		add	sp, sp, #20
 963              	.LCFI34:
 964              		.cfi_def_cfa_offset 20
 965              		@ sp needed
 966 0050 F0BD     		pop	{r4, r5, r6, r7, pc}
1103:./../bno055.c **** 
 967              		.loc 1 1103 1 view .LVU244
 968              		.cfi_endproc
 969              	.LFE162:
 971 0052 00BF     		.section	.text.bno055_temperature,"ax",%progbits
 972              		.align	1
 973              		.p2align 2,,3
 974              		.global	bno055_temperature
 975              		.syntax unified
 976              		.thumb
 977              		.thumb_func
 978              		.fpu fpv4-sp-d16
 980              	bno055_temperature:
 981              	.LVL105:
 982              	.LFB134:
 113:./../bno055.c ****     error_bno err;
 983              		.loc 1 113 54 is_stmt 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 16
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 114:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 987              		.loc 1 114 5 view .LVU246
 120:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_TEMP, &data, 1)) != BNO_OK) {
 988              		.loc 1 120 5 view .LVU247
 113:./../bno055.c ****     error_bno err;
 989              		.loc 1 113 54 is_stmt 0 view .LVU248
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              	.LCFI35:
 992              		.cfi_def_cfa_offset 20
 993              		.cfi_offset 4, -20
 994              		.cfi_offset 5, -16
 995              		.cfi_offset 6, -12
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 87B0     		sub	sp, sp, #28
 999              	.LCFI36:
 1000              		.cfi_def_cfa_offset 48
 1001 0004 0668     		ldr	r6, [r0]
 120:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_TEMP, &data, 1)) != BNO_OK) {
 1002              		.loc 1 120 8 view .LVU249
 1003 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cctFn18N.s 			page 45


 1004              	.LBB98:
 1005              	.LBB99:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1006              		.loc 1 1305 11 view .LVU250
 1007 0008 4FF0FF37 		mov	r7, #-1
 1008 000c 0097     		str	r7, [sp]
 1009              	.LBE99:
 1010              	.LBE98:
 120:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_TEMP, &data, 1)) != BNO_OK) {
 1011              		.loc 1 120 8 view .LVU251
 1012 000e 8DF81630 		strb	r3, [sp, #22]
 121:./../bno055.c ****         return err;
 1013              		.loc 1 121 5 is_stmt 1 view .LVU252
 1014              	.LVL106:
 121:./../bno055.c ****         return err;
 1015              		.loc 1 121 5 is_stmt 0 view .LVU253
 1016 0012 3423     		movs	r3, #52
 1017 0014 8DF81730 		strb	r3, [sp, #23]
 1018              	.LVL107:
 1019              	.LBB103:
 1020              	.LBI98:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1021              		.loc 1 1299 11 is_stmt 1 view .LVU254
 1022              	.LBB100:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1023              		.loc 1 1301 5 view .LVU255
1305:./../bno055.c ****     if (err != HAL_OK) {
 1024              		.loc 1 1305 5 view .LVU256
 1025              	.LBE100:
 1026              	.LBE103:
 113:./../bno055.c ****     error_bno err;
 1027              		.loc 1 113 54 is_stmt 0 view .LVU257
 1028 0018 0446     		mov	r4, r0
 1029 001a 0D46     		mov	r5, r1
 1030              	.LBB104:
 1031              	.LBB101:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1032              		.loc 1 1305 11 view .LVU258
 1033 001c 0123     		movs	r3, #1
 1034              	.LVL108:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1035              		.loc 1 1305 11 view .LVU259
 1036 001e 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1037              	.LVL109:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1038              		.loc 1 1305 11 view .LVU260
 1039 0020 0391     		str	r1, [sp, #12]
 1040 0022 0DF11702 		add	r2, sp, #23
 1041              	.LVL110:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1042              		.loc 1 1305 11 view .LVU261
 1043 0026 3046     		mov	r0, r6
 1044              	.LVL111:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1045              		.loc 1 1305 11 view .LVU262
 1046 0028 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1047              	.LVL112:
ARM GAS  /tmp/cctFn18N.s 			page 46


1306:./../bno055.c ****         return BNO_ERR_I2C;
 1048              		.loc 1 1306 5 is_stmt 1 view .LVU263
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1049              		.loc 1 1306 8 is_stmt 0 view .LVU264
 1050 002c 0399     		ldr	r1, [sp, #12]
 1051 002e 10B1     		cbz	r0, .L38
 1052              	.L40:
 1053              	.LVL113:
1307:./../bno055.c ****     }
 1054              		.loc 1 1307 16 view .LVU265
 1055 0030 0120     		movs	r0, #1
 1056              	.LBE101:
 1057              	.LBE104:
 126:./../bno055.c **** 
 1058              		.loc 1 126 1 view .LVU266
 1059 0032 07B0     		add	sp, sp, #28
 1060              	.LCFI37:
 1061              		.cfi_remember_state
 1062              		.cfi_def_cfa_offset 20
 1063              		@ sp needed
 1064 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 1065              	.LVL114:
 1066              	.L38:
 1067              	.LCFI38:
 1068              		.cfi_restore_state
 1069              	.LBB105:
 1070              	.LBB102:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1071              		.loc 1 1309 5 is_stmt 1 view .LVU267
1310:./../bno055.c ****     if (err != HAL_OK) {
 1072              		.loc 1 1310 9 is_stmt 0 view .LVU268
 1073 0036 0097     		str	r7, [sp]
 1074 0038 0123     		movs	r3, #1
 1075 003a 3046     		mov	r0, r6
 1076              	.LVL115:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1077              		.loc 1 1310 9 view .LVU269
 1078 003c 0DF11602 		add	r2, sp, #22
 1079              	.LVL116:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1080              		.loc 1 1310 9 view .LVU270
 1081 0040 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1082              	.LVL117:
 1083              		.loc 1 1311 5 is_stmt 1 view .LVU271
 1084              		.loc 1 1311 8 is_stmt 0 view .LVU272
 1085 0044 0028     		cmp	r0, #0
 1086 0046 F3D1     		bne	.L40
 1087              	.LVL118:
 1088              		.loc 1 1311 8 view .LVU273
 1089              	.LBE102:
 1090              	.LBE105:
 124:./../bno055.c ****     return BNO_OK;
 1091              		.loc 1 124 5 is_stmt 1 view .LVU274
 124:./../bno055.c ****     return BNO_OK;
 1092              		.loc 1 124 10 is_stmt 0 view .LVU275
 1093 0048 E37B     		ldrb	r3, [r4, #15]	@ zero_extendqisi2
 1094 004a 33B1     		cbz	r3, .L41
ARM GAS  /tmp/cctFn18N.s 			page 47


 124:./../bno055.c ****     return BNO_OK;
 1095              		.loc 1 124 10 discriminator 1 view .LVU276
 1096 004c 9DF81630 		ldrb	r3, [sp, #22]	@ zero_extendqisi2
 1097 0050 5B00     		lsls	r3, r3, #1
 1098 0052 5BB2     		sxtb	r3, r3
 1099 0054 2B70     		strb	r3, [r5]
 125:./../bno055.c **** }
 1100              		.loc 1 125 5 is_stmt 1 discriminator 1 view .LVU277
 1101              	.L44:
 126:./../bno055.c **** 
 1102              		.loc 1 126 1 is_stmt 0 view .LVU278
 1103 0056 07B0     		add	sp, sp, #28
 1104              	.LCFI39:
 1105              		.cfi_remember_state
 1106              		.cfi_def_cfa_offset 20
 1107              		@ sp needed
 1108 0058 F0BD     		pop	{r4, r5, r6, r7, pc}
 1109              	.LVL119:
 1110              	.L41:
 1111              	.LCFI40:
 1112              		.cfi_restore_state
 124:./../bno055.c ****     return BNO_OK;
 1113              		.loc 1 124 10 discriminator 2 view .LVU279
 1114 005a 9DF91630 		ldrsb	r3, [sp, #22]
 1115 005e 2B70     		strb	r3, [r5]
 125:./../bno055.c **** }
 1116              		.loc 1 125 5 is_stmt 1 discriminator 2 view .LVU280
 1117 0060 F9E7     		b	.L44
 1118              		.cfi_endproc
 1119              	.LFE134:
 1121 0062 00BF     		.section	.text.bno055_acc_x,"ax",%progbits
 1122              		.align	1
 1123              		.p2align 2,,3
 1124              		.global	bno055_acc_x
 1125              		.syntax unified
 1126              		.thumb
 1127              		.thumb_func
 1128              		.fpu fpv4-sp-d16
 1130              	bno055_acc_x:
 1131              	.LVL120:
 1132              	.LFB135:
 145:./../bno055.c ****     error_bno err;
 1133              		.loc 1 145 49 view -0
 1134              		.cfi_startproc
 1135              		@ args = 0, pretend = 0, frame = 16
 1136              		@ frame_needed = 0, uses_anonymous_args = 0
 146:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 1137              		.loc 1 146 5 view .LVU282
 152:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_X_LSB, data, 2)) != BNO_OK) {
 1138              		.loc 1 152 5 view .LVU283
 153:./../bno055.c ****         return err;
 1139              		.loc 1 153 5 view .LVU284
 145:./../bno055.c ****     error_bno err;
 1140              		.loc 1 145 49 is_stmt 0 view .LVU285
 1141 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1142              	.LCFI41:
 1143              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/cctFn18N.s 			page 48


 1144              		.cfi_offset 4, -20
 1145              		.cfi_offset 5, -16
 1146              		.cfi_offset 6, -12
 1147              		.cfi_offset 7, -8
 1148              		.cfi_offset 14, -4
 1149 0002 87B0     		sub	sp, sp, #28
 1150              	.LCFI42:
 1151              		.cfi_def_cfa_offset 48
 1152 0004 0668     		ldr	r6, [r0]
 1153              	.LVL121:
 1154              	.LBB108:
 1155              	.LBB109:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1156              		.loc 1 1305 11 view .LVU286
 1157 0006 4FF0FF37 		mov	r7, #-1
 1158 000a 0823     		movs	r3, #8
 1159 000c 0097     		str	r7, [sp]
 1160              	.LVL122:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1161              		.loc 1 1305 11 view .LVU287
 1162 000e 8DF81330 		strb	r3, [sp, #19]
 1163              	.LVL123:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1164              		.loc 1 1305 11 view .LVU288
 1165              	.LBE109:
 1166              	.LBI108:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1167              		.loc 1 1299 11 is_stmt 1 view .LVU289
 1168              	.LBB110:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1169              		.loc 1 1301 5 view .LVU290
1305:./../bno055.c ****     if (err != HAL_OK) {
 1170              		.loc 1 1305 5 view .LVU291
 1171              	.LBE110:
 1172              	.LBE108:
 145:./../bno055.c ****     error_bno err;
 1173              		.loc 1 145 49 is_stmt 0 view .LVU292
 1174 0012 0446     		mov	r4, r0
 1175 0014 0D46     		mov	r5, r1
 1176              	.LBB113:
 1177              	.LBB111:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1178              		.loc 1 1305 11 view .LVU293
 1179 0016 0123     		movs	r3, #1
 1180              	.LVL124:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1181              		.loc 1 1305 11 view .LVU294
 1182 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1183              	.LVL125:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1184              		.loc 1 1305 11 view .LVU295
 1185 001a 0391     		str	r1, [sp, #12]
 1186 001c 0DF11302 		add	r2, sp, #19
 1187              	.LVL126:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1188              		.loc 1 1305 11 view .LVU296
 1189 0020 3046     		mov	r0, r6
ARM GAS  /tmp/cctFn18N.s 			page 49


 1190              	.LVL127:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1191              		.loc 1 1305 11 view .LVU297
 1192 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1193              	.LVL128:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1194              		.loc 1 1306 5 is_stmt 1 view .LVU298
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1195              		.loc 1 1306 8 is_stmt 0 view .LVU299
 1196 0026 0399     		ldr	r1, [sp, #12]
 1197 0028 10B1     		cbz	r0, .L46
 1198              	.L48:
 1199              	.LVL129:
1307:./../bno055.c ****     }
 1200              		.loc 1 1307 16 view .LVU300
 1201 002a 0120     		movs	r0, #1
 1202              	.LBE111:
 1203              	.LBE113:
 161:./../bno055.c **** 
 1204              		.loc 1 161 1 view .LVU301
 1205 002c 07B0     		add	sp, sp, #28
 1206              	.LCFI43:
 1207              		.cfi_remember_state
 1208              		.cfi_def_cfa_offset 20
 1209              		@ sp needed
 1210 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1211              	.LVL130:
 1212              	.L46:
 1213              	.LCFI44:
 1214              		.cfi_restore_state
 1215              	.LBB114:
 1216              	.LBB112:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1217              		.loc 1 1309 5 is_stmt 1 view .LVU302
1310:./../bno055.c ****     if (err != HAL_OK) {
 1218              		.loc 1 1310 9 is_stmt 0 view .LVU303
 1219 0030 0097     		str	r7, [sp]
 1220 0032 0223     		movs	r3, #2
 1221 0034 3046     		mov	r0, r6
 1222              	.LVL131:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1223              		.loc 1 1310 9 view .LVU304
 1224 0036 05AA     		add	r2, sp, #20
 1225              	.LVL132:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1226              		.loc 1 1310 9 view .LVU305
 1227 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1228              	.LVL133:
 1229              		.loc 1 1311 5 is_stmt 1 view .LVU306
 1230              		.loc 1 1311 8 is_stmt 0 view .LVU307
 1231 003c 0028     		cmp	r0, #0
 1232 003e F4D1     		bne	.L48
 1233              	.LVL134:
 1234              		.loc 1 1311 8 view .LVU308
 1235              	.LBE112:
 1236              	.LBE114:
 157:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
ARM GAS  /tmp/cctFn18N.s 			page 50


 1237              		.loc 1 157 5 is_stmt 1 view .LVU309
 157:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1238              		.loc 1 157 44 is_stmt 0 view .LVU310
 1239 0040 BDF91430 		ldrsh	r3, [sp, #20]
 1240 0044 07EE903A 		vmov	s15, r3	@ int
 159:./../bno055.c ****     return BNO_OK;
 1241              		.loc 1 159 54 view .LVU311
 1242 0048 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 157:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1243              		.loc 1 157 44 view .LVU312
 1244 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 159:./../bno055.c ****     return BNO_OK;
 1245              		.loc 1 159 54 view .LVU313
 1246 004e 1BB9     		cbnz	r3, .L49
 157:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1247              		.loc 1 157 44 view .LVU314
 1248 0050 9FED037A 		vldr.32	s14, .L51
 1249 0054 C7EE877A 		vdiv.f32	s15, s15, s14
 1250              	.L49:
 157:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1251              		.loc 1 157 10 view .LVU315
 1252 0058 C5ED007A 		vstr.32	s15, [r5]
 160:./../bno055.c **** };
 1253              		.loc 1 160 5 is_stmt 1 view .LVU316
 161:./../bno055.c **** 
 1254              		.loc 1 161 1 is_stmt 0 view .LVU317
 1255 005c 07B0     		add	sp, sp, #28
 1256              	.LCFI45:
 1257              		.cfi_def_cfa_offset 20
 1258              		@ sp needed
 1259 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 1260              	.LVL135:
 1261              	.L52:
 161:./../bno055.c **** 
 1262              		.loc 1 161 1 view .LVU318
 1263              		.align	2
 1264              	.L51:
 1265 0060 0000C842 		.word	1120403456
 1266              		.cfi_endproc
 1267              	.LFE135:
 1269              		.section	.text.bno055_euler_roll,"ax",%progbits
 1270              		.align	1
 1271              		.p2align 2,,3
 1272              		.global	bno055_euler_roll
 1273              		.syntax unified
 1274              		.thumb
 1275              		.thumb_func
 1276              		.fpu fpv4-sp-d16
 1278              	bno055_euler_roll:
 1279              	.LVL136:
 1280              	.LFB156:
 888:./../bno055.c ****     error_bno err;
 1281              		.loc 1 888 54 is_stmt 1 view -0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 16
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 889:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
ARM GAS  /tmp/cctFn18N.s 			page 51


 1285              		.loc 1 889 5 view .LVU320
 895:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_ROLL_LSB, data, 2)) != BNO_OK) {
 1286              		.loc 1 895 5 view .LVU321
 896:./../bno055.c ****         return err;
 1287              		.loc 1 896 5 view .LVU322
 888:./../bno055.c ****     error_bno err;
 1288              		.loc 1 888 54 is_stmt 0 view .LVU323
 1289 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1290              	.LCFI46:
 1291              		.cfi_def_cfa_offset 20
 1292              		.cfi_offset 4, -20
 1293              		.cfi_offset 5, -16
 1294              		.cfi_offset 6, -12
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 87B0     		sub	sp, sp, #28
 1298              	.LCFI47:
 1299              		.cfi_def_cfa_offset 48
 1300 0004 0668     		ldr	r6, [r0]
 1301              	.LVL137:
 1302              	.LBB117:
 1303              	.LBB118:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1304              		.loc 1 1305 11 view .LVU324
 1305 0006 4FF0FF37 		mov	r7, #-1
 1306 000a 1C23     		movs	r3, #28
 1307 000c 0097     		str	r7, [sp]
 1308              	.LVL138:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1309              		.loc 1 1305 11 view .LVU325
 1310 000e 8DF81330 		strb	r3, [sp, #19]
 1311              	.LVL139:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1312              		.loc 1 1305 11 view .LVU326
 1313              	.LBE118:
 1314              	.LBI117:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1315              		.loc 1 1299 11 is_stmt 1 view .LVU327
 1316              	.LBB119:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1317              		.loc 1 1301 5 view .LVU328
1305:./../bno055.c ****     if (err != HAL_OK) {
 1318              		.loc 1 1305 5 view .LVU329
 1319              	.LBE119:
 1320              	.LBE117:
 888:./../bno055.c ****     error_bno err;
 1321              		.loc 1 888 54 is_stmt 0 view .LVU330
 1322 0012 0446     		mov	r4, r0
 1323 0014 0D46     		mov	r5, r1
 1324              	.LBB122:
 1325              	.LBB120:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1326              		.loc 1 1305 11 view .LVU331
 1327 0016 0123     		movs	r3, #1
 1328              	.LVL140:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1329              		.loc 1 1305 11 view .LVU332
ARM GAS  /tmp/cctFn18N.s 			page 52


 1330 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1331              	.LVL141:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1332              		.loc 1 1305 11 view .LVU333
 1333 001a 0391     		str	r1, [sp, #12]
 1334 001c 0DF11302 		add	r2, sp, #19
 1335              	.LVL142:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1336              		.loc 1 1305 11 view .LVU334
 1337 0020 3046     		mov	r0, r6
 1338              	.LVL143:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1339              		.loc 1 1305 11 view .LVU335
 1340 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1341              	.LVL144:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1342              		.loc 1 1306 5 is_stmt 1 view .LVU336
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1343              		.loc 1 1306 8 is_stmt 0 view .LVU337
 1344 0026 0399     		ldr	r1, [sp, #12]
 1345 0028 10B1     		cbz	r0, .L54
 1346              	.L56:
 1347              	.LVL145:
1307:./../bno055.c ****     }
 1348              		.loc 1 1307 16 view .LVU338
 1349 002a 0120     		movs	r0, #1
 1350              	.LBE120:
 1351              	.LBE122:
 903:./../bno055.c **** 
 1352              		.loc 1 903 1 view .LVU339
 1353 002c 07B0     		add	sp, sp, #28
 1354              	.LCFI48:
 1355              		.cfi_remember_state
 1356              		.cfi_def_cfa_offset 20
 1357              		@ sp needed
 1358 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1359              	.LVL146:
 1360              	.L54:
 1361              	.LCFI49:
 1362              		.cfi_restore_state
 1363              	.LBB123:
 1364              	.LBB121:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1365              		.loc 1 1309 5 is_stmt 1 view .LVU340
1310:./../bno055.c ****     if (err != HAL_OK) {
 1366              		.loc 1 1310 9 is_stmt 0 view .LVU341
 1367 0030 0097     		str	r7, [sp]
 1368 0032 0223     		movs	r3, #2
 1369 0034 3046     		mov	r0, r6
 1370              	.LVL147:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1371              		.loc 1 1310 9 view .LVU342
 1372 0036 05AA     		add	r2, sp, #20
 1373              	.LVL148:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1374              		.loc 1 1310 9 view .LVU343
 1375 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
ARM GAS  /tmp/cctFn18N.s 			page 53


 1376              	.LVL149:
 1377              		.loc 1 1311 5 is_stmt 1 view .LVU344
 1378              		.loc 1 1311 8 is_stmt 0 view .LVU345
 1379 003c 0028     		cmp	r0, #0
 1380 003e F4D1     		bne	.L56
 1381              	.LVL150:
 1382              		.loc 1 1311 8 view .LVU346
 1383              	.LBE121:
 1384              	.LBE123:
 899:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 1385              		.loc 1 899 5 is_stmt 1 view .LVU347
 901:./../bno055.c ****     return BNO_OK;
 1386              		.loc 1 901 44 is_stmt 0 view .LVU348
 1387 0040 BDF91420 		ldrsh	r2, [sp, #20]
 900:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 1388              		.loc 1 900 54 view .LVU349
 1389 0044 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1390 0046 DFED096A 		vldr.32	s13, .L60
 901:./../bno055.c ****     return BNO_OK;
 1391              		.loc 1 901 44 view .LVU350
 1392 004a 07EE102A 		vmov	s14, r2	@ int
 900:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 1393              		.loc 1 900 54 view .LVU351
 1394 004e 002B     		cmp	r3, #0
 901:./../bno055.c ****     return BNO_OK;
 1395              		.loc 1 901 44 view .LVU352
 1396 0050 B8EEC77A 		vcvt.f32.s32	s14, s14
 900:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 1397              		.loc 1 900 54 view .LVU353
 1398 0054 F3EE007A 		vmov.f32	s15, #1.6e+1
 1399 0058 18BF     		it	ne
 1400 005a F0EE667A 		vmovne.f32	s15, s13
 1401              	.LVL151:
 901:./../bno055.c ****     return BNO_OK;
 1402              		.loc 1 901 5 is_stmt 1 view .LVU354
 901:./../bno055.c ****     return BNO_OK;
 1403              		.loc 1 901 44 is_stmt 0 view .LVU355
 1404 005e C7EE276A 		vdiv.f32	s13, s14, s15
 901:./../bno055.c ****     return BNO_OK;
 1405              		.loc 1 901 10 view .LVU356
 1406 0062 C5ED006A 		vstr.32	s13, [r5]
 902:./../bno055.c **** }
 1407              		.loc 1 902 5 is_stmt 1 view .LVU357
 903:./../bno055.c **** 
 1408              		.loc 1 903 1 is_stmt 0 view .LVU358
 1409 0066 07B0     		add	sp, sp, #28
 1410              	.LCFI50:
 1411              		.cfi_def_cfa_offset 20
 1412              		@ sp needed
 1413 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 1414              	.LVL152:
 1415              	.L61:
 903:./../bno055.c **** 
 1416              		.loc 1 903 1 view .LVU359
 1417 006a 00BF     		.align	2
 1418              	.L60:
 1419 006c 00006144 		.word	1147207680
ARM GAS  /tmp/cctFn18N.s 			page 54


 1420              		.cfi_endproc
 1421              	.LFE156:
 1423              		.section	.text.bno055_euler_pitch,"ax",%progbits
 1424              		.align	1
 1425              		.p2align 2,,3
 1426              		.global	bno055_euler_pitch
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1430              		.fpu fpv4-sp-d16
 1432              	bno055_euler_pitch:
 1433              	.LVL153:
 1434              	.LFB157:
 922:./../bno055.c ****     error_bno err;
 1435              		.loc 1 922 55 is_stmt 1 view -0
 1436              		.cfi_startproc
 1437              		@ args = 0, pretend = 0, frame = 16
 1438              		@ frame_needed = 0, uses_anonymous_args = 0
 923:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 1439              		.loc 1 923 5 view .LVU361
 929:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_PITCH_LSB, data, 2)) != BNO_OK) {
 1440              		.loc 1 929 5 view .LVU362
 930:./../bno055.c ****         return err;
 1441              		.loc 1 930 5 view .LVU363
 922:./../bno055.c ****     error_bno err;
 1442              		.loc 1 922 55 is_stmt 0 view .LVU364
 1443 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1444              	.LCFI51:
 1445              		.cfi_def_cfa_offset 20
 1446              		.cfi_offset 4, -20
 1447              		.cfi_offset 5, -16
 1448              		.cfi_offset 6, -12
 1449              		.cfi_offset 7, -8
 1450              		.cfi_offset 14, -4
 1451 0002 87B0     		sub	sp, sp, #28
 1452              	.LCFI52:
 1453              		.cfi_def_cfa_offset 48
 1454 0004 0668     		ldr	r6, [r0]
 1455              	.LVL154:
 1456              	.LBB126:
 1457              	.LBB127:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1458              		.loc 1 1305 11 view .LVU365
 1459 0006 4FF0FF37 		mov	r7, #-1
 1460 000a 1E23     		movs	r3, #30
 1461 000c 0097     		str	r7, [sp]
 1462              	.LVL155:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1463              		.loc 1 1305 11 view .LVU366
 1464 000e 8DF81330 		strb	r3, [sp, #19]
 1465              	.LVL156:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1466              		.loc 1 1305 11 view .LVU367
 1467              	.LBE127:
 1468              	.LBI126:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1469              		.loc 1 1299 11 is_stmt 1 view .LVU368
ARM GAS  /tmp/cctFn18N.s 			page 55


 1470              	.LBB128:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1471              		.loc 1 1301 5 view .LVU369
1305:./../bno055.c ****     if (err != HAL_OK) {
 1472              		.loc 1 1305 5 view .LVU370
 1473              	.LBE128:
 1474              	.LBE126:
 922:./../bno055.c ****     error_bno err;
 1475              		.loc 1 922 55 is_stmt 0 view .LVU371
 1476 0012 0446     		mov	r4, r0
 1477 0014 0D46     		mov	r5, r1
 1478              	.LBB131:
 1479              	.LBB129:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1480              		.loc 1 1305 11 view .LVU372
 1481 0016 0123     		movs	r3, #1
 1482              	.LVL157:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1483              		.loc 1 1305 11 view .LVU373
 1484 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1485              	.LVL158:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1486              		.loc 1 1305 11 view .LVU374
 1487 001a 0391     		str	r1, [sp, #12]
 1488 001c 0DF11302 		add	r2, sp, #19
 1489              	.LVL159:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1490              		.loc 1 1305 11 view .LVU375
 1491 0020 3046     		mov	r0, r6
 1492              	.LVL160:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1493              		.loc 1 1305 11 view .LVU376
 1494 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1495              	.LVL161:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1496              		.loc 1 1306 5 is_stmt 1 view .LVU377
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1497              		.loc 1 1306 8 is_stmt 0 view .LVU378
 1498 0026 0399     		ldr	r1, [sp, #12]
 1499 0028 10B1     		cbz	r0, .L63
 1500              	.L65:
 1501              	.LVL162:
1307:./../bno055.c ****     }
 1502              		.loc 1 1307 16 view .LVU379
 1503 002a 0120     		movs	r0, #1
 1504              	.LBE129:
 1505              	.LBE131:
 937:./../bno055.c **** 
 1506              		.loc 1 937 1 view .LVU380
 1507 002c 07B0     		add	sp, sp, #28
 1508              	.LCFI53:
 1509              		.cfi_remember_state
 1510              		.cfi_def_cfa_offset 20
 1511              		@ sp needed
 1512 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1513              	.LVL163:
 1514              	.L63:
ARM GAS  /tmp/cctFn18N.s 			page 56


 1515              	.LCFI54:
 1516              		.cfi_restore_state
 1517              	.LBB132:
 1518              	.LBB130:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1519              		.loc 1 1309 5 is_stmt 1 view .LVU381
1310:./../bno055.c ****     if (err != HAL_OK) {
 1520              		.loc 1 1310 9 is_stmt 0 view .LVU382
 1521 0030 0097     		str	r7, [sp]
 1522 0032 0223     		movs	r3, #2
 1523 0034 3046     		mov	r0, r6
 1524              	.LVL164:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1525              		.loc 1 1310 9 view .LVU383
 1526 0036 05AA     		add	r2, sp, #20
 1527              	.LVL165:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1528              		.loc 1 1310 9 view .LVU384
 1529 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1530              	.LVL166:
 1531              		.loc 1 1311 5 is_stmt 1 view .LVU385
 1532              		.loc 1 1311 8 is_stmt 0 view .LVU386
 1533 003c 0028     		cmp	r0, #0
 1534 003e F4D1     		bne	.L65
 1535              	.LVL167:
 1536              		.loc 1 1311 8 view .LVU387
 1537              	.LBE130:
 1538              	.LBE132:
 933:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 1539              		.loc 1 933 5 is_stmt 1 view .LVU388
 935:./../bno055.c ****     return BNO_OK;
 1540              		.loc 1 935 44 is_stmt 0 view .LVU389
 1541 0040 BDF91420 		ldrsh	r2, [sp, #20]
 934:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 1542              		.loc 1 934 54 view .LVU390
 1543 0044 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 1544 0046 DFED096A 		vldr.32	s13, .L69
 935:./../bno055.c ****     return BNO_OK;
 1545              		.loc 1 935 44 view .LVU391
 1546 004a 07EE102A 		vmov	s14, r2	@ int
 934:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 1547              		.loc 1 934 54 view .LVU392
 1548 004e 002B     		cmp	r3, #0
 935:./../bno055.c ****     return BNO_OK;
 1549              		.loc 1 935 44 view .LVU393
 1550 0050 B8EEC77A 		vcvt.f32.s32	s14, s14
 934:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 1551              		.loc 1 934 54 view .LVU394
 1552 0054 F3EE007A 		vmov.f32	s15, #1.6e+1
 1553 0058 18BF     		it	ne
 1554 005a F0EE667A 		vmovne.f32	s15, s13
 1555              	.LVL168:
 935:./../bno055.c ****     return BNO_OK;
 1556              		.loc 1 935 5 is_stmt 1 view .LVU395
 935:./../bno055.c ****     return BNO_OK;
 1557              		.loc 1 935 44 is_stmt 0 view .LVU396
 1558 005e C7EE276A 		vdiv.f32	s13, s14, s15
ARM GAS  /tmp/cctFn18N.s 			page 57


 935:./../bno055.c ****     return BNO_OK;
 1559              		.loc 1 935 10 view .LVU397
 1560 0062 C5ED006A 		vstr.32	s13, [r5]
 936:./../bno055.c **** }
 1561              		.loc 1 936 5 is_stmt 1 view .LVU398
 937:./../bno055.c **** 
 1562              		.loc 1 937 1 is_stmt 0 view .LVU399
 1563 0066 07B0     		add	sp, sp, #28
 1564              	.LCFI55:
 1565              		.cfi_def_cfa_offset 20
 1566              		@ sp needed
 1567 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 1568              	.LVL169:
 1569              	.L70:
 937:./../bno055.c **** 
 1570              		.loc 1 937 1 view .LVU400
 1571 006a 00BF     		.align	2
 1572              	.L69:
 1573 006c 00006144 		.word	1147207680
 1574              		.cfi_endproc
 1575              	.LFE157:
 1577              		.section	.text.bno055_acc_y,"ax",%progbits
 1578              		.align	1
 1579              		.p2align 2,,3
 1580              		.global	bno055_acc_y
 1581              		.syntax unified
 1582              		.thumb
 1583              		.thumb_func
 1584              		.fpu fpv4-sp-d16
 1586              	bno055_acc_y:
 1587              	.LVL170:
 1588              	.LFB136:
 180:./../bno055.c ****     error_bno err;
 1589              		.loc 1 180 49 is_stmt 1 view -0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 16
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 181:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 1593              		.loc 1 181 5 view .LVU402
 187:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_Y_LSB, data, 2)) != BNO_OK) {
 1594              		.loc 1 187 5 view .LVU403
 188:./../bno055.c ****         return err;
 1595              		.loc 1 188 5 view .LVU404
 180:./../bno055.c ****     error_bno err;
 1596              		.loc 1 180 49 is_stmt 0 view .LVU405
 1597 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1598              	.LCFI56:
 1599              		.cfi_def_cfa_offset 20
 1600              		.cfi_offset 4, -20
 1601              		.cfi_offset 5, -16
 1602              		.cfi_offset 6, -12
 1603              		.cfi_offset 7, -8
 1604              		.cfi_offset 14, -4
 1605 0002 87B0     		sub	sp, sp, #28
 1606              	.LCFI57:
 1607              		.cfi_def_cfa_offset 48
 1608 0004 0668     		ldr	r6, [r0]
ARM GAS  /tmp/cctFn18N.s 			page 58


 1609              	.LVL171:
 1610              	.LBB135:
 1611              	.LBB136:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1612              		.loc 1 1305 11 view .LVU406
 1613 0006 4FF0FF37 		mov	r7, #-1
 1614 000a 0A23     		movs	r3, #10
 1615 000c 0097     		str	r7, [sp]
 1616              	.LVL172:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1617              		.loc 1 1305 11 view .LVU407
 1618 000e 8DF81330 		strb	r3, [sp, #19]
 1619              	.LVL173:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1620              		.loc 1 1305 11 view .LVU408
 1621              	.LBE136:
 1622              	.LBI135:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1623              		.loc 1 1299 11 is_stmt 1 view .LVU409
 1624              	.LBB137:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1625              		.loc 1 1301 5 view .LVU410
1305:./../bno055.c ****     if (err != HAL_OK) {
 1626              		.loc 1 1305 5 view .LVU411
 1627              	.LBE137:
 1628              	.LBE135:
 180:./../bno055.c ****     error_bno err;
 1629              		.loc 1 180 49 is_stmt 0 view .LVU412
 1630 0012 0446     		mov	r4, r0
 1631 0014 0D46     		mov	r5, r1
 1632              	.LBB140:
 1633              	.LBB138:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1634              		.loc 1 1305 11 view .LVU413
 1635 0016 0123     		movs	r3, #1
 1636              	.LVL174:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1637              		.loc 1 1305 11 view .LVU414
 1638 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1639              	.LVL175:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1640              		.loc 1 1305 11 view .LVU415
 1641 001a 0391     		str	r1, [sp, #12]
 1642 001c 0DF11302 		add	r2, sp, #19
 1643              	.LVL176:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1644              		.loc 1 1305 11 view .LVU416
 1645 0020 3046     		mov	r0, r6
 1646              	.LVL177:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1647              		.loc 1 1305 11 view .LVU417
 1648 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1649              	.LVL178:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1650              		.loc 1 1306 5 is_stmt 1 view .LVU418
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1651              		.loc 1 1306 8 is_stmt 0 view .LVU419
ARM GAS  /tmp/cctFn18N.s 			page 59


 1652 0026 0399     		ldr	r1, [sp, #12]
 1653 0028 10B1     		cbz	r0, .L72
 1654              	.L74:
 1655              	.LVL179:
1307:./../bno055.c ****     }
 1656              		.loc 1 1307 16 view .LVU420
 1657 002a 0120     		movs	r0, #1
 1658              	.LBE138:
 1659              	.LBE140:
 196:./../bno055.c **** 
 1660              		.loc 1 196 1 view .LVU421
 1661 002c 07B0     		add	sp, sp, #28
 1662              	.LCFI58:
 1663              		.cfi_remember_state
 1664              		.cfi_def_cfa_offset 20
 1665              		@ sp needed
 1666 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1667              	.LVL180:
 1668              	.L72:
 1669              	.LCFI59:
 1670              		.cfi_restore_state
 1671              	.LBB141:
 1672              	.LBB139:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1673              		.loc 1 1309 5 is_stmt 1 view .LVU422
1310:./../bno055.c ****     if (err != HAL_OK) {
 1674              		.loc 1 1310 9 is_stmt 0 view .LVU423
 1675 0030 0097     		str	r7, [sp]
 1676 0032 0223     		movs	r3, #2
 1677 0034 3046     		mov	r0, r6
 1678              	.LVL181:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1679              		.loc 1 1310 9 view .LVU424
 1680 0036 05AA     		add	r2, sp, #20
 1681              	.LVL182:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1682              		.loc 1 1310 9 view .LVU425
 1683 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1684              	.LVL183:
 1685              		.loc 1 1311 5 is_stmt 1 view .LVU426
 1686              		.loc 1 1311 8 is_stmt 0 view .LVU427
 1687 003c 0028     		cmp	r0, #0
 1688 003e F4D1     		bne	.L74
 1689              	.LVL184:
 1690              		.loc 1 1311 8 view .LVU428
 1691              	.LBE139:
 1692              	.LBE141:
 192:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1693              		.loc 1 192 5 is_stmt 1 view .LVU429
 192:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1694              		.loc 1 192 44 is_stmt 0 view .LVU430
 1695 0040 BDF91430 		ldrsh	r3, [sp, #20]
 1696 0044 07EE903A 		vmov	s15, r3	@ int
 194:./../bno055.c ****     return BNO_OK;
 1697              		.loc 1 194 54 view .LVU431
 1698 0048 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 192:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
ARM GAS  /tmp/cctFn18N.s 			page 60


 1699              		.loc 1 192 44 view .LVU432
 1700 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 194:./../bno055.c ****     return BNO_OK;
 1701              		.loc 1 194 54 view .LVU433
 1702 004e 1BB9     		cbnz	r3, .L75
 192:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1703              		.loc 1 192 44 view .LVU434
 1704 0050 9FED037A 		vldr.32	s14, .L77
 1705 0054 C7EE877A 		vdiv.f32	s15, s15, s14
 1706              	.L75:
 192:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1707              		.loc 1 192 10 view .LVU435
 1708 0058 C5ED007A 		vstr.32	s15, [r5]
 195:./../bno055.c **** };
 1709              		.loc 1 195 5 is_stmt 1 view .LVU436
 196:./../bno055.c **** 
 1710              		.loc 1 196 1 is_stmt 0 view .LVU437
 1711 005c 07B0     		add	sp, sp, #28
 1712              	.LCFI60:
 1713              		.cfi_def_cfa_offset 20
 1714              		@ sp needed
 1715 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 1716              	.LVL185:
 1717              	.L78:
 196:./../bno055.c **** 
 1718              		.loc 1 196 1 view .LVU438
 1719              		.align	2
 1720              	.L77:
 1721 0060 0000C842 		.word	1120403456
 1722              		.cfi_endproc
 1723              	.LFE136:
 1725              		.section	.text.bno055_acc_z,"ax",%progbits
 1726              		.align	1
 1727              		.p2align 2,,3
 1728              		.global	bno055_acc_z
 1729              		.syntax unified
 1730              		.thumb
 1731              		.thumb_func
 1732              		.fpu fpv4-sp-d16
 1734              	bno055_acc_z:
 1735              	.LVL186:
 1736              	.LFB137:
 215:./../bno055.c ****     error_bno err;
 1737              		.loc 1 215 49 is_stmt 1 view -0
 1738              		.cfi_startproc
 1739              		@ args = 0, pretend = 0, frame = 16
 1740              		@ frame_needed = 0, uses_anonymous_args = 0
 216:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 1741              		.loc 1 216 5 view .LVU440
 222:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_Z_LSB, data, 2)) != BNO_OK) {
 1742              		.loc 1 222 5 view .LVU441
 223:./../bno055.c ****         return err;
 1743              		.loc 1 223 5 view .LVU442
 215:./../bno055.c ****     error_bno err;
 1744              		.loc 1 215 49 is_stmt 0 view .LVU443
 1745 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1746              	.LCFI61:
ARM GAS  /tmp/cctFn18N.s 			page 61


 1747              		.cfi_def_cfa_offset 20
 1748              		.cfi_offset 4, -20
 1749              		.cfi_offset 5, -16
 1750              		.cfi_offset 6, -12
 1751              		.cfi_offset 7, -8
 1752              		.cfi_offset 14, -4
 1753 0002 87B0     		sub	sp, sp, #28
 1754              	.LCFI62:
 1755              		.cfi_def_cfa_offset 48
 1756 0004 0668     		ldr	r6, [r0]
 1757              	.LVL187:
 1758              	.LBB144:
 1759              	.LBB145:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1760              		.loc 1 1305 11 view .LVU444
 1761 0006 4FF0FF37 		mov	r7, #-1
 1762 000a 0C23     		movs	r3, #12
 1763 000c 0097     		str	r7, [sp]
 1764              	.LVL188:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1765              		.loc 1 1305 11 view .LVU445
 1766 000e 8DF81330 		strb	r3, [sp, #19]
 1767              	.LVL189:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1768              		.loc 1 1305 11 view .LVU446
 1769              	.LBE145:
 1770              	.LBI144:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1771              		.loc 1 1299 11 is_stmt 1 view .LVU447
 1772              	.LBB146:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1773              		.loc 1 1301 5 view .LVU448
1305:./../bno055.c ****     if (err != HAL_OK) {
 1774              		.loc 1 1305 5 view .LVU449
 1775              	.LBE146:
 1776              	.LBE144:
 215:./../bno055.c ****     error_bno err;
 1777              		.loc 1 215 49 is_stmt 0 view .LVU450
 1778 0012 0446     		mov	r4, r0
 1779 0014 0D46     		mov	r5, r1
 1780              	.LBB149:
 1781              	.LBB147:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1782              		.loc 1 1305 11 view .LVU451
 1783 0016 0123     		movs	r3, #1
 1784              	.LVL190:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1785              		.loc 1 1305 11 view .LVU452
 1786 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1787              	.LVL191:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1788              		.loc 1 1305 11 view .LVU453
 1789 001a 0391     		str	r1, [sp, #12]
 1790 001c 0DF11302 		add	r2, sp, #19
 1791              	.LVL192:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1792              		.loc 1 1305 11 view .LVU454
ARM GAS  /tmp/cctFn18N.s 			page 62


 1793 0020 3046     		mov	r0, r6
 1794              	.LVL193:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1795              		.loc 1 1305 11 view .LVU455
 1796 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1797              	.LVL194:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1798              		.loc 1 1306 5 is_stmt 1 view .LVU456
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1799              		.loc 1 1306 8 is_stmt 0 view .LVU457
 1800 0026 0399     		ldr	r1, [sp, #12]
 1801 0028 10B1     		cbz	r0, .L80
 1802              	.L82:
 1803              	.LVL195:
1307:./../bno055.c ****     }
 1804              		.loc 1 1307 16 view .LVU458
 1805 002a 0120     		movs	r0, #1
 1806              	.LBE147:
 1807              	.LBE149:
 231:./../bno055.c **** 
 1808              		.loc 1 231 1 view .LVU459
 1809 002c 07B0     		add	sp, sp, #28
 1810              	.LCFI63:
 1811              		.cfi_remember_state
 1812              		.cfi_def_cfa_offset 20
 1813              		@ sp needed
 1814 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1815              	.LVL196:
 1816              	.L80:
 1817              	.LCFI64:
 1818              		.cfi_restore_state
 1819              	.LBB150:
 1820              	.LBB148:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1821              		.loc 1 1309 5 is_stmt 1 view .LVU460
1310:./../bno055.c ****     if (err != HAL_OK) {
 1822              		.loc 1 1310 9 is_stmt 0 view .LVU461
 1823 0030 0097     		str	r7, [sp]
 1824 0032 0223     		movs	r3, #2
 1825 0034 3046     		mov	r0, r6
 1826              	.LVL197:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1827              		.loc 1 1310 9 view .LVU462
 1828 0036 05AA     		add	r2, sp, #20
 1829              	.LVL198:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1830              		.loc 1 1310 9 view .LVU463
 1831 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1832              	.LVL199:
 1833              		.loc 1 1311 5 is_stmt 1 view .LVU464
 1834              		.loc 1 1311 8 is_stmt 0 view .LVU465
 1835 003c 0028     		cmp	r0, #0
 1836 003e F4D1     		bne	.L82
 1837              	.LVL200:
 1838              		.loc 1 1311 8 view .LVU466
 1839              	.LBE148:
 1840              	.LBE150:
ARM GAS  /tmp/cctFn18N.s 			page 63


 227:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1841              		.loc 1 227 5 is_stmt 1 view .LVU467
 227:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1842              		.loc 1 227 44 is_stmt 0 view .LVU468
 1843 0040 BDF91430 		ldrsh	r3, [sp, #20]
 1844 0044 07EE903A 		vmov	s15, r3	@ int
 229:./../bno055.c ****     return BNO_OK;
 1845              		.loc 1 229 54 view .LVU469
 1846 0048 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 227:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1847              		.loc 1 227 44 view .LVU470
 1848 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 229:./../bno055.c ****     return BNO_OK;
 1849              		.loc 1 229 54 view .LVU471
 1850 004e 1BB9     		cbnz	r3, .L83
 227:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1851              		.loc 1 227 44 view .LVU472
 1852 0050 9FED037A 		vldr.32	s14, .L85
 1853 0054 C7EE877A 		vdiv.f32	s15, s15, s14
 1854              	.L83:
 227:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1855              		.loc 1 227 10 view .LVU473
 1856 0058 C5ED007A 		vstr.32	s15, [r5]
 230:./../bno055.c **** };
 1857              		.loc 1 230 5 is_stmt 1 view .LVU474
 231:./../bno055.c **** 
 1858              		.loc 1 231 1 is_stmt 0 view .LVU475
 1859 005c 07B0     		add	sp, sp, #28
 1860              	.LCFI65:
 1861              		.cfi_def_cfa_offset 20
 1862              		@ sp needed
 1863 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 1864              	.LVL201:
 1865              	.L86:
 231:./../bno055.c **** 
 1866              		.loc 1 231 1 view .LVU476
 1867              		.align	2
 1868              	.L85:
 1869 0060 0000C842 		.word	1120403456
 1870              		.cfi_endproc
 1871              	.LFE137:
 1873              		.section	.text.bno055_linear_acc_x,"ax",%progbits
 1874              		.align	1
 1875              		.p2align 2,,3
 1876              		.global	bno055_linear_acc_x
 1877              		.syntax unified
 1878              		.thumb
 1879              		.thumb_func
 1880              		.fpu fpv4-sp-d16
 1882              	bno055_linear_acc_x:
 1883              	.LVL202:
 1884              	.LFB139:
 288:./../bno055.c ****     error_bno err;
 1885              		.loc 1 288 56 is_stmt 1 view -0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 16
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctFn18N.s 			page 64


 289:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 1889              		.loc 1 289 5 view .LVU478
 295:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_X_LSB, data, 2)) != BNO_OK) {
 1890              		.loc 1 295 5 view .LVU479
 296:./../bno055.c ****         return err;
 1891              		.loc 1 296 5 view .LVU480
 288:./../bno055.c ****     error_bno err;
 1892              		.loc 1 288 56 is_stmt 0 view .LVU481
 1893 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1894              	.LCFI66:
 1895              		.cfi_def_cfa_offset 20
 1896              		.cfi_offset 4, -20
 1897              		.cfi_offset 5, -16
 1898              		.cfi_offset 6, -12
 1899              		.cfi_offset 7, -8
 1900              		.cfi_offset 14, -4
 1901 0002 87B0     		sub	sp, sp, #28
 1902              	.LCFI67:
 1903              		.cfi_def_cfa_offset 48
 1904 0004 0668     		ldr	r6, [r0]
 1905              	.LVL203:
 1906              	.LBB153:
 1907              	.LBB154:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1908              		.loc 1 1305 11 view .LVU482
 1909 0006 4FF0FF37 		mov	r7, #-1
 1910 000a 2823     		movs	r3, #40
 1911 000c 0097     		str	r7, [sp]
 1912              	.LVL204:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1913              		.loc 1 1305 11 view .LVU483
 1914 000e 8DF81330 		strb	r3, [sp, #19]
 1915              	.LVL205:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1916              		.loc 1 1305 11 view .LVU484
 1917              	.LBE154:
 1918              	.LBI153:
1299:./../bno055.c ****                            uint32_t buf_size) {
 1919              		.loc 1 1299 11 is_stmt 1 view .LVU485
 1920              	.LBB155:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 1921              		.loc 1 1301 5 view .LVU486
1305:./../bno055.c ****     if (err != HAL_OK) {
 1922              		.loc 1 1305 5 view .LVU487
 1923              	.LBE155:
 1924              	.LBE153:
 288:./../bno055.c ****     error_bno err;
 1925              		.loc 1 288 56 is_stmt 0 view .LVU488
 1926 0012 0446     		mov	r4, r0
 1927 0014 0D46     		mov	r5, r1
 1928              	.LBB158:
 1929              	.LBB156:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1930              		.loc 1 1305 11 view .LVU489
 1931 0016 0123     		movs	r3, #1
 1932              	.LVL206:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 65


 1933              		.loc 1 1305 11 view .LVU490
 1934 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 1935              	.LVL207:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1936              		.loc 1 1305 11 view .LVU491
 1937 001a 0391     		str	r1, [sp, #12]
 1938 001c 0DF11302 		add	r2, sp, #19
 1939              	.LVL208:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1940              		.loc 1 1305 11 view .LVU492
 1941 0020 3046     		mov	r0, r6
 1942              	.LVL209:
1305:./../bno055.c ****     if (err != HAL_OK) {
 1943              		.loc 1 1305 11 view .LVU493
 1944 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 1945              	.LVL210:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1946              		.loc 1 1306 5 is_stmt 1 view .LVU494
1306:./../bno055.c ****         return BNO_ERR_I2C;
 1947              		.loc 1 1306 8 is_stmt 0 view .LVU495
 1948 0026 0399     		ldr	r1, [sp, #12]
 1949 0028 10B1     		cbz	r0, .L88
 1950              	.L90:
 1951              	.LVL211:
1307:./../bno055.c ****     }
 1952              		.loc 1 1307 16 view .LVU496
 1953 002a 0120     		movs	r0, #1
 1954              	.LBE156:
 1955              	.LBE158:
 304:./../bno055.c **** 
 1956              		.loc 1 304 1 view .LVU497
 1957 002c 07B0     		add	sp, sp, #28
 1958              	.LCFI68:
 1959              		.cfi_remember_state
 1960              		.cfi_def_cfa_offset 20
 1961              		@ sp needed
 1962 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 1963              	.LVL212:
 1964              	.L88:
 1965              	.LCFI69:
 1966              		.cfi_restore_state
 1967              	.LBB159:
 1968              	.LBB157:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 1969              		.loc 1 1309 5 is_stmt 1 view .LVU498
1310:./../bno055.c ****     if (err != HAL_OK) {
 1970              		.loc 1 1310 9 is_stmt 0 view .LVU499
 1971 0030 0097     		str	r7, [sp]
 1972 0032 0223     		movs	r3, #2
 1973 0034 3046     		mov	r0, r6
 1974              	.LVL213:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1975              		.loc 1 1310 9 view .LVU500
 1976 0036 05AA     		add	r2, sp, #20
 1977              	.LVL214:
1310:./../bno055.c ****     if (err != HAL_OK) {
 1978              		.loc 1 1310 9 view .LVU501
ARM GAS  /tmp/cctFn18N.s 			page 66


 1979 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 1980              	.LVL215:
 1981              		.loc 1 1311 5 is_stmt 1 view .LVU502
 1982              		.loc 1 1311 8 is_stmt 0 view .LVU503
 1983 003c 0028     		cmp	r0, #0
 1984 003e F4D1     		bne	.L90
 1985              	.LVL216:
 1986              		.loc 1 1311 8 view .LVU504
 1987              	.LBE157:
 1988              	.LBE159:
 300:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1989              		.loc 1 300 5 is_stmt 1 view .LVU505
 300:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1990              		.loc 1 300 44 is_stmt 0 view .LVU506
 1991 0040 BDF91430 		ldrsh	r3, [sp, #20]
 1992 0044 07EE903A 		vmov	s15, r3	@ int
 302:./../bno055.c ****     return BNO_OK;
 1993              		.loc 1 302 54 view .LVU507
 1994 0048 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 300:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1995              		.loc 1 300 44 view .LVU508
 1996 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 302:./../bno055.c ****     return BNO_OK;
 1997              		.loc 1 302 54 view .LVU509
 1998 004e 1BB9     		cbnz	r3, .L91
 300:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 1999              		.loc 1 300 44 view .LVU510
 2000 0050 9FED037A 		vldr.32	s14, .L93
 2001 0054 C7EE877A 		vdiv.f32	s15, s15, s14
 2002              	.L91:
 300:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 2003              		.loc 1 300 10 view .LVU511
 2004 0058 C5ED007A 		vstr.32	s15, [r5]
 303:./../bno055.c **** };
 2005              		.loc 1 303 5 is_stmt 1 view .LVU512
 304:./../bno055.c **** 
 2006              		.loc 1 304 1 is_stmt 0 view .LVU513
 2007 005c 07B0     		add	sp, sp, #28
 2008              	.LCFI70:
 2009              		.cfi_def_cfa_offset 20
 2010              		@ sp needed
 2011 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 2012              	.LVL217:
 2013              	.L94:
 304:./../bno055.c **** 
 2014              		.loc 1 304 1 view .LVU514
 2015              		.align	2
 2016              	.L93:
 2017 0060 0000C842 		.word	1120403456
 2018              		.cfi_endproc
 2019              	.LFE139:
 2021              		.section	.text.bno055_gravity_x,"ax",%progbits
 2022              		.align	1
 2023              		.p2align 2,,3
 2024              		.global	bno055_gravity_x
 2025              		.syntax unified
 2026              		.thumb
ARM GAS  /tmp/cctFn18N.s 			page 67


 2027              		.thumb_func
 2028              		.fpu fpv4-sp-d16
 2030              	bno055_gravity_x:
 2031              	.LVL218:
 2032              	.LFB151:
 714:./../bno055.c ****     error_bno err;
 2033              		.loc 1 714 53 is_stmt 1 view -0
 2034              		.cfi_startproc
 2035              		@ args = 0, pretend = 0, frame = 16
 2036              		@ frame_needed = 0, uses_anonymous_args = 0
 715:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2037              		.loc 1 715 5 view .LVU516
 721:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_X_LSB, data, 2)) != BNO_OK) {
 2038              		.loc 1 721 5 view .LVU517
 722:./../bno055.c ****         return err;
 2039              		.loc 1 722 5 view .LVU518
 714:./../bno055.c ****     error_bno err;
 2040              		.loc 1 714 53 is_stmt 0 view .LVU519
 2041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2042              	.LCFI71:
 2043              		.cfi_def_cfa_offset 20
 2044              		.cfi_offset 4, -20
 2045              		.cfi_offset 5, -16
 2046              		.cfi_offset 6, -12
 2047              		.cfi_offset 7, -8
 2048              		.cfi_offset 14, -4
 2049 0002 87B0     		sub	sp, sp, #28
 2050              	.LCFI72:
 2051              		.cfi_def_cfa_offset 48
 2052 0004 0668     		ldr	r6, [r0]
 2053              	.LVL219:
 2054              	.LBB162:
 2055              	.LBB163:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2056              		.loc 1 1305 11 view .LVU520
 2057 0006 4FF0FF37 		mov	r7, #-1
 2058 000a 2E23     		movs	r3, #46
 2059 000c 0097     		str	r7, [sp]
 2060              	.LVL220:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2061              		.loc 1 1305 11 view .LVU521
 2062 000e 8DF81330 		strb	r3, [sp, #19]
 2063              	.LVL221:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2064              		.loc 1 1305 11 view .LVU522
 2065              	.LBE163:
 2066              	.LBI162:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2067              		.loc 1 1299 11 is_stmt 1 view .LVU523
 2068              	.LBB164:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2069              		.loc 1 1301 5 view .LVU524
1305:./../bno055.c ****     if (err != HAL_OK) {
 2070              		.loc 1 1305 5 view .LVU525
 2071              	.LBE164:
 2072              	.LBE162:
 714:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 68


 2073              		.loc 1 714 53 is_stmt 0 view .LVU526
 2074 0012 0446     		mov	r4, r0
 2075 0014 0D46     		mov	r5, r1
 2076              	.LBB167:
 2077              	.LBB165:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2078              		.loc 1 1305 11 view .LVU527
 2079 0016 0123     		movs	r3, #1
 2080              	.LVL222:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2081              		.loc 1 1305 11 view .LVU528
 2082 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 2083              	.LVL223:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2084              		.loc 1 1305 11 view .LVU529
 2085 001a 0391     		str	r1, [sp, #12]
 2086 001c 0DF11302 		add	r2, sp, #19
 2087              	.LVL224:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2088              		.loc 1 1305 11 view .LVU530
 2089 0020 3046     		mov	r0, r6
 2090              	.LVL225:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2091              		.loc 1 1305 11 view .LVU531
 2092 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 2093              	.LVL226:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2094              		.loc 1 1306 5 is_stmt 1 view .LVU532
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2095              		.loc 1 1306 8 is_stmt 0 view .LVU533
 2096 0026 0399     		ldr	r1, [sp, #12]
 2097 0028 10B1     		cbz	r0, .L96
 2098              	.L98:
 2099              	.LVL227:
1307:./../bno055.c ****     }
 2100              		.loc 1 1307 16 view .LVU534
 2101 002a 0120     		movs	r0, #1
 2102              	.LBE165:
 2103              	.LBE167:
 729:./../bno055.c **** 
 2104              		.loc 1 729 1 view .LVU535
 2105 002c 07B0     		add	sp, sp, #28
 2106              	.LCFI73:
 2107              		.cfi_remember_state
 2108              		.cfi_def_cfa_offset 20
 2109              		@ sp needed
 2110 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 2111              	.LVL228:
 2112              	.L96:
 2113              	.LCFI74:
 2114              		.cfi_restore_state
 2115              	.LBB168:
 2116              	.LBB166:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 2117              		.loc 1 1309 5 is_stmt 1 view .LVU536
1310:./../bno055.c ****     if (err != HAL_OK) {
 2118              		.loc 1 1310 9 is_stmt 0 view .LVU537
ARM GAS  /tmp/cctFn18N.s 			page 69


 2119 0030 0097     		str	r7, [sp]
 2120 0032 0223     		movs	r3, #2
 2121 0034 3046     		mov	r0, r6
 2122              	.LVL229:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2123              		.loc 1 1310 9 view .LVU538
 2124 0036 05AA     		add	r2, sp, #20
 2125              	.LVL230:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2126              		.loc 1 1310 9 view .LVU539
 2127 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 2128              	.LVL231:
 2129              		.loc 1 1311 5 is_stmt 1 view .LVU540
 2130              		.loc 1 1311 8 is_stmt 0 view .LVU541
 2131 003c 0028     		cmp	r0, #0
 2132 003e F4D1     		bne	.L98
 2133              	.LVL232:
 2134              		.loc 1 1311 8 view .LVU542
 2135              	.LBE166:
 2136              	.LBE168:
 725:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 2137              		.loc 1 725 5 is_stmt 1 view .LVU543
 727:./../bno055.c ****     return BNO_OK;
 2138              		.loc 1 727 44 is_stmt 0 view .LVU544
 2139 0040 BDF91420 		ldrsh	r2, [sp, #20]
 726:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2140              		.loc 1 726 58 view .LVU545
 2141 0044 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 2142 0046 DFED097A 		vldr.32	s15, .L102
 727:./../bno055.c ****     return BNO_OK;
 2143              		.loc 1 727 44 view .LVU546
 2144 004a 07EE102A 		vmov	s14, r2	@ int
 726:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2145              		.loc 1 726 58 view .LVU547
 2146 004e F7EE006A 		vmov.f32	s13, #1.0e+0
 727:./../bno055.c ****     return BNO_OK;
 2147              		.loc 1 727 44 view .LVU548
 2148 0052 B8EEC77A 		vcvt.f32.s32	s14, s14
 726:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2149              		.loc 1 726 58 view .LVU549
 2150 0056 002B     		cmp	r3, #0
 2151 0058 18BF     		it	ne
 2152 005a F0EE667A 		vmovne.f32	s15, s13
 2153              	.LVL233:
 727:./../bno055.c ****     return BNO_OK;
 2154              		.loc 1 727 5 is_stmt 1 view .LVU550
 727:./../bno055.c ****     return BNO_OK;
 2155              		.loc 1 727 44 is_stmt 0 view .LVU551
 2156 005e C7EE276A 		vdiv.f32	s13, s14, s15
 727:./../bno055.c ****     return BNO_OK;
 2157              		.loc 1 727 10 view .LVU552
 2158 0062 C5ED006A 		vstr.32	s13, [r5]
 728:./../bno055.c **** }
 2159              		.loc 1 728 5 is_stmt 1 view .LVU553
 729:./../bno055.c **** 
 2160              		.loc 1 729 1 is_stmt 0 view .LVU554
 2161 0066 07B0     		add	sp, sp, #28
ARM GAS  /tmp/cctFn18N.s 			page 70


 2162              	.LCFI75:
 2163              		.cfi_def_cfa_offset 20
 2164              		@ sp needed
 2165 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 2166              	.LVL234:
 2167              	.L103:
 729:./../bno055.c **** 
 2168              		.loc 1 729 1 view .LVU555
 2169 006a 00BF     		.align	2
 2170              	.L102:
 2171 006c 0000C842 		.word	1120403456
 2172              		.cfi_endproc
 2173              	.LFE151:
 2175              		.section	.text.bno055_gravity_y,"ax",%progbits
 2176              		.align	1
 2177              		.p2align 2,,3
 2178              		.global	bno055_gravity_y
 2179              		.syntax unified
 2180              		.thumb
 2181              		.thumb_func
 2182              		.fpu fpv4-sp-d16
 2184              	bno055_gravity_y:
 2185              	.LVL235:
 2186              	.LFB152:
 748:./../bno055.c ****     error_bno err;
 2187              		.loc 1 748 53 is_stmt 1 view -0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 16
 2190              		@ frame_needed = 0, uses_anonymous_args = 0
 749:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2191              		.loc 1 749 5 view .LVU557
 755:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_Y_LSB, data, 2)) != BNO_OK) {
 2192              		.loc 1 755 5 view .LVU558
 756:./../bno055.c ****         return err;
 2193              		.loc 1 756 5 view .LVU559
 748:./../bno055.c ****     error_bno err;
 2194              		.loc 1 748 53 is_stmt 0 view .LVU560
 2195 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2196              	.LCFI76:
 2197              		.cfi_def_cfa_offset 20
 2198              		.cfi_offset 4, -20
 2199              		.cfi_offset 5, -16
 2200              		.cfi_offset 6, -12
 2201              		.cfi_offset 7, -8
 2202              		.cfi_offset 14, -4
 2203 0002 87B0     		sub	sp, sp, #28
 2204              	.LCFI77:
 2205              		.cfi_def_cfa_offset 48
 2206 0004 0668     		ldr	r6, [r0]
 2207              	.LVL236:
 2208              	.LBB171:
 2209              	.LBB172:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2210              		.loc 1 1305 11 view .LVU561
 2211 0006 4FF0FF37 		mov	r7, #-1
 2212 000a 3023     		movs	r3, #48
 2213 000c 0097     		str	r7, [sp]
ARM GAS  /tmp/cctFn18N.s 			page 71


 2214              	.LVL237:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2215              		.loc 1 1305 11 view .LVU562
 2216 000e 8DF81330 		strb	r3, [sp, #19]
 2217              	.LVL238:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2218              		.loc 1 1305 11 view .LVU563
 2219              	.LBE172:
 2220              	.LBI171:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2221              		.loc 1 1299 11 is_stmt 1 view .LVU564
 2222              	.LBB173:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2223              		.loc 1 1301 5 view .LVU565
1305:./../bno055.c ****     if (err != HAL_OK) {
 2224              		.loc 1 1305 5 view .LVU566
 2225              	.LBE173:
 2226              	.LBE171:
 748:./../bno055.c ****     error_bno err;
 2227              		.loc 1 748 53 is_stmt 0 view .LVU567
 2228 0012 0446     		mov	r4, r0
 2229 0014 0D46     		mov	r5, r1
 2230              	.LBB176:
 2231              	.LBB174:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2232              		.loc 1 1305 11 view .LVU568
 2233 0016 0123     		movs	r3, #1
 2234              	.LVL239:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2235              		.loc 1 1305 11 view .LVU569
 2236 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 2237              	.LVL240:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2238              		.loc 1 1305 11 view .LVU570
 2239 001a 0391     		str	r1, [sp, #12]
 2240 001c 0DF11302 		add	r2, sp, #19
 2241              	.LVL241:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2242              		.loc 1 1305 11 view .LVU571
 2243 0020 3046     		mov	r0, r6
 2244              	.LVL242:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2245              		.loc 1 1305 11 view .LVU572
 2246 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 2247              	.LVL243:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2248              		.loc 1 1306 5 is_stmt 1 view .LVU573
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2249              		.loc 1 1306 8 is_stmt 0 view .LVU574
 2250 0026 0399     		ldr	r1, [sp, #12]
 2251 0028 10B1     		cbz	r0, .L105
 2252              	.L107:
 2253              	.LVL244:
1307:./../bno055.c ****     }
 2254              		.loc 1 1307 16 view .LVU575
 2255 002a 0120     		movs	r0, #1
 2256              	.LBE174:
ARM GAS  /tmp/cctFn18N.s 			page 72


 2257              	.LBE176:
 763:./../bno055.c **** 
 2258              		.loc 1 763 1 view .LVU576
 2259 002c 07B0     		add	sp, sp, #28
 2260              	.LCFI78:
 2261              		.cfi_remember_state
 2262              		.cfi_def_cfa_offset 20
 2263              		@ sp needed
 2264 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 2265              	.LVL245:
 2266              	.L105:
 2267              	.LCFI79:
 2268              		.cfi_restore_state
 2269              	.LBB177:
 2270              	.LBB175:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 2271              		.loc 1 1309 5 is_stmt 1 view .LVU577
1310:./../bno055.c ****     if (err != HAL_OK) {
 2272              		.loc 1 1310 9 is_stmt 0 view .LVU578
 2273 0030 0097     		str	r7, [sp]
 2274 0032 0223     		movs	r3, #2
 2275 0034 3046     		mov	r0, r6
 2276              	.LVL246:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2277              		.loc 1 1310 9 view .LVU579
 2278 0036 05AA     		add	r2, sp, #20
 2279              	.LVL247:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2280              		.loc 1 1310 9 view .LVU580
 2281 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 2282              	.LVL248:
 2283              		.loc 1 1311 5 is_stmt 1 view .LVU581
 2284              		.loc 1 1311 8 is_stmt 0 view .LVU582
 2285 003c 0028     		cmp	r0, #0
 2286 003e F4D1     		bne	.L107
 2287              	.LVL249:
 2288              		.loc 1 1311 8 view .LVU583
 2289              	.LBE175:
 2290              	.LBE177:
 759:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 2291              		.loc 1 759 5 is_stmt 1 view .LVU584
 761:./../bno055.c ****     return BNO_OK;
 2292              		.loc 1 761 44 is_stmt 0 view .LVU585
 2293 0040 BDF91420 		ldrsh	r2, [sp, #20]
 760:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2294              		.loc 1 760 58 view .LVU586
 2295 0044 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 2296 0046 DFED097A 		vldr.32	s15, .L111
 761:./../bno055.c ****     return BNO_OK;
 2297              		.loc 1 761 44 view .LVU587
 2298 004a 07EE102A 		vmov	s14, r2	@ int
 760:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2299              		.loc 1 760 58 view .LVU588
 2300 004e F7EE006A 		vmov.f32	s13, #1.0e+0
 761:./../bno055.c ****     return BNO_OK;
 2301              		.loc 1 761 44 view .LVU589
 2302 0052 B8EEC77A 		vcvt.f32.s32	s14, s14
ARM GAS  /tmp/cctFn18N.s 			page 73


 760:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2303              		.loc 1 760 58 view .LVU590
 2304 0056 002B     		cmp	r3, #0
 2305 0058 18BF     		it	ne
 2306 005a F0EE667A 		vmovne.f32	s15, s13
 2307              	.LVL250:
 761:./../bno055.c ****     return BNO_OK;
 2308              		.loc 1 761 5 is_stmt 1 view .LVU591
 761:./../bno055.c ****     return BNO_OK;
 2309              		.loc 1 761 44 is_stmt 0 view .LVU592
 2310 005e C7EE276A 		vdiv.f32	s13, s14, s15
 761:./../bno055.c ****     return BNO_OK;
 2311              		.loc 1 761 10 view .LVU593
 2312 0062 C5ED006A 		vstr.32	s13, [r5]
 762:./../bno055.c **** }
 2313              		.loc 1 762 5 is_stmt 1 view .LVU594
 763:./../bno055.c **** 
 2314              		.loc 1 763 1 is_stmt 0 view .LVU595
 2315 0066 07B0     		add	sp, sp, #28
 2316              	.LCFI80:
 2317              		.cfi_def_cfa_offset 20
 2318              		@ sp needed
 2319 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 2320              	.LVL251:
 2321              	.L112:
 763:./../bno055.c **** 
 2322              		.loc 1 763 1 view .LVU596
 2323 006a 00BF     		.align	2
 2324              	.L111:
 2325 006c 0000C842 		.word	1120403456
 2326              		.cfi_endproc
 2327              	.LFE152:
 2329              		.section	.text.bno055_gravity_z,"ax",%progbits
 2330              		.align	1
 2331              		.p2align 2,,3
 2332              		.global	bno055_gravity_z
 2333              		.syntax unified
 2334              		.thumb
 2335              		.thumb_func
 2336              		.fpu fpv4-sp-d16
 2338              	bno055_gravity_z:
 2339              	.LVL252:
 2340              	.LFB153:
 782:./../bno055.c ****     error_bno err;
 2341              		.loc 1 782 53 is_stmt 1 view -0
 2342              		.cfi_startproc
 2343              		@ args = 0, pretend = 0, frame = 16
 2344              		@ frame_needed = 0, uses_anonymous_args = 0
 783:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2345              		.loc 1 783 5 view .LVU598
 789:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_Z_LSB, data, 2)) != BNO_OK) {
 2346              		.loc 1 789 5 view .LVU599
 790:./../bno055.c ****         return err;
 2347              		.loc 1 790 5 view .LVU600
 782:./../bno055.c ****     error_bno err;
 2348              		.loc 1 782 53 is_stmt 0 view .LVU601
 2349 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/cctFn18N.s 			page 74


 2350              	.LCFI81:
 2351              		.cfi_def_cfa_offset 20
 2352              		.cfi_offset 4, -20
 2353              		.cfi_offset 5, -16
 2354              		.cfi_offset 6, -12
 2355              		.cfi_offset 7, -8
 2356              		.cfi_offset 14, -4
 2357 0002 87B0     		sub	sp, sp, #28
 2358              	.LCFI82:
 2359              		.cfi_def_cfa_offset 48
 2360 0004 0668     		ldr	r6, [r0]
 2361              	.LVL253:
 2362              	.LBB180:
 2363              	.LBB181:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2364              		.loc 1 1305 11 view .LVU602
 2365 0006 4FF0FF37 		mov	r7, #-1
 2366 000a 3223     		movs	r3, #50
 2367 000c 0097     		str	r7, [sp]
 2368              	.LVL254:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2369              		.loc 1 1305 11 view .LVU603
 2370 000e 8DF81330 		strb	r3, [sp, #19]
 2371              	.LVL255:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2372              		.loc 1 1305 11 view .LVU604
 2373              	.LBE181:
 2374              	.LBI180:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2375              		.loc 1 1299 11 is_stmt 1 view .LVU605
 2376              	.LBB182:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2377              		.loc 1 1301 5 view .LVU606
1305:./../bno055.c ****     if (err != HAL_OK) {
 2378              		.loc 1 1305 5 view .LVU607
 2379              	.LBE182:
 2380              	.LBE180:
 782:./../bno055.c ****     error_bno err;
 2381              		.loc 1 782 53 is_stmt 0 view .LVU608
 2382 0012 0446     		mov	r4, r0
 2383 0014 0D46     		mov	r5, r1
 2384              	.LBB185:
 2385              	.LBB183:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2386              		.loc 1 1305 11 view .LVU609
 2387 0016 0123     		movs	r3, #1
 2388              	.LVL256:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2389              		.loc 1 1305 11 view .LVU610
 2390 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 2391              	.LVL257:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2392              		.loc 1 1305 11 view .LVU611
 2393 001a 0391     		str	r1, [sp, #12]
 2394 001c 0DF11302 		add	r2, sp, #19
 2395              	.LVL258:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 75


 2396              		.loc 1 1305 11 view .LVU612
 2397 0020 3046     		mov	r0, r6
 2398              	.LVL259:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2399              		.loc 1 1305 11 view .LVU613
 2400 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 2401              	.LVL260:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2402              		.loc 1 1306 5 is_stmt 1 view .LVU614
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2403              		.loc 1 1306 8 is_stmt 0 view .LVU615
 2404 0026 0399     		ldr	r1, [sp, #12]
 2405 0028 10B1     		cbz	r0, .L114
 2406              	.L116:
 2407              	.LVL261:
1307:./../bno055.c ****     }
 2408              		.loc 1 1307 16 view .LVU616
 2409 002a 0120     		movs	r0, #1
 2410              	.LBE183:
 2411              	.LBE185:
 797:./../bno055.c **** 
 2412              		.loc 1 797 1 view .LVU617
 2413 002c 07B0     		add	sp, sp, #28
 2414              	.LCFI83:
 2415              		.cfi_remember_state
 2416              		.cfi_def_cfa_offset 20
 2417              		@ sp needed
 2418 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 2419              	.LVL262:
 2420              	.L114:
 2421              	.LCFI84:
 2422              		.cfi_restore_state
 2423              	.LBB186:
 2424              	.LBB184:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 2425              		.loc 1 1309 5 is_stmt 1 view .LVU618
1310:./../bno055.c ****     if (err != HAL_OK) {
 2426              		.loc 1 1310 9 is_stmt 0 view .LVU619
 2427 0030 0097     		str	r7, [sp]
 2428 0032 0223     		movs	r3, #2
 2429 0034 3046     		mov	r0, r6
 2430              	.LVL263:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2431              		.loc 1 1310 9 view .LVU620
 2432 0036 05AA     		add	r2, sp, #20
 2433              	.LVL264:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2434              		.loc 1 1310 9 view .LVU621
 2435 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 2436              	.LVL265:
 2437              		.loc 1 1311 5 is_stmt 1 view .LVU622
 2438              		.loc 1 1311 8 is_stmt 0 view .LVU623
 2439 003c 0028     		cmp	r0, #0
 2440 003e F4D1     		bne	.L116
 2441              	.LVL266:
 2442              		.loc 1 1311 8 view .LVU624
 2443              	.LBE184:
ARM GAS  /tmp/cctFn18N.s 			page 76


 2444              	.LBE186:
 793:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 2445              		.loc 1 793 5 is_stmt 1 view .LVU625
 795:./../bno055.c ****     return BNO_OK;
 2446              		.loc 1 795 44 is_stmt 0 view .LVU626
 2447 0040 BDF91420 		ldrsh	r2, [sp, #20]
 794:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2448              		.loc 1 794 58 view .LVU627
 2449 0044 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 2450 0046 DFED097A 		vldr.32	s15, .L120
 795:./../bno055.c ****     return BNO_OK;
 2451              		.loc 1 795 44 view .LVU628
 2452 004a 07EE102A 		vmov	s14, r2	@ int
 794:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2453              		.loc 1 794 58 view .LVU629
 2454 004e F7EE006A 		vmov.f32	s13, #1.0e+0
 795:./../bno055.c ****     return BNO_OK;
 2455              		.loc 1 795 44 view .LVU630
 2456 0052 B8EEC77A 		vcvt.f32.s32	s14, s14
 794:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2457              		.loc 1 794 58 view .LVU631
 2458 0056 002B     		cmp	r3, #0
 2459 0058 18BF     		it	ne
 2460 005a F0EE667A 		vmovne.f32	s15, s13
 2461              	.LVL267:
 795:./../bno055.c ****     return BNO_OK;
 2462              		.loc 1 795 5 is_stmt 1 view .LVU632
 795:./../bno055.c ****     return BNO_OK;
 2463              		.loc 1 795 44 is_stmt 0 view .LVU633
 2464 005e C7EE276A 		vdiv.f32	s13, s14, s15
 795:./../bno055.c ****     return BNO_OK;
 2465              		.loc 1 795 10 view .LVU634
 2466 0062 C5ED006A 		vstr.32	s13, [r5]
 796:./../bno055.c **** }
 2467              		.loc 1 796 5 is_stmt 1 view .LVU635
 797:./../bno055.c **** 
 2468              		.loc 1 797 1 is_stmt 0 view .LVU636
 2469 0066 07B0     		add	sp, sp, #28
 2470              	.LCFI85:
 2471              		.cfi_def_cfa_offset 20
 2472              		@ sp needed
 2473 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 2474              	.LVL268:
 2475              	.L121:
 797:./../bno055.c **** 
 2476              		.loc 1 797 1 view .LVU637
 2477 006a 00BF     		.align	2
 2478              	.L120:
 2479 006c 0000C842 		.word	1120403456
 2480              		.cfi_endproc
 2481              	.LFE153:
 2483              		.section	.text.bno055_euler_yaw,"ax",%progbits
 2484              		.align	1
 2485              		.p2align 2,,3
 2486              		.global	bno055_euler_yaw
 2487              		.syntax unified
 2488              		.thumb
ARM GAS  /tmp/cctFn18N.s 			page 77


 2489              		.thumb_func
 2490              		.fpu fpv4-sp-d16
 2492              	bno055_euler_yaw:
 2493              	.LVL269:
 2494              	.LFB155:
 853:./../bno055.c ****     error_bno err;
 2495              		.loc 1 853 53 is_stmt 1 view -0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 16
 2498              		@ frame_needed = 0, uses_anonymous_args = 0
 854:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2499              		.loc 1 854 5 view .LVU639
 860:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_HEADING_LSB, data, 2)) !=
 2500              		.loc 1 860 5 view .LVU640
 861:./../bno055.c ****         BNO_OK) {
 2501              		.loc 1 861 5 view .LVU641
 853:./../bno055.c ****     error_bno err;
 2502              		.loc 1 853 53 is_stmt 0 view .LVU642
 2503 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2504              	.LCFI86:
 2505              		.cfi_def_cfa_offset 20
 2506              		.cfi_offset 4, -20
 2507              		.cfi_offset 5, -16
 2508              		.cfi_offset 6, -12
 2509              		.cfi_offset 7, -8
 2510              		.cfi_offset 14, -4
 2511 0002 87B0     		sub	sp, sp, #28
 2512              	.LCFI87:
 2513              		.cfi_def_cfa_offset 48
 2514 0004 0668     		ldr	r6, [r0]
 2515              	.LVL270:
 2516              	.LBB189:
 2517              	.LBB190:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2518              		.loc 1 1305 11 view .LVU643
 2519 0006 4FF0FF37 		mov	r7, #-1
 2520 000a 1A23     		movs	r3, #26
 2521 000c 0097     		str	r7, [sp]
 2522              	.LVL271:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2523              		.loc 1 1305 11 view .LVU644
 2524 000e 8DF81330 		strb	r3, [sp, #19]
 2525              	.LVL272:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2526              		.loc 1 1305 11 view .LVU645
 2527              	.LBE190:
 2528              	.LBI189:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2529              		.loc 1 1299 11 is_stmt 1 view .LVU646
 2530              	.LBB191:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2531              		.loc 1 1301 5 view .LVU647
1305:./../bno055.c ****     if (err != HAL_OK) {
 2532              		.loc 1 1305 5 view .LVU648
 2533              	.LBE191:
 2534              	.LBE189:
 853:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 78


 2535              		.loc 1 853 53 is_stmt 0 view .LVU649
 2536 0012 0446     		mov	r4, r0
 2537 0014 0D46     		mov	r5, r1
 2538              	.LBB194:
 2539              	.LBB192:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2540              		.loc 1 1305 11 view .LVU650
 2541 0016 0123     		movs	r3, #1
 2542              	.LVL273:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2543              		.loc 1 1305 11 view .LVU651
 2544 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 2545              	.LVL274:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2546              		.loc 1 1305 11 view .LVU652
 2547 001a 0391     		str	r1, [sp, #12]
 2548 001c 0DF11302 		add	r2, sp, #19
 2549              	.LVL275:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2550              		.loc 1 1305 11 view .LVU653
 2551 0020 3046     		mov	r0, r6
 2552              	.LVL276:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2553              		.loc 1 1305 11 view .LVU654
 2554 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 2555              	.LVL277:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2556              		.loc 1 1306 5 is_stmt 1 view .LVU655
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2557              		.loc 1 1306 8 is_stmt 0 view .LVU656
 2558 0026 0399     		ldr	r1, [sp, #12]
 2559 0028 10B1     		cbz	r0, .L123
 2560              	.L125:
 2561              	.LVL278:
1307:./../bno055.c ****     }
 2562              		.loc 1 1307 16 view .LVU657
 2563 002a 0120     		movs	r0, #1
 2564              	.LBE192:
 2565              	.LBE194:
 869:./../bno055.c **** 
 2566              		.loc 1 869 1 view .LVU658
 2567 002c 07B0     		add	sp, sp, #28
 2568              	.LCFI88:
 2569              		.cfi_remember_state
 2570              		.cfi_def_cfa_offset 20
 2571              		@ sp needed
 2572 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 2573              	.LVL279:
 2574              	.L123:
 2575              	.LCFI89:
 2576              		.cfi_restore_state
 2577              	.LBB195:
 2578              	.LBB193:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 2579              		.loc 1 1309 5 is_stmt 1 view .LVU659
1310:./../bno055.c ****     if (err != HAL_OK) {
 2580              		.loc 1 1310 9 is_stmt 0 view .LVU660
ARM GAS  /tmp/cctFn18N.s 			page 79


 2581 0030 0097     		str	r7, [sp]
 2582 0032 0223     		movs	r3, #2
 2583 0034 3046     		mov	r0, r6
 2584              	.LVL280:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2585              		.loc 1 1310 9 view .LVU661
 2586 0036 05AA     		add	r2, sp, #20
 2587              	.LVL281:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2588              		.loc 1 1310 9 view .LVU662
 2589 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 2590              	.LVL282:
 2591              		.loc 1 1311 5 is_stmt 1 view .LVU663
 2592              		.loc 1 1311 8 is_stmt 0 view .LVU664
 2593 003c 0028     		cmp	r0, #0
 2594 003e F4D1     		bne	.L125
 2595              	.LVL283:
 2596              		.loc 1 1311 8 view .LVU665
 2597              	.LBE193:
 2598              	.LBE195:
 865:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 2599              		.loc 1 865 5 is_stmt 1 view .LVU666
 867:./../bno055.c ****     return BNO_OK;
 2600              		.loc 1 867 44 is_stmt 0 view .LVU667
 2601 0040 BDF91420 		ldrsh	r2, [sp, #20]
 866:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2602              		.loc 1 866 54 view .LVU668
 2603 0044 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 2604 0046 DFED096A 		vldr.32	s13, .L129
 867:./../bno055.c ****     return BNO_OK;
 2605              		.loc 1 867 44 view .LVU669
 2606 004a 07EE102A 		vmov	s14, r2	@ int
 866:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2607              		.loc 1 866 54 view .LVU670
 2608 004e 002B     		cmp	r3, #0
 867:./../bno055.c ****     return BNO_OK;
 2609              		.loc 1 867 44 view .LVU671
 2610 0050 B8EEC77A 		vcvt.f32.s32	s14, s14
 866:./../bno055.c ****     *buf = (s16)((data[1] << 8) | data[0]) / scale;
 2611              		.loc 1 866 54 view .LVU672
 2612 0054 F3EE007A 		vmov.f32	s15, #1.6e+1
 2613 0058 18BF     		it	ne
 2614 005a F0EE667A 		vmovne.f32	s15, s13
 2615              	.LVL284:
 867:./../bno055.c ****     return BNO_OK;
 2616              		.loc 1 867 5 is_stmt 1 view .LVU673
 867:./../bno055.c ****     return BNO_OK;
 2617              		.loc 1 867 44 is_stmt 0 view .LVU674
 2618 005e C7EE276A 		vdiv.f32	s13, s14, s15
 867:./../bno055.c ****     return BNO_OK;
 2619              		.loc 1 867 10 view .LVU675
 2620 0062 C5ED006A 		vstr.32	s13, [r5]
 868:./../bno055.c **** }
 2621              		.loc 1 868 5 is_stmt 1 view .LVU676
 869:./../bno055.c **** 
 2622              		.loc 1 869 1 is_stmt 0 view .LVU677
 2623 0066 07B0     		add	sp, sp, #28
ARM GAS  /tmp/cctFn18N.s 			page 80


 2624              	.LCFI90:
 2625              		.cfi_def_cfa_offset 20
 2626              		@ sp needed
 2627 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 2628              	.LVL285:
 2629              	.L130:
 869:./../bno055.c **** 
 2630              		.loc 1 869 1 view .LVU678
 2631 006a 00BF     		.align	2
 2632              	.L129:
 2633 006c 00006144 		.word	1147207680
 2634              		.cfi_endproc
 2635              	.LFE155:
 2637              		.section	.text.bno055_gyro_y,"ax",%progbits
 2638              		.align	1
 2639              		.p2align 2,,3
 2640              		.global	bno055_gyro_y
 2641              		.syntax unified
 2642              		.thumb
 2643              		.thumb_func
 2644              		.fpu fpv4-sp-d16
 2646              	bno055_gyro_y:
 2647              	.LVL286:
 2648              	.LFB144:
 466:./../bno055.c ****     error_bno err;
 2649              		.loc 1 466 50 is_stmt 1 view -0
 2650              		.cfi_startproc
 2651              		@ args = 0, pretend = 0, frame = 16
 2652              		@ frame_needed = 0, uses_anonymous_args = 0
 467:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2653              		.loc 1 467 5 view .LVU680
 473:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_Y_LSB, data, 2)) != BNO_OK) {
 2654              		.loc 1 473 5 view .LVU681
 474:./../bno055.c ****         return err;
 2655              		.loc 1 474 5 view .LVU682
 466:./../bno055.c ****     error_bno err;
 2656              		.loc 1 466 50 is_stmt 0 view .LVU683
 2657 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2658              	.LCFI91:
 2659              		.cfi_def_cfa_offset 20
 2660              		.cfi_offset 4, -20
 2661              		.cfi_offset 5, -16
 2662              		.cfi_offset 6, -12
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 87B0     		sub	sp, sp, #28
 2666              	.LCFI92:
 2667              		.cfi_def_cfa_offset 48
 2668 0004 0668     		ldr	r6, [r0]
 2669              	.LVL287:
 2670              	.LBB198:
 2671              	.LBB199:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2672              		.loc 1 1305 11 view .LVU684
 2673 0006 4FF0FF37 		mov	r7, #-1
 2674 000a 1623     		movs	r3, #22
 2675 000c 0097     		str	r7, [sp]
ARM GAS  /tmp/cctFn18N.s 			page 81


 2676              	.LVL288:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2677              		.loc 1 1305 11 view .LVU685
 2678 000e 8DF81330 		strb	r3, [sp, #19]
 2679              	.LVL289:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2680              		.loc 1 1305 11 view .LVU686
 2681              	.LBE199:
 2682              	.LBI198:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2683              		.loc 1 1299 11 is_stmt 1 view .LVU687
 2684              	.LBB200:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2685              		.loc 1 1301 5 view .LVU688
1305:./../bno055.c ****     if (err != HAL_OK) {
 2686              		.loc 1 1305 5 view .LVU689
 2687              	.LBE200:
 2688              	.LBE198:
 466:./../bno055.c ****     error_bno err;
 2689              		.loc 1 466 50 is_stmt 0 view .LVU690
 2690 0012 0446     		mov	r4, r0
 2691 0014 0D46     		mov	r5, r1
 2692              	.LBB203:
 2693              	.LBB201:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2694              		.loc 1 1305 11 view .LVU691
 2695 0016 0123     		movs	r3, #1
 2696              	.LVL290:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2697              		.loc 1 1305 11 view .LVU692
 2698 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 2699              	.LVL291:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2700              		.loc 1 1305 11 view .LVU693
 2701 001a 0391     		str	r1, [sp, #12]
 2702 001c 0DF11302 		add	r2, sp, #19
 2703              	.LVL292:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2704              		.loc 1 1305 11 view .LVU694
 2705 0020 3046     		mov	r0, r6
 2706              	.LVL293:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2707              		.loc 1 1305 11 view .LVU695
 2708 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 2709              	.LVL294:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2710              		.loc 1 1306 5 is_stmt 1 view .LVU696
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2711              		.loc 1 1306 8 is_stmt 0 view .LVU697
 2712 0026 0399     		ldr	r1, [sp, #12]
 2713 0028 10B1     		cbz	r0, .L132
 2714              	.L134:
 2715              	.LVL295:
1307:./../bno055.c ****     }
 2716              		.loc 1 1307 16 view .LVU698
 2717 002a 0120     		movs	r0, #1
 2718              	.LBE201:
ARM GAS  /tmp/cctFn18N.s 			page 82


 2719              	.LBE203:
 482:./../bno055.c **** 
 2720              		.loc 1 482 1 view .LVU699
 2721 002c 07B0     		add	sp, sp, #28
 2722              	.LCFI93:
 2723              		.cfi_remember_state
 2724              		.cfi_def_cfa_offset 20
 2725              		@ sp needed
 2726 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 2727              	.LVL296:
 2728              	.L132:
 2729              	.LCFI94:
 2730              		.cfi_restore_state
 2731              	.LBB204:
 2732              	.LBB202:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 2733              		.loc 1 1309 5 is_stmt 1 view .LVU700
1310:./../bno055.c ****     if (err != HAL_OK) {
 2734              		.loc 1 1310 9 is_stmt 0 view .LVU701
 2735 0030 0097     		str	r7, [sp]
 2736 0032 0223     		movs	r3, #2
 2737 0034 3046     		mov	r0, r6
 2738              	.LVL297:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2739              		.loc 1 1310 9 view .LVU702
 2740 0036 05AA     		add	r2, sp, #20
 2741              	.LVL298:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2742              		.loc 1 1310 9 view .LVU703
 2743 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 2744              	.LVL299:
 2745              		.loc 1 1311 5 is_stmt 1 view .LVU704
 2746              		.loc 1 1311 8 is_stmt 0 view .LVU705
 2747 003c 0028     		cmp	r0, #0
 2748 003e F4D1     		bne	.L134
 2749              	.LVL300:
 2750              		.loc 1 1311 8 view .LVU706
 2751              	.LBE202:
 2752              	.LBE204:
 478:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2753              		.loc 1 478 5 is_stmt 1 view .LVU707
 478:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2754              		.loc 1 478 44 is_stmt 0 view .LVU708
 2755 0040 BDF91420 		ldrsh	r2, [sp, #20]
 480:./../bno055.c ****     return BNO_OK;
 2756              		.loc 1 480 50 view .LVU709
 2757 0044 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2758 0046 DFED096A 		vldr.32	s13, .L138
 478:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2759              		.loc 1 478 44 view .LVU710
 2760 004a 07EE102A 		vmov	s14, r2	@ int
 480:./../bno055.c ****     return BNO_OK;
 2761              		.loc 1 480 50 view .LVU711
 2762 004e 002B     		cmp	r3, #0
 478:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2763              		.loc 1 478 44 view .LVU712
 2764 0050 B8EEC77A 		vcvt.f32.s32	s14, s14
ARM GAS  /tmp/cctFn18N.s 			page 83


 480:./../bno055.c ****     return BNO_OK;
 2765              		.loc 1 480 50 view .LVU713
 2766 0054 F3EE007A 		vmov.f32	s15, #1.6e+1
 2767 0058 18BF     		it	ne
 2768 005a F0EE667A 		vmovne.f32	s15, s13
 478:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2769              		.loc 1 478 44 view .LVU714
 2770 005e C7EE276A 		vdiv.f32	s13, s14, s15
 478:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2771              		.loc 1 478 10 view .LVU715
 2772 0062 C5ED006A 		vstr.32	s13, [r5]
 481:./../bno055.c **** };
 2773              		.loc 1 481 5 is_stmt 1 view .LVU716
 482:./../bno055.c **** 
 2774              		.loc 1 482 1 is_stmt 0 view .LVU717
 2775 0066 07B0     		add	sp, sp, #28
 2776              	.LCFI95:
 2777              		.cfi_def_cfa_offset 20
 2778              		@ sp needed
 2779 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 2780              	.LVL301:
 2781              	.L139:
 482:./../bno055.c **** 
 2782              		.loc 1 482 1 view .LVU718
 2783 006a 00BF     		.align	2
 2784              	.L138:
 2785 006c 00006144 		.word	1147207680
 2786              		.cfi_endproc
 2787              	.LFE144:
 2789              		.section	.text.bno055_gyro_z,"ax",%progbits
 2790              		.align	1
 2791              		.p2align 2,,3
 2792              		.global	bno055_gyro_z
 2793              		.syntax unified
 2794              		.thumb
 2795              		.thumb_func
 2796              		.fpu fpv4-sp-d16
 2798              	bno055_gyro_z:
 2799              	.LVL302:
 2800              	.LFB145:
 501:./../bno055.c ****     error_bno err;
 2801              		.loc 1 501 50 is_stmt 1 view -0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 16
 2804              		@ frame_needed = 0, uses_anonymous_args = 0
 502:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2805              		.loc 1 502 5 view .LVU720
 508:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_Z_LSB, data, 2)) != BNO_OK) {
 2806              		.loc 1 508 5 view .LVU721
 509:./../bno055.c ****         return err;
 2807              		.loc 1 509 5 view .LVU722
 501:./../bno055.c ****     error_bno err;
 2808              		.loc 1 501 50 is_stmt 0 view .LVU723
 2809 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2810              	.LCFI96:
 2811              		.cfi_def_cfa_offset 20
 2812              		.cfi_offset 4, -20
ARM GAS  /tmp/cctFn18N.s 			page 84


 2813              		.cfi_offset 5, -16
 2814              		.cfi_offset 6, -12
 2815              		.cfi_offset 7, -8
 2816              		.cfi_offset 14, -4
 2817 0002 87B0     		sub	sp, sp, #28
 2818              	.LCFI97:
 2819              		.cfi_def_cfa_offset 48
 2820 0004 0668     		ldr	r6, [r0]
 2821              	.LVL303:
 2822              	.LBB207:
 2823              	.LBB208:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2824              		.loc 1 1305 11 view .LVU724
 2825 0006 4FF0FF37 		mov	r7, #-1
 2826 000a 1823     		movs	r3, #24
 2827 000c 0097     		str	r7, [sp]
 2828              	.LVL304:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2829              		.loc 1 1305 11 view .LVU725
 2830 000e 8DF81330 		strb	r3, [sp, #19]
 2831              	.LVL305:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2832              		.loc 1 1305 11 view .LVU726
 2833              	.LBE208:
 2834              	.LBI207:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2835              		.loc 1 1299 11 is_stmt 1 view .LVU727
 2836              	.LBB209:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2837              		.loc 1 1301 5 view .LVU728
1305:./../bno055.c ****     if (err != HAL_OK) {
 2838              		.loc 1 1305 5 view .LVU729
 2839              	.LBE209:
 2840              	.LBE207:
 501:./../bno055.c ****     error_bno err;
 2841              		.loc 1 501 50 is_stmt 0 view .LVU730
 2842 0012 0446     		mov	r4, r0
 2843 0014 0D46     		mov	r5, r1
 2844              	.LBB212:
 2845              	.LBB210:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2846              		.loc 1 1305 11 view .LVU731
 2847 0016 0123     		movs	r3, #1
 2848              	.LVL306:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2849              		.loc 1 1305 11 view .LVU732
 2850 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 2851              	.LVL307:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2852              		.loc 1 1305 11 view .LVU733
 2853 001a 0391     		str	r1, [sp, #12]
 2854 001c 0DF11302 		add	r2, sp, #19
 2855              	.LVL308:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2856              		.loc 1 1305 11 view .LVU734
 2857 0020 3046     		mov	r0, r6
 2858              	.LVL309:
ARM GAS  /tmp/cctFn18N.s 			page 85


1305:./../bno055.c ****     if (err != HAL_OK) {
 2859              		.loc 1 1305 11 view .LVU735
 2860 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 2861              	.LVL310:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2862              		.loc 1 1306 5 is_stmt 1 view .LVU736
1306:./../bno055.c ****         return BNO_ERR_I2C;
 2863              		.loc 1 1306 8 is_stmt 0 view .LVU737
 2864 0026 0399     		ldr	r1, [sp, #12]
 2865 0028 10B1     		cbz	r0, .L141
 2866              	.L143:
 2867              	.LVL311:
1307:./../bno055.c ****     }
 2868              		.loc 1 1307 16 view .LVU738
 2869 002a 0120     		movs	r0, #1
 2870              	.LBE210:
 2871              	.LBE212:
 517:./../bno055.c **** 
 2872              		.loc 1 517 1 view .LVU739
 2873 002c 07B0     		add	sp, sp, #28
 2874              	.LCFI98:
 2875              		.cfi_remember_state
 2876              		.cfi_def_cfa_offset 20
 2877              		@ sp needed
 2878 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 2879              	.LVL312:
 2880              	.L141:
 2881              	.LCFI99:
 2882              		.cfi_restore_state
 2883              	.LBB213:
 2884              	.LBB211:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 2885              		.loc 1 1309 5 is_stmt 1 view .LVU740
1310:./../bno055.c ****     if (err != HAL_OK) {
 2886              		.loc 1 1310 9 is_stmt 0 view .LVU741
 2887 0030 0097     		str	r7, [sp]
 2888 0032 0223     		movs	r3, #2
 2889 0034 3046     		mov	r0, r6
 2890              	.LVL313:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2891              		.loc 1 1310 9 view .LVU742
 2892 0036 05AA     		add	r2, sp, #20
 2893              	.LVL314:
1310:./../bno055.c ****     if (err != HAL_OK) {
 2894              		.loc 1 1310 9 view .LVU743
 2895 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 2896              	.LVL315:
 2897              		.loc 1 1311 5 is_stmt 1 view .LVU744
 2898              		.loc 1 1311 8 is_stmt 0 view .LVU745
 2899 003c 0028     		cmp	r0, #0
 2900 003e F4D1     		bne	.L143
 2901              	.LVL316:
 2902              		.loc 1 1311 8 view .LVU746
 2903              	.LBE211:
 2904              	.LBE213:
 513:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2905              		.loc 1 513 5 is_stmt 1 view .LVU747
ARM GAS  /tmp/cctFn18N.s 			page 86


 513:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2906              		.loc 1 513 44 is_stmt 0 view .LVU748
 2907 0040 BDF91420 		ldrsh	r2, [sp, #20]
 515:./../bno055.c ****     return BNO_OK;
 2908              		.loc 1 515 50 view .LVU749
 2909 0044 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2910 0046 DFED096A 		vldr.32	s13, .L147
 513:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2911              		.loc 1 513 44 view .LVU750
 2912 004a 07EE102A 		vmov	s14, r2	@ int
 515:./../bno055.c ****     return BNO_OK;
 2913              		.loc 1 515 50 view .LVU751
 2914 004e 002B     		cmp	r3, #0
 513:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2915              		.loc 1 513 44 view .LVU752
 2916 0050 B8EEC77A 		vcvt.f32.s32	s14, s14
 515:./../bno055.c ****     return BNO_OK;
 2917              		.loc 1 515 50 view .LVU753
 2918 0054 F3EE007A 		vmov.f32	s15, #1.6e+1
 2919 0058 18BF     		it	ne
 2920 005a F0EE667A 		vmovne.f32	s15, s13
 513:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2921              		.loc 1 513 44 view .LVU754
 2922 005e C7EE276A 		vdiv.f32	s13, s14, s15
 513:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 2923              		.loc 1 513 10 view .LVU755
 2924 0062 C5ED006A 		vstr.32	s13, [r5]
 516:./../bno055.c **** };
 2925              		.loc 1 516 5 is_stmt 1 view .LVU756
 517:./../bno055.c **** 
 2926              		.loc 1 517 1 is_stmt 0 view .LVU757
 2927 0066 07B0     		add	sp, sp, #28
 2928              	.LCFI100:
 2929              		.cfi_def_cfa_offset 20
 2930              		@ sp needed
 2931 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 2932              	.LVL317:
 2933              	.L148:
 517:./../bno055.c **** 
 2934              		.loc 1 517 1 view .LVU758
 2935 006a 00BF     		.align	2
 2936              	.L147:
 2937 006c 00006144 		.word	1147207680
 2938              		.cfi_endproc
 2939              	.LFE145:
 2941              		.section	.text.bno055_linear_acc_y,"ax",%progbits
 2942              		.align	1
 2943              		.p2align 2,,3
 2944              		.global	bno055_linear_acc_y
 2945              		.syntax unified
 2946              		.thumb
 2947              		.thumb_func
 2948              		.fpu fpv4-sp-d16
 2950              	bno055_linear_acc_y:
 2951              	.LVL318:
 2952              	.LFB140:
 323:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 87


 2953              		.loc 1 323 56 is_stmt 1 view -0
 2954              		.cfi_startproc
 2955              		@ args = 0, pretend = 0, frame = 16
 2956              		@ frame_needed = 0, uses_anonymous_args = 0
 324:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 2957              		.loc 1 324 5 view .LVU760
 330:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_Y_LSB, data, 2)) != BNO_OK) {
 2958              		.loc 1 330 5 view .LVU761
 331:./../bno055.c ****         return err;
 2959              		.loc 1 331 5 view .LVU762
 323:./../bno055.c ****     error_bno err;
 2960              		.loc 1 323 56 is_stmt 0 view .LVU763
 2961 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2962              	.LCFI101:
 2963              		.cfi_def_cfa_offset 20
 2964              		.cfi_offset 4, -20
 2965              		.cfi_offset 5, -16
 2966              		.cfi_offset 6, -12
 2967              		.cfi_offset 7, -8
 2968              		.cfi_offset 14, -4
 2969 0002 87B0     		sub	sp, sp, #28
 2970              	.LCFI102:
 2971              		.cfi_def_cfa_offset 48
 2972 0004 0668     		ldr	r6, [r0]
 2973              	.LVL319:
 2974              	.LBB216:
 2975              	.LBB217:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2976              		.loc 1 1305 11 view .LVU764
 2977 0006 4FF0FF37 		mov	r7, #-1
 2978 000a 2A23     		movs	r3, #42
 2979 000c 0097     		str	r7, [sp]
 2980              	.LVL320:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2981              		.loc 1 1305 11 view .LVU765
 2982 000e 8DF81330 		strb	r3, [sp, #19]
 2983              	.LVL321:
1305:./../bno055.c ****     if (err != HAL_OK) {
 2984              		.loc 1 1305 11 view .LVU766
 2985              	.LBE217:
 2986              	.LBI216:
1299:./../bno055.c ****                            uint32_t buf_size) {
 2987              		.loc 1 1299 11 is_stmt 1 view .LVU767
 2988              	.LBB218:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 2989              		.loc 1 1301 5 view .LVU768
1305:./../bno055.c ****     if (err != HAL_OK) {
 2990              		.loc 1 1305 5 view .LVU769
 2991              	.LBE218:
 2992              	.LBE216:
 323:./../bno055.c ****     error_bno err;
 2993              		.loc 1 323 56 is_stmt 0 view .LVU770
 2994 0012 0446     		mov	r4, r0
 2995 0014 0D46     		mov	r5, r1
 2996              	.LBB221:
 2997              	.LBB219:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 88


 2998              		.loc 1 1305 11 view .LVU771
 2999 0016 0123     		movs	r3, #1
 3000              	.LVL322:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3001              		.loc 1 1305 11 view .LVU772
 3002 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 3003              	.LVL323:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3004              		.loc 1 1305 11 view .LVU773
 3005 001a 0391     		str	r1, [sp, #12]
 3006 001c 0DF11302 		add	r2, sp, #19
 3007              	.LVL324:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3008              		.loc 1 1305 11 view .LVU774
 3009 0020 3046     		mov	r0, r6
 3010              	.LVL325:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3011              		.loc 1 1305 11 view .LVU775
 3012 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3013              	.LVL326:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3014              		.loc 1 1306 5 is_stmt 1 view .LVU776
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3015              		.loc 1 1306 8 is_stmt 0 view .LVU777
 3016 0026 0399     		ldr	r1, [sp, #12]
 3017 0028 10B1     		cbz	r0, .L150
 3018              	.L152:
 3019              	.LVL327:
1307:./../bno055.c ****     }
 3020              		.loc 1 1307 16 view .LVU778
 3021 002a 0120     		movs	r0, #1
 3022              	.LBE219:
 3023              	.LBE221:
 339:./../bno055.c **** 
 3024              		.loc 1 339 1 view .LVU779
 3025 002c 07B0     		add	sp, sp, #28
 3026              	.LCFI103:
 3027              		.cfi_remember_state
 3028              		.cfi_def_cfa_offset 20
 3029              		@ sp needed
 3030 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3031              	.LVL328:
 3032              	.L150:
 3033              	.LCFI104:
 3034              		.cfi_restore_state
 3035              	.LBB222:
 3036              	.LBB220:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3037              		.loc 1 1309 5 is_stmt 1 view .LVU780
1310:./../bno055.c ****     if (err != HAL_OK) {
 3038              		.loc 1 1310 9 is_stmt 0 view .LVU781
 3039 0030 0097     		str	r7, [sp]
 3040 0032 0223     		movs	r3, #2
 3041 0034 3046     		mov	r0, r6
 3042              	.LVL329:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3043              		.loc 1 1310 9 view .LVU782
ARM GAS  /tmp/cctFn18N.s 			page 89


 3044 0036 05AA     		add	r2, sp, #20
 3045              	.LVL330:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3046              		.loc 1 1310 9 view .LVU783
 3047 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3048              	.LVL331:
 3049              		.loc 1 1311 5 is_stmt 1 view .LVU784
 3050              		.loc 1 1311 8 is_stmt 0 view .LVU785
 3051 003c 0028     		cmp	r0, #0
 3052 003e F4D1     		bne	.L152
 3053              	.LVL332:
 3054              		.loc 1 1311 8 view .LVU786
 3055              	.LBE220:
 3056              	.LBE222:
 335:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3057              		.loc 1 335 5 is_stmt 1 view .LVU787
 335:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3058              		.loc 1 335 44 is_stmt 0 view .LVU788
 3059 0040 BDF91430 		ldrsh	r3, [sp, #20]
 3060 0044 07EE903A 		vmov	s15, r3	@ int
 337:./../bno055.c ****     return BNO_OK;
 3061              		.loc 1 337 54 view .LVU789
 3062 0048 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 335:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3063              		.loc 1 335 44 view .LVU790
 3064 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 337:./../bno055.c ****     return BNO_OK;
 3065              		.loc 1 337 54 view .LVU791
 3066 004e 1BB9     		cbnz	r3, .L153
 335:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3067              		.loc 1 335 44 view .LVU792
 3068 0050 9FED037A 		vldr.32	s14, .L155
 3069 0054 C7EE877A 		vdiv.f32	s15, s15, s14
 3070              	.L153:
 335:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3071              		.loc 1 335 10 view .LVU793
 3072 0058 C5ED007A 		vstr.32	s15, [r5]
 338:./../bno055.c **** };
 3073              		.loc 1 338 5 is_stmt 1 view .LVU794
 339:./../bno055.c **** 
 3074              		.loc 1 339 1 is_stmt 0 view .LVU795
 3075 005c 07B0     		add	sp, sp, #28
 3076              	.LCFI105:
 3077              		.cfi_def_cfa_offset 20
 3078              		@ sp needed
 3079 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 3080              	.LVL333:
 3081              	.L156:
 339:./../bno055.c **** 
 3082              		.loc 1 339 1 view .LVU796
 3083              		.align	2
 3084              	.L155:
 3085 0060 0000C842 		.word	1120403456
 3086              		.cfi_endproc
 3087              	.LFE140:
 3089              		.section	.text.bno055_linear_acc_z,"ax",%progbits
 3090              		.align	1
ARM GAS  /tmp/cctFn18N.s 			page 90


 3091              		.p2align 2,,3
 3092              		.global	bno055_linear_acc_z
 3093              		.syntax unified
 3094              		.thumb
 3095              		.thumb_func
 3096              		.fpu fpv4-sp-d16
 3098              	bno055_linear_acc_z:
 3099              	.LVL334:
 3100              	.LFB141:
 358:./../bno055.c ****     error_bno err;
 3101              		.loc 1 358 56 is_stmt 1 view -0
 3102              		.cfi_startproc
 3103              		@ args = 0, pretend = 0, frame = 16
 3104              		@ frame_needed = 0, uses_anonymous_args = 0
 359:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 3105              		.loc 1 359 5 view .LVU798
 365:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_Z_LSB, data, 2)) != BNO_OK) {
 3106              		.loc 1 365 5 view .LVU799
 366:./../bno055.c ****         return err;
 3107              		.loc 1 366 5 view .LVU800
 358:./../bno055.c ****     error_bno err;
 3108              		.loc 1 358 56 is_stmt 0 view .LVU801
 3109 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3110              	.LCFI106:
 3111              		.cfi_def_cfa_offset 20
 3112              		.cfi_offset 4, -20
 3113              		.cfi_offset 5, -16
 3114              		.cfi_offset 6, -12
 3115              		.cfi_offset 7, -8
 3116              		.cfi_offset 14, -4
 3117 0002 87B0     		sub	sp, sp, #28
 3118              	.LCFI107:
 3119              		.cfi_def_cfa_offset 48
 3120 0004 0668     		ldr	r6, [r0]
 3121              	.LVL335:
 3122              	.LBB225:
 3123              	.LBB226:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3124              		.loc 1 1305 11 view .LVU802
 3125 0006 4FF0FF37 		mov	r7, #-1
 3126 000a 2C23     		movs	r3, #44
 3127 000c 0097     		str	r7, [sp]
 3128              	.LVL336:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3129              		.loc 1 1305 11 view .LVU803
 3130 000e 8DF81330 		strb	r3, [sp, #19]
 3131              	.LVL337:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3132              		.loc 1 1305 11 view .LVU804
 3133              	.LBE226:
 3134              	.LBI225:
1299:./../bno055.c ****                            uint32_t buf_size) {
 3135              		.loc 1 1299 11 is_stmt 1 view .LVU805
 3136              	.LBB227:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 3137              		.loc 1 1301 5 view .LVU806
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 91


 3138              		.loc 1 1305 5 view .LVU807
 3139              	.LBE227:
 3140              	.LBE225:
 358:./../bno055.c ****     error_bno err;
 3141              		.loc 1 358 56 is_stmt 0 view .LVU808
 3142 0012 0446     		mov	r4, r0
 3143 0014 0D46     		mov	r5, r1
 3144              	.LBB230:
 3145              	.LBB228:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3146              		.loc 1 1305 11 view .LVU809
 3147 0016 0123     		movs	r3, #1
 3148              	.LVL338:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3149              		.loc 1 1305 11 view .LVU810
 3150 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 3151              	.LVL339:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3152              		.loc 1 1305 11 view .LVU811
 3153 001a 0391     		str	r1, [sp, #12]
 3154 001c 0DF11302 		add	r2, sp, #19
 3155              	.LVL340:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3156              		.loc 1 1305 11 view .LVU812
 3157 0020 3046     		mov	r0, r6
 3158              	.LVL341:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3159              		.loc 1 1305 11 view .LVU813
 3160 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3161              	.LVL342:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3162              		.loc 1 1306 5 is_stmt 1 view .LVU814
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3163              		.loc 1 1306 8 is_stmt 0 view .LVU815
 3164 0026 0399     		ldr	r1, [sp, #12]
 3165 0028 10B1     		cbz	r0, .L158
 3166              	.L160:
 3167              	.LVL343:
1307:./../bno055.c ****     }
 3168              		.loc 1 1307 16 view .LVU816
 3169 002a 0120     		movs	r0, #1
 3170              	.LBE228:
 3171              	.LBE230:
 374:./../bno055.c **** 
 3172              		.loc 1 374 1 view .LVU817
 3173 002c 07B0     		add	sp, sp, #28
 3174              	.LCFI108:
 3175              		.cfi_remember_state
 3176              		.cfi_def_cfa_offset 20
 3177              		@ sp needed
 3178 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3179              	.LVL344:
 3180              	.L158:
 3181              	.LCFI109:
 3182              		.cfi_restore_state
 3183              	.LBB231:
 3184              	.LBB229:
ARM GAS  /tmp/cctFn18N.s 			page 92


1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3185              		.loc 1 1309 5 is_stmt 1 view .LVU818
1310:./../bno055.c ****     if (err != HAL_OK) {
 3186              		.loc 1 1310 9 is_stmt 0 view .LVU819
 3187 0030 0097     		str	r7, [sp]
 3188 0032 0223     		movs	r3, #2
 3189 0034 3046     		mov	r0, r6
 3190              	.LVL345:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3191              		.loc 1 1310 9 view .LVU820
 3192 0036 05AA     		add	r2, sp, #20
 3193              	.LVL346:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3194              		.loc 1 1310 9 view .LVU821
 3195 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3196              	.LVL347:
 3197              		.loc 1 1311 5 is_stmt 1 view .LVU822
 3198              		.loc 1 1311 8 is_stmt 0 view .LVU823
 3199 003c 0028     		cmp	r0, #0
 3200 003e F4D1     		bne	.L160
 3201              	.LVL348:
 3202              		.loc 1 1311 8 view .LVU824
 3203              	.LBE229:
 3204              	.LBE231:
 370:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3205              		.loc 1 370 5 is_stmt 1 view .LVU825
 370:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3206              		.loc 1 370 44 is_stmt 0 view .LVU826
 3207 0040 BDF91430 		ldrsh	r3, [sp, #20]
 3208 0044 07EE903A 		vmov	s15, r3	@ int
 372:./../bno055.c ****     return BNO_OK;
 3209              		.loc 1 372 54 view .LVU827
 3210 0048 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 370:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3211              		.loc 1 370 44 view .LVU828
 3212 004a F8EEE77A 		vcvt.f32.s32	s15, s15
 372:./../bno055.c ****     return BNO_OK;
 3213              		.loc 1 372 54 view .LVU829
 3214 004e 1BB9     		cbnz	r3, .L161
 370:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3215              		.loc 1 370 44 view .LVU830
 3216 0050 9FED037A 		vldr.32	s14, .L163
 3217 0054 C7EE877A 		vdiv.f32	s15, s15, s14
 3218              	.L161:
 370:./../bno055.c ****            ((imu->_acc_unit == BNO_ACC_UNITSEL_M_S2) ? BNO_ACC_SCALE_M_2
 3219              		.loc 1 370 10 view .LVU831
 3220 0058 C5ED007A 		vstr.32	s15, [r5]
 373:./../bno055.c **** };
 3221              		.loc 1 373 5 is_stmt 1 view .LVU832
 374:./../bno055.c **** 
 3222              		.loc 1 374 1 is_stmt 0 view .LVU833
 3223 005c 07B0     		add	sp, sp, #28
 3224              	.LCFI110:
 3225              		.cfi_def_cfa_offset 20
 3226              		@ sp needed
 3227 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 3228              	.LVL349:
ARM GAS  /tmp/cctFn18N.s 			page 93


 3229              	.L164:
 374:./../bno055.c **** 
 3230              		.loc 1 374 1 view .LVU834
 3231              		.align	2
 3232              	.L163:
 3233 0060 0000C842 		.word	1120403456
 3234              		.cfi_endproc
 3235              	.LFE141:
 3237              		.section	.text.bno055_gyro_x,"ax",%progbits
 3238              		.align	1
 3239              		.p2align 2,,3
 3240              		.global	bno055_gyro_x
 3241              		.syntax unified
 3242              		.thumb
 3243              		.thumb_func
 3244              		.fpu fpv4-sp-d16
 3246              	bno055_gyro_x:
 3247              	.LVL350:
 3248              	.LFB143:
 431:./../bno055.c ****     error_bno err;
 3249              		.loc 1 431 50 is_stmt 1 view -0
 3250              		.cfi_startproc
 3251              		@ args = 0, pretend = 0, frame = 16
 3252              		@ frame_needed = 0, uses_anonymous_args = 0
 432:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 3253              		.loc 1 432 5 view .LVU836
 438:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_X_LSB, data, 2)) != BNO_OK) {
 3254              		.loc 1 438 5 view .LVU837
 439:./../bno055.c ****         return err;
 3255              		.loc 1 439 5 view .LVU838
 431:./../bno055.c ****     error_bno err;
 3256              		.loc 1 431 50 is_stmt 0 view .LVU839
 3257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3258              	.LCFI111:
 3259              		.cfi_def_cfa_offset 20
 3260              		.cfi_offset 4, -20
 3261              		.cfi_offset 5, -16
 3262              		.cfi_offset 6, -12
 3263              		.cfi_offset 7, -8
 3264              		.cfi_offset 14, -4
 3265 0002 87B0     		sub	sp, sp, #28
 3266              	.LCFI112:
 3267              		.cfi_def_cfa_offset 48
 3268 0004 0668     		ldr	r6, [r0]
 3269              	.LVL351:
 3270              	.LBB234:
 3271              	.LBB235:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3272              		.loc 1 1305 11 view .LVU840
 3273 0006 4FF0FF37 		mov	r7, #-1
 3274 000a 1423     		movs	r3, #20
 3275 000c 0097     		str	r7, [sp]
 3276              	.LVL352:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3277              		.loc 1 1305 11 view .LVU841
 3278 000e 8DF81330 		strb	r3, [sp, #19]
 3279              	.LVL353:
ARM GAS  /tmp/cctFn18N.s 			page 94


1305:./../bno055.c ****     if (err != HAL_OK) {
 3280              		.loc 1 1305 11 view .LVU842
 3281              	.LBE235:
 3282              	.LBI234:
1299:./../bno055.c ****                            uint32_t buf_size) {
 3283              		.loc 1 1299 11 is_stmt 1 view .LVU843
 3284              	.LBB236:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 3285              		.loc 1 1301 5 view .LVU844
1305:./../bno055.c ****     if (err != HAL_OK) {
 3286              		.loc 1 1305 5 view .LVU845
 3287              	.LBE236:
 3288              	.LBE234:
 431:./../bno055.c ****     error_bno err;
 3289              		.loc 1 431 50 is_stmt 0 view .LVU846
 3290 0012 0446     		mov	r4, r0
 3291 0014 0D46     		mov	r5, r1
 3292              	.LBB239:
 3293              	.LBB237:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3294              		.loc 1 1305 11 view .LVU847
 3295 0016 0123     		movs	r3, #1
 3296              	.LVL354:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3297              		.loc 1 1305 11 view .LVU848
 3298 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 3299              	.LVL355:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3300              		.loc 1 1305 11 view .LVU849
 3301 001a 0391     		str	r1, [sp, #12]
 3302 001c 0DF11302 		add	r2, sp, #19
 3303              	.LVL356:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3304              		.loc 1 1305 11 view .LVU850
 3305 0020 3046     		mov	r0, r6
 3306              	.LVL357:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3307              		.loc 1 1305 11 view .LVU851
 3308 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3309              	.LVL358:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3310              		.loc 1 1306 5 is_stmt 1 view .LVU852
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3311              		.loc 1 1306 8 is_stmt 0 view .LVU853
 3312 0026 0399     		ldr	r1, [sp, #12]
 3313 0028 10B1     		cbz	r0, .L166
 3314              	.L168:
 3315              	.LVL359:
1307:./../bno055.c ****     }
 3316              		.loc 1 1307 16 view .LVU854
 3317 002a 0120     		movs	r0, #1
 3318              	.LBE237:
 3319              	.LBE239:
 447:./../bno055.c **** 
 3320              		.loc 1 447 1 view .LVU855
 3321 002c 07B0     		add	sp, sp, #28
 3322              	.LCFI113:
ARM GAS  /tmp/cctFn18N.s 			page 95


 3323              		.cfi_remember_state
 3324              		.cfi_def_cfa_offset 20
 3325              		@ sp needed
 3326 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3327              	.LVL360:
 3328              	.L166:
 3329              	.LCFI114:
 3330              		.cfi_restore_state
 3331              	.LBB240:
 3332              	.LBB238:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3333              		.loc 1 1309 5 is_stmt 1 view .LVU856
1310:./../bno055.c ****     if (err != HAL_OK) {
 3334              		.loc 1 1310 9 is_stmt 0 view .LVU857
 3335 0030 0097     		str	r7, [sp]
 3336 0032 0223     		movs	r3, #2
 3337 0034 3046     		mov	r0, r6
 3338              	.LVL361:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3339              		.loc 1 1310 9 view .LVU858
 3340 0036 05AA     		add	r2, sp, #20
 3341              	.LVL362:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3342              		.loc 1 1310 9 view .LVU859
 3343 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3344              	.LVL363:
 3345              		.loc 1 1311 5 is_stmt 1 view .LVU860
 3346              		.loc 1 1311 8 is_stmt 0 view .LVU861
 3347 003c 0028     		cmp	r0, #0
 3348 003e F4D1     		bne	.L168
 3349              	.LVL364:
 3350              		.loc 1 1311 8 view .LVU862
 3351              	.LBE238:
 3352              	.LBE240:
 443:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 3353              		.loc 1 443 5 is_stmt 1 view .LVU863
 443:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 3354              		.loc 1 443 44 is_stmt 0 view .LVU864
 3355 0040 BDF91420 		ldrsh	r2, [sp, #20]
 445:./../bno055.c ****     return BNO_OK;
 3356              		.loc 1 445 50 view .LVU865
 3357 0044 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 3358 0046 DFED096A 		vldr.32	s13, .L172
 443:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 3359              		.loc 1 443 44 view .LVU866
 3360 004a 07EE102A 		vmov	s14, r2	@ int
 445:./../bno055.c ****     return BNO_OK;
 3361              		.loc 1 445 50 view .LVU867
 3362 004e 002B     		cmp	r3, #0
 443:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 3363              		.loc 1 443 44 view .LVU868
 3364 0050 B8EEC77A 		vcvt.f32.s32	s14, s14
 445:./../bno055.c ****     return BNO_OK;
 3365              		.loc 1 445 50 view .LVU869
 3366 0054 F3EE007A 		vmov.f32	s15, #1.6e+1
 3367 0058 18BF     		it	ne
 3368 005a F0EE667A 		vmovne.f32	s15, s13
ARM GAS  /tmp/cctFn18N.s 			page 96


 443:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 3369              		.loc 1 443 44 view .LVU870
 3370 005e C7EE276A 		vdiv.f32	s13, s14, s15
 443:./../bno055.c ****            ((imu->_gyr_unit == BNO_GYR_UNIT_DPS) ? BNO_GYR_SCALE_DPS
 3371              		.loc 1 443 10 view .LVU871
 3372 0062 C5ED006A 		vstr.32	s13, [r5]
 446:./../bno055.c **** };
 3373              		.loc 1 446 5 is_stmt 1 view .LVU872
 447:./../bno055.c **** 
 3374              		.loc 1 447 1 is_stmt 0 view .LVU873
 3375 0066 07B0     		add	sp, sp, #28
 3376              	.LCFI115:
 3377              		.cfi_def_cfa_offset 20
 3378              		@ sp needed
 3379 0068 F0BD     		pop	{r4, r5, r6, r7, pc}
 3380              	.LVL365:
 3381              	.L173:
 447:./../bno055.c **** 
 3382              		.loc 1 447 1 view .LVU874
 3383 006a 00BF     		.align	2
 3384              	.L172:
 3385 006c 00006144 		.word	1147207680
 3386              		.cfi_endproc
 3387              	.LFE143:
 3389              		.section	.text.bno055_gravity,"ax",%progbits
 3390              		.align	1
 3391              		.p2align 2,,3
 3392              		.global	bno055_gravity
 3393              		.syntax unified
 3394              		.thumb
 3395              		.thumb_func
 3396              		.fpu fpv4-sp-d16
 3398              	bno055_gravity:
 3399              	.LVL366:
 3400              	.LFB154:
 817:./../bno055.c ****     error_bno err;
 3401              		.loc 1 817 61 is_stmt 1 view -0
 3402              		.cfi_startproc
 3403              		@ args = 0, pretend = 0, frame = 24
 3404              		@ frame_needed = 0, uses_anonymous_args = 0
 818:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 3405              		.loc 1 818 5 view .LVU876
 824:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GRV_DATA_X_LSB, data, 6)) != BNO_OK) {
 3406              		.loc 1 824 5 view .LVU877
 825:./../bno055.c ****         return err;
 3407              		.loc 1 825 5 view .LVU878
 817:./../bno055.c ****     error_bno err;
 3408              		.loc 1 817 61 is_stmt 0 view .LVU879
 3409 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3410              	.LCFI116:
 3411              		.cfi_def_cfa_offset 20
 3412              		.cfi_offset 4, -20
 3413              		.cfi_offset 5, -16
 3414              		.cfi_offset 6, -12
 3415              		.cfi_offset 7, -8
 3416              		.cfi_offset 14, -4
 3417 0002 89B0     		sub	sp, sp, #36
ARM GAS  /tmp/cctFn18N.s 			page 97


 3418              	.LCFI117:
 3419              		.cfi_def_cfa_offset 56
 3420 0004 0668     		ldr	r6, [r0]
 3421              	.LVL367:
 3422              	.LBB243:
 3423              	.LBB244:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3424              		.loc 1 1305 11 view .LVU880
 3425 0006 4FF0FF37 		mov	r7, #-1
 3426 000a 2E23     		movs	r3, #46
 3427 000c 0097     		str	r7, [sp]
 3428              	.LVL368:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3429              		.loc 1 1305 11 view .LVU881
 3430 000e 8DF81730 		strb	r3, [sp, #23]
 3431              	.LVL369:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3432              		.loc 1 1305 11 view .LVU882
 3433              	.LBE244:
 3434              	.LBI243:
1299:./../bno055.c ****                            uint32_t buf_size) {
 3435              		.loc 1 1299 11 is_stmt 1 view .LVU883
 3436              	.LBB245:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 3437              		.loc 1 1301 5 view .LVU884
1305:./../bno055.c ****     if (err != HAL_OK) {
 3438              		.loc 1 1305 5 view .LVU885
 3439              	.LBE245:
 3440              	.LBE243:
 817:./../bno055.c ****     error_bno err;
 3441              		.loc 1 817 61 is_stmt 0 view .LVU886
 3442 0012 0446     		mov	r4, r0
 3443 0014 0D46     		mov	r5, r1
 3444              	.LBB248:
 3445              	.LBB246:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3446              		.loc 1 1305 11 view .LVU887
 3447 0016 0123     		movs	r3, #1
 3448              	.LVL370:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3449              		.loc 1 1305 11 view .LVU888
 3450 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 3451              	.LVL371:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3452              		.loc 1 1305 11 view .LVU889
 3453 001a 0391     		str	r1, [sp, #12]
 3454 001c 0DF11702 		add	r2, sp, #23
 3455              	.LVL372:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3456              		.loc 1 1305 11 view .LVU890
 3457 0020 3046     		mov	r0, r6
 3458              	.LVL373:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3459              		.loc 1 1305 11 view .LVU891
 3460 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3461              	.LVL374:
1306:./../bno055.c ****         return BNO_ERR_I2C;
ARM GAS  /tmp/cctFn18N.s 			page 98


 3462              		.loc 1 1306 5 is_stmt 1 view .LVU892
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3463              		.loc 1 1306 8 is_stmt 0 view .LVU893
 3464 0026 0399     		ldr	r1, [sp, #12]
 3465 0028 10B1     		cbz	r0, .L175
 3466              	.L177:
 3467              	.LVL375:
1307:./../bno055.c ****     }
 3468              		.loc 1 1307 16 view .LVU894
 3469 002a 0120     		movs	r0, #1
 3470              	.LBE246:
 3471              	.LBE248:
 834:./../bno055.c **** 
 3472              		.loc 1 834 1 view .LVU895
 3473 002c 09B0     		add	sp, sp, #36
 3474              	.LCFI118:
 3475              		.cfi_remember_state
 3476              		.cfi_def_cfa_offset 20
 3477              		@ sp needed
 3478 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3479              	.LVL376:
 3480              	.L175:
 3481              	.LCFI119:
 3482              		.cfi_restore_state
 3483              	.LBB249:
 3484              	.LBB247:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3485              		.loc 1 1309 5 is_stmt 1 view .LVU896
1310:./../bno055.c ****     if (err != HAL_OK) {
 3486              		.loc 1 1310 9 is_stmt 0 view .LVU897
 3487 0030 0097     		str	r7, [sp]
 3488 0032 0623     		movs	r3, #6
 3489 0034 3046     		mov	r0, r6
 3490              	.LVL377:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3491              		.loc 1 1310 9 view .LVU898
 3492 0036 06AA     		add	r2, sp, #24
 3493              	.LVL378:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3494              		.loc 1 1310 9 view .LVU899
 3495 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3496              	.LVL379:
 3497              		.loc 1 1311 5 is_stmt 1 view .LVU900
 3498              		.loc 1 1311 8 is_stmt 0 view .LVU901
 3499 003c 0028     		cmp	r0, #0
 3500 003e F4D1     		bne	.L177
 3501              	.LVL380:
 3502              		.loc 1 1311 8 view .LVU902
 3503              	.LBE247:
 3504              	.LBE249:
 828:./../bno055.c ****                                                          : BNO_ACC_SCALE_MG;
 3505              		.loc 1 828 5 is_stmt 1 view .LVU903
 831:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 3506              		.loc 1 831 46 is_stmt 0 view .LVU904
 3507 0040 BDF91A20 		ldrsh	r2, [sp, #26]
 829:./../bno055.c ****     buf->x = (s16)((data[1] << 8) | data[0]) / scale;
 3508              		.loc 1 829 58 view .LVU905
ARM GAS  /tmp/cctFn18N.s 			page 99


 3509 0044 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3510 0046 DFED0E7A 		vldr.32	s15, .L181
 831:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 3511              		.loc 1 831 46 view .LVU906
 3512 004a 06EE902A 		vmov	s13, r2	@ int
 832:./../bno055.c ****     return BNO_OK;
 3513              		.loc 1 832 46 view .LVU907
 3514 004e BDF91C20 		ldrsh	r2, [sp, #28]
 3515 0052 07EE102A 		vmov	s14, r2	@ int
 831:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 3516              		.loc 1 831 46 view .LVU908
 3517 0056 F8EEE66A 		vcvt.f32.s32	s13, s13
 832:./../bno055.c ****     return BNO_OK;
 3518              		.loc 1 832 46 view .LVU909
 3519 005a B8EEC77A 		vcvt.f32.s32	s14, s14
 829:./../bno055.c ****     buf->x = (s16)((data[1] << 8) | data[0]) / scale;
 3520              		.loc 1 829 58 view .LVU910
 3521 005e B7EE006A 		vmov.f32	s12, #1.0e+0
 3522 0062 002B     		cmp	r3, #0
 3523 0064 18BF     		it	ne
 3524 0066 F0EE467A 		vmovne.f32	s15, s12
 3525              	.LVL381:
 830:./../bno055.c ****     buf->y = (s16)((data[3] << 8) | data[2]) / scale;
 3526              		.loc 1 830 5 is_stmt 1 view .LVU911
 831:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 3527              		.loc 1 831 5 view .LVU912
 831:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 3528              		.loc 1 831 46 is_stmt 0 view .LVU913
 3529 006a 86EEA76A 		vdiv.f32	s12, s13, s15
 832:./../bno055.c ****     return BNO_OK;
 3530              		.loc 1 832 46 view .LVU914
 3531 006e C7EE276A 		vdiv.f32	s13, s14, s15
 831:./../bno055.c ****     buf->x = (s16)((data[5] << 8) | data[4]) / scale;
 3532              		.loc 1 831 12 view .LVU915
 3533 0072 85ED016A 		vstr.32	s12, [r5, #4]
 832:./../bno055.c ****     return BNO_OK;
 3534              		.loc 1 832 5 is_stmt 1 view .LVU916
 832:./../bno055.c ****     return BNO_OK;
 3535              		.loc 1 832 12 is_stmt 0 view .LVU917
 3536 0076 C5ED006A 		vstr.32	s13, [r5]
 833:./../bno055.c **** }
 3537              		.loc 1 833 5 is_stmt 1 view .LVU918
 834:./../bno055.c **** 
 3538              		.loc 1 834 1 is_stmt 0 view .LVU919
 3539 007a 09B0     		add	sp, sp, #36
 3540              	.LCFI120:
 3541              		.cfi_def_cfa_offset 20
 3542              		@ sp needed
 3543 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 3544              	.LVL382:
 3545              	.L182:
 834:./../bno055.c **** 
 3546              		.loc 1 834 1 view .LVU920
 3547 007e 00BF     		.align	2
 3548              	.L181:
 3549 0080 0000C842 		.word	1120403456
 3550              		.cfi_endproc
ARM GAS  /tmp/cctFn18N.s 			page 100


 3551              	.LFE154:
 3553              		.section	.text.bno055_mag,"ax",%progbits
 3554              		.align	1
 3555              		.p2align 2,,3
 3556              		.global	bno055_mag
 3557              		.syntax unified
 3558              		.thumb
 3559              		.thumb_func
 3560              		.fpu fpv4-sp-d16
 3562              	bno055_mag:
 3563              	.LVL383:
 3564              	.LFB150:
 678:./../bno055.c ****     error_bno err;
 3565              		.loc 1 678 57 is_stmt 1 view -0
 3566              		.cfi_startproc
 3567              		@ args = 0, pretend = 0, frame = 16
 3568              		@ frame_needed = 0, uses_anonymous_args = 0
 679:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 3569              		.loc 1 679 5 view .LVU922
 685:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_MAG_DATA_X_LSB, data, 6)) != BNO_OK) {
 3570              		.loc 1 685 5 view .LVU923
 686:./../bno055.c ****         return err;
 3571              		.loc 1 686 5 view .LVU924
 678:./../bno055.c ****     error_bno err;
 3572              		.loc 1 678 57 is_stmt 0 view .LVU925
 3573 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3574              	.LCFI121:
 3575              		.cfi_def_cfa_offset 20
 3576              		.cfi_offset 4, -20
 3577              		.cfi_offset 5, -16
 3578              		.cfi_offset 6, -12
 3579              		.cfi_offset 7, -8
 3580              		.cfi_offset 14, -4
 3581 0002 0568     		ldr	r5, [r0]
 3582              	.LVL384:
 3583              	.LBB252:
 3584              	.LBB253:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3585              		.loc 1 1305 11 view .LVU926
 3586 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 3587              	.LBE253:
 3588              	.LBE252:
 678:./../bno055.c ****     error_bno err;
 3589              		.loc 1 678 57 view .LVU927
 3590 0006 87B0     		sub	sp, sp, #28
 3591              	.LCFI122:
 3592              		.cfi_def_cfa_offset 48
 3593 0008 0E23     		movs	r3, #14
 3594              	.LBB257:
 3595              	.LBB254:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3596              		.loc 1 1305 11 view .LVU928
 3597 000a 4FF0FF37 		mov	r7, #-1
 3598              	.LBE254:
 3599              	.LBE257:
 678:./../bno055.c ****     error_bno err;
 3600              		.loc 1 678 57 view .LVU929
ARM GAS  /tmp/cctFn18N.s 			page 101


 3601 000e 0C46     		mov	r4, r1
 3602 0010 8DF80F30 		strb	r3, [sp, #15]
 3603              	.LVL385:
 3604              	.LBB258:
 3605              	.LBI252:
1299:./../bno055.c ****                            uint32_t buf_size) {
 3606              		.loc 1 1299 11 is_stmt 1 view .LVU930
 3607              	.LBB255:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 3608              		.loc 1 1301 5 view .LVU931
1305:./../bno055.c ****     if (err != HAL_OK) {
 3609              		.loc 1 1305 5 view .LVU932
1305:./../bno055.c ****     if (err != HAL_OK) {
 3610              		.loc 1 1305 11 is_stmt 0 view .LVU933
 3611 0014 0097     		str	r7, [sp]
 3612              	.LVL386:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3613              		.loc 1 1305 11 view .LVU934
 3614 0016 0123     		movs	r3, #1
 3615              	.LVL387:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3616              		.loc 1 1305 11 view .LVU935
 3617 0018 0DF10F02 		add	r2, sp, #15
 3618              	.LVL388:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3619              		.loc 1 1305 11 view .LVU936
 3620 001c 3146     		mov	r1, r6
 3621              	.LVL389:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3622              		.loc 1 1305 11 view .LVU937
 3623 001e 2846     		mov	r0, r5
 3624              	.LVL390:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3625              		.loc 1 1305 11 view .LVU938
 3626 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3627              	.LVL391:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3628              		.loc 1 1306 5 is_stmt 1 view .LVU939
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3629              		.loc 1 1306 8 is_stmt 0 view .LVU940
 3630 0024 10B1     		cbz	r0, .L184
 3631              	.L186:
 3632              	.LVL392:
1307:./../bno055.c ****     }
 3633              		.loc 1 1307 16 view .LVU941
 3634 0026 0120     		movs	r0, #1
 3635              	.LBE255:
 3636              	.LBE258:
 695:./../bno055.c **** 
 3637              		.loc 1 695 1 view .LVU942
 3638 0028 07B0     		add	sp, sp, #28
 3639              	.LCFI123:
 3640              		.cfi_remember_state
 3641              		.cfi_def_cfa_offset 20
 3642              		@ sp needed
 3643 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 3644              	.LVL393:
ARM GAS  /tmp/cctFn18N.s 			page 102


 3645              	.L184:
 3646              	.LCFI124:
 3647              		.cfi_restore_state
 3648              	.LBB259:
 3649              	.LBB256:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3650              		.loc 1 1309 5 is_stmt 1 view .LVU943
1310:./../bno055.c ****     if (err != HAL_OK) {
 3651              		.loc 1 1310 9 is_stmt 0 view .LVU944
 3652 002c 0097     		str	r7, [sp]
 3653 002e 0623     		movs	r3, #6
 3654 0030 04AA     		add	r2, sp, #16
 3655              	.LVL394:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3656              		.loc 1 1310 9 view .LVU945
 3657 0032 3146     		mov	r1, r6
 3658 0034 2846     		mov	r0, r5
 3659              	.LVL395:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3660              		.loc 1 1310 9 view .LVU946
 3661 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3662              	.LVL396:
 3663              		.loc 1 1311 5 is_stmt 1 view .LVU947
 3664              		.loc 1 1311 8 is_stmt 0 view .LVU948
 3665 003a 0028     		cmp	r0, #0
 3666 003c F3D1     		bne	.L186
 3667              	.LVL397:
 3668              		.loc 1 1311 8 view .LVU949
 3669              	.LBE256:
 3670              	.LBE259:
 690:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / BNO_MAG_SCALE;
 3671              		.loc 1 690 5 is_stmt 1 view .LVU950
 690:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / BNO_MAG_SCALE;
 3672              		.loc 1 690 46 is_stmt 0 view .LVU951
 3673 003e BDF91030 		ldrsh	r3, [sp, #16]
 3674 0042 9FED106A 		vldr.32	s12, .L188
 3675 0046 06EE903A 		vmov	s13, r3	@ int
 691:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / BNO_MAG_SCALE;
 3676              		.loc 1 691 46 view .LVU952
 3677 004a BDF91230 		ldrsh	r3, [sp, #18]
 3678 004e 07EE103A 		vmov	s14, r3	@ int
 692:./../bno055.c **** 
 3679              		.loc 1 692 46 view .LVU953
 3680 0052 BDF91430 		ldrsh	r3, [sp, #20]
 3681 0056 07EE903A 		vmov	s15, r3	@ int
 690:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / BNO_MAG_SCALE;
 3682              		.loc 1 690 46 view .LVU954
 3683 005a F8EEE66A 		vcvt.f32.s32	s13, s13
 691:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / BNO_MAG_SCALE;
 3684              		.loc 1 691 46 view .LVU955
 3685 005e B8EEC77A 		vcvt.f32.s32	s14, s14
 692:./../bno055.c **** 
 3686              		.loc 1 692 46 view .LVU956
 3687 0062 F8EEE77A 		vcvt.f32.s32	s15, s15
 690:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / BNO_MAG_SCALE;
 3688              		.loc 1 690 46 view .LVU957
 3689 0066 66EE866A 		vmul.f32	s13, s13, s12
ARM GAS  /tmp/cctFn18N.s 			page 103


 691:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / BNO_MAG_SCALE;
 3690              		.loc 1 691 46 view .LVU958
 3691 006a 27EE067A 		vmul.f32	s14, s14, s12
 692:./../bno055.c **** 
 3692              		.loc 1 692 46 view .LVU959
 3693 006e 67EE867A 		vmul.f32	s15, s15, s12
 690:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / BNO_MAG_SCALE;
 3694              		.loc 1 690 12 view .LVU960
 3695 0072 C4ED006A 		vstr.32	s13, [r4]
 691:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / BNO_MAG_SCALE;
 3696              		.loc 1 691 5 is_stmt 1 view .LVU961
 691:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / BNO_MAG_SCALE;
 3697              		.loc 1 691 12 is_stmt 0 view .LVU962
 3698 0076 84ED017A 		vstr.32	s14, [r4, #4]
 692:./../bno055.c **** 
 3699              		.loc 1 692 5 is_stmt 1 view .LVU963
 692:./../bno055.c **** 
 3700              		.loc 1 692 12 is_stmt 0 view .LVU964
 3701 007a C4ED027A 		vstr.32	s15, [r4, #8]
 694:./../bno055.c **** };
 3702              		.loc 1 694 5 is_stmt 1 view .LVU965
 695:./../bno055.c **** 
 3703              		.loc 1 695 1 is_stmt 0 view .LVU966
 3704 007e 07B0     		add	sp, sp, #28
 3705              	.LCFI125:
 3706              		.cfi_def_cfa_offset 20
 3707              		@ sp needed
 3708 0080 F0BD     		pop	{r4, r5, r6, r7, pc}
 3709              	.LVL398:
 3710              	.L189:
 695:./../bno055.c **** 
 3711              		.loc 1 695 1 view .LVU967
 3712 0082 00BF     		.align	2
 3713              	.L188:
 3714 0084 0000803D 		.word	1031798784
 3715              		.cfi_endproc
 3716              	.LFE150:
 3718              		.section	.text.bno055_acc,"ax",%progbits
 3719              		.align	1
 3720              		.p2align 2,,3
 3721              		.global	bno055_acc
 3722              		.syntax unified
 3723              		.thumb
 3724              		.thumb_func
 3725              		.fpu fpv4-sp-d16
 3727              	bno055_acc:
 3728              	.LVL399:
 3729              	.LFB138:
 251:./../bno055.c ****     error_bno err;
 3730              		.loc 1 251 57 is_stmt 1 view -0
 3731              		.cfi_startproc
 3732              		@ args = 0, pretend = 0, frame = 24
 3733              		@ frame_needed = 0, uses_anonymous_args = 0
 252:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 3734              		.loc 1 252 5 view .LVU969
 258:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_ACC_DATA_X_LSB, data, 6)) != BNO_OK) {
 3735              		.loc 1 258 5 view .LVU970
ARM GAS  /tmp/cctFn18N.s 			page 104


 259:./../bno055.c ****         return err;
 3736              		.loc 1 259 5 view .LVU971
 251:./../bno055.c ****     error_bno err;
 3737              		.loc 1 251 57 is_stmt 0 view .LVU972
 3738 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3739              	.LCFI126:
 3740              		.cfi_def_cfa_offset 20
 3741              		.cfi_offset 4, -20
 3742              		.cfi_offset 5, -16
 3743              		.cfi_offset 6, -12
 3744              		.cfi_offset 7, -8
 3745              		.cfi_offset 14, -4
 3746 0002 89B0     		sub	sp, sp, #36
 3747              	.LCFI127:
 3748              		.cfi_def_cfa_offset 56
 3749 0004 0668     		ldr	r6, [r0]
 3750              	.LVL400:
 3751              	.LBB262:
 3752              	.LBB263:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3753              		.loc 1 1305 11 view .LVU973
 3754 0006 4FF0FF37 		mov	r7, #-1
 3755 000a 0823     		movs	r3, #8
 3756 000c 0097     		str	r7, [sp]
 3757              	.LVL401:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3758              		.loc 1 1305 11 view .LVU974
 3759 000e 8DF81730 		strb	r3, [sp, #23]
 3760              	.LVL402:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3761              		.loc 1 1305 11 view .LVU975
 3762              	.LBE263:
 3763              	.LBI262:
1299:./../bno055.c ****                            uint32_t buf_size) {
 3764              		.loc 1 1299 11 is_stmt 1 view .LVU976
 3765              	.LBB264:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 3766              		.loc 1 1301 5 view .LVU977
1305:./../bno055.c ****     if (err != HAL_OK) {
 3767              		.loc 1 1305 5 view .LVU978
 3768              	.LBE264:
 3769              	.LBE262:
 251:./../bno055.c ****     error_bno err;
 3770              		.loc 1 251 57 is_stmt 0 view .LVU979
 3771 0012 0446     		mov	r4, r0
 3772 0014 0D46     		mov	r5, r1
 3773              	.LBB267:
 3774              	.LBB265:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3775              		.loc 1 1305 11 view .LVU980
 3776 0016 0123     		movs	r3, #1
 3777              	.LVL403:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3778              		.loc 1 1305 11 view .LVU981
 3779 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 3780              	.LVL404:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 105


 3781              		.loc 1 1305 11 view .LVU982
 3782 001a 0391     		str	r1, [sp, #12]
 3783 001c 0DF11702 		add	r2, sp, #23
 3784              	.LVL405:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3785              		.loc 1 1305 11 view .LVU983
 3786 0020 3046     		mov	r0, r6
 3787              	.LVL406:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3788              		.loc 1 1305 11 view .LVU984
 3789 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3790              	.LVL407:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3791              		.loc 1 1306 5 is_stmt 1 view .LVU985
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3792              		.loc 1 1306 8 is_stmt 0 view .LVU986
 3793 0026 0399     		ldr	r1, [sp, #12]
 3794 0028 10B1     		cbz	r0, .L191
 3795              	.L193:
 3796              	.LVL408:
1307:./../bno055.c ****     }
 3797              		.loc 1 1307 16 view .LVU987
 3798 002a 0120     		movs	r0, #1
 3799              	.LBE265:
 3800              	.LBE267:
 269:./../bno055.c **** 
 3801              		.loc 1 269 1 view .LVU988
 3802 002c 09B0     		add	sp, sp, #36
 3803              	.LCFI128:
 3804              		.cfi_remember_state
 3805              		.cfi_def_cfa_offset 20
 3806              		@ sp needed
 3807 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3808              	.LVL409:
 3809              	.L191:
 3810              	.LCFI129:
 3811              		.cfi_restore_state
 3812              	.LBB268:
 3813              	.LBB266:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3814              		.loc 1 1309 5 is_stmt 1 view .LVU989
1310:./../bno055.c ****     if (err != HAL_OK) {
 3815              		.loc 1 1310 9 is_stmt 0 view .LVU990
 3816 0030 0097     		str	r7, [sp]
 3817 0032 0623     		movs	r3, #6
 3818 0034 3046     		mov	r0, r6
 3819              	.LVL410:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3820              		.loc 1 1310 9 view .LVU991
 3821 0036 06AA     		add	r2, sp, #24
 3822              	.LVL411:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3823              		.loc 1 1310 9 view .LVU992
 3824 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3825              	.LVL412:
 3826              		.loc 1 1311 5 is_stmt 1 view .LVU993
 3827              		.loc 1 1311 8 is_stmt 0 view .LVU994
ARM GAS  /tmp/cctFn18N.s 			page 106


 3828 003c 0028     		cmp	r0, #0
 3829 003e F4D1     		bne	.L193
 3830              	.LVL413:
 3831              		.loc 1 1311 8 view .LVU995
 3832              	.LBE266:
 3833              	.LBE268:
 262:./../bno055.c ****                                                            : BNO_ACC_SCALE_MG;
 3834              		.loc 1 262 5 is_stmt 1 view .LVU996
 264:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 3835              		.loc 1 264 46 is_stmt 0 view .LVU997
 3836 0040 BDF91820 		ldrsh	r2, [sp, #24]
 263:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 3837              		.loc 1 263 60 view .LVU998
 3838 0044 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 3839 0046 DFED137A 		vldr.32	s15, .L197
 264:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 3840              		.loc 1 264 46 view .LVU999
 3841 004a 06EE102A 		vmov	s12, r2	@ int
 265:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 3842              		.loc 1 265 46 view .LVU1000
 3843 004e BDF91A20 		ldrsh	r2, [sp, #26]
 3844 0052 06EE902A 		vmov	s13, r2	@ int
 266:./../bno055.c **** 
 3845              		.loc 1 266 46 view .LVU1001
 3846 0056 BDF91C20 		ldrsh	r2, [sp, #28]
 3847 005a 07EE102A 		vmov	s14, r2	@ int
 264:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 3848              		.loc 1 264 46 view .LVU1002
 3849 005e B8EEC66A 		vcvt.f32.s32	s12, s12
 265:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 3850              		.loc 1 265 46 view .LVU1003
 3851 0062 F8EEE66A 		vcvt.f32.s32	s13, s13
 266:./../bno055.c **** 
 3852              		.loc 1 266 46 view .LVU1004
 3853 0066 B8EEC77A 		vcvt.f32.s32	s14, s14
 263:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 3854              		.loc 1 263 60 view .LVU1005
 3855 006a F7EE005A 		vmov.f32	s11, #1.0e+0
 3856 006e 002B     		cmp	r3, #0
 3857 0070 18BF     		it	ne
 3858 0072 F0EE657A 		vmovne.f32	s15, s11
 3859              	.LVL414:
 264:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 3860              		.loc 1 264 5 is_stmt 1 view .LVU1006
 264:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 3861              		.loc 1 264 46 is_stmt 0 view .LVU1007
 3862 0076 C6EE275A 		vdiv.f32	s11, s12, s15
 265:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 3863              		.loc 1 265 46 view .LVU1008
 3864 007a 86EEA76A 		vdiv.f32	s12, s13, s15
 266:./../bno055.c **** 
 3865              		.loc 1 266 46 view .LVU1009
 3866 007e C7EE276A 		vdiv.f32	s13, s14, s15
 264:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 3867              		.loc 1 264 12 view .LVU1010
 3868 0082 C5ED005A 		vstr.32	s11, [r5]
 265:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
ARM GAS  /tmp/cctFn18N.s 			page 107


 3869              		.loc 1 265 5 is_stmt 1 view .LVU1011
 265:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 3870              		.loc 1 265 12 is_stmt 0 view .LVU1012
 3871 0086 85ED016A 		vstr.32	s12, [r5, #4]
 266:./../bno055.c **** 
 3872              		.loc 1 266 5 is_stmt 1 view .LVU1013
 266:./../bno055.c **** 
 3873              		.loc 1 266 12 is_stmt 0 view .LVU1014
 3874 008a C5ED026A 		vstr.32	s13, [r5, #8]
 268:./../bno055.c **** };
 3875              		.loc 1 268 5 is_stmt 1 view .LVU1015
 269:./../bno055.c **** 
 3876              		.loc 1 269 1 is_stmt 0 view .LVU1016
 3877 008e 09B0     		add	sp, sp, #36
 3878              	.LCFI130:
 3879              		.cfi_def_cfa_offset 20
 3880              		@ sp needed
 3881 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 3882              	.LVL415:
 3883              	.L198:
 269:./../bno055.c **** 
 3884              		.loc 1 269 1 view .LVU1017
 3885 0092 00BF     		.align	2
 3886              	.L197:
 3887 0094 0000C842 		.word	1120403456
 3888              		.cfi_endproc
 3889              	.LFE138:
 3891              		.section	.text.bno055_euler,"ax",%progbits
 3892              		.align	1
 3893              		.p2align 2,,3
 3894              		.global	bno055_euler
 3895              		.syntax unified
 3896              		.thumb
 3897              		.thumb_func
 3898              		.fpu fpv4-sp-d16
 3900              	bno055_euler:
 3901              	.LVL416:
 3902              	.LFB158:
 957:./../bno055.c ****     error_bno err;
 3903              		.loc 1 957 60 is_stmt 1 view -0
 3904              		.cfi_startproc
 3905              		@ args = 0, pretend = 0, frame = 24
 3906              		@ frame_needed = 0, uses_anonymous_args = 0
 958:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 3907              		.loc 1 958 5 view .LVU1019
 964:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_EUL_HEADING_LSB, data, 6)) !=
 3908              		.loc 1 964 5 view .LVU1020
 965:./../bno055.c ****         BNO_OK) {
 3909              		.loc 1 965 5 view .LVU1021
 957:./../bno055.c ****     error_bno err;
 3910              		.loc 1 957 60 is_stmt 0 view .LVU1022
 3911 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3912              	.LCFI131:
 3913              		.cfi_def_cfa_offset 20
 3914              		.cfi_offset 4, -20
 3915              		.cfi_offset 5, -16
 3916              		.cfi_offset 6, -12
ARM GAS  /tmp/cctFn18N.s 			page 108


 3917              		.cfi_offset 7, -8
 3918              		.cfi_offset 14, -4
 3919 0002 89B0     		sub	sp, sp, #36
 3920              	.LCFI132:
 3921              		.cfi_def_cfa_offset 56
 3922 0004 0668     		ldr	r6, [r0]
 3923              	.LVL417:
 3924              	.LBB271:
 3925              	.LBB272:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3926              		.loc 1 1305 11 view .LVU1023
 3927 0006 4FF0FF37 		mov	r7, #-1
 3928 000a 1A23     		movs	r3, #26
 3929 000c 0097     		str	r7, [sp]
 3930              	.LVL418:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3931              		.loc 1 1305 11 view .LVU1024
 3932 000e 8DF81730 		strb	r3, [sp, #23]
 3933              	.LVL419:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3934              		.loc 1 1305 11 view .LVU1025
 3935              	.LBE272:
 3936              	.LBI271:
1299:./../bno055.c ****                            uint32_t buf_size) {
 3937              		.loc 1 1299 11 is_stmt 1 view .LVU1026
 3938              	.LBB273:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 3939              		.loc 1 1301 5 view .LVU1027
1305:./../bno055.c ****     if (err != HAL_OK) {
 3940              		.loc 1 1305 5 view .LVU1028
 3941              	.LBE273:
 3942              	.LBE271:
 957:./../bno055.c ****     error_bno err;
 3943              		.loc 1 957 60 is_stmt 0 view .LVU1029
 3944 0012 0446     		mov	r4, r0
 3945 0014 0D46     		mov	r5, r1
 3946              	.LBB276:
 3947              	.LBB274:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3948              		.loc 1 1305 11 view .LVU1030
 3949 0016 0123     		movs	r3, #1
 3950              	.LVL420:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3951              		.loc 1 1305 11 view .LVU1031
 3952 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 3953              	.LVL421:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3954              		.loc 1 1305 11 view .LVU1032
 3955 001a 0391     		str	r1, [sp, #12]
 3956 001c 0DF11702 		add	r2, sp, #23
 3957              	.LVL422:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3958              		.loc 1 1305 11 view .LVU1033
 3959 0020 3046     		mov	r0, r6
 3960              	.LVL423:
1305:./../bno055.c ****     if (err != HAL_OK) {
 3961              		.loc 1 1305 11 view .LVU1034
ARM GAS  /tmp/cctFn18N.s 			page 109


 3962 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 3963              	.LVL424:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3964              		.loc 1 1306 5 is_stmt 1 view .LVU1035
1306:./../bno055.c ****         return BNO_ERR_I2C;
 3965              		.loc 1 1306 8 is_stmt 0 view .LVU1036
 3966 0026 0399     		ldr	r1, [sp, #12]
 3967 0028 10B1     		cbz	r0, .L200
 3968              	.L202:
 3969              	.LVL425:
1307:./../bno055.c ****     }
 3970              		.loc 1 1307 16 view .LVU1037
 3971 002a 0120     		movs	r0, #1
 3972              	.LBE274:
 3973              	.LBE276:
 975:./../bno055.c **** 
 3974              		.loc 1 975 1 view .LVU1038
 3975 002c 09B0     		add	sp, sp, #36
 3976              	.LCFI133:
 3977              		.cfi_remember_state
 3978              		.cfi_def_cfa_offset 20
 3979              		@ sp needed
 3980 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 3981              	.LVL426:
 3982              	.L200:
 3983              	.LCFI134:
 3984              		.cfi_restore_state
 3985              	.LBB277:
 3986              	.LBB275:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 3987              		.loc 1 1309 5 is_stmt 1 view .LVU1039
1310:./../bno055.c ****     if (err != HAL_OK) {
 3988              		.loc 1 1310 9 is_stmt 0 view .LVU1040
 3989 0030 0097     		str	r7, [sp]
 3990 0032 0623     		movs	r3, #6
 3991 0034 3046     		mov	r0, r6
 3992              	.LVL427:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3993              		.loc 1 1310 9 view .LVU1041
 3994 0036 06AA     		add	r2, sp, #24
 3995              	.LVL428:
1310:./../bno055.c ****     if (err != HAL_OK) {
 3996              		.loc 1 1310 9 view .LVU1042
 3997 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 3998              	.LVL429:
 3999              		.loc 1 1311 5 is_stmt 1 view .LVU1043
 4000              		.loc 1 1311 8 is_stmt 0 view .LVU1044
 4001 003c 0028     		cmp	r0, #0
 4002 003e F4D1     		bne	.L202
 4003              	.LVL430:
 4004              		.loc 1 1311 8 view .LVU1045
 4005              	.LBE275:
 4006              	.LBE277:
 969:./../bno055.c ****                                                      : BNO_EUL_SCALE_RAD;
 4007              		.loc 1 969 5 is_stmt 1 view .LVU1046
 971:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 4008              		.loc 1 971 48 is_stmt 0 view .LVU1047
ARM GAS  /tmp/cctFn18N.s 			page 110


 4009 0040 BDF91820 		ldrsh	r2, [sp, #24]
 970:./../bno055.c ****     buf->yaw = (s16)((data[1] << 8) | data[0]) / scale;
 4010              		.loc 1 970 54 view .LVU1048
 4011 0044 637C     		ldrb	r3, [r4, #17]	@ zero_extendqisi2
 4012 0046 DFED135A 		vldr.32	s11, .L206
 971:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 4013              		.loc 1 971 48 view .LVU1049
 4014 004a 06EE102A 		vmov	s12, r2	@ int
 972:./../bno055.c ****     buf->pitch = (s16)((data[5] << 8) | data[4]) / scale;
 4015              		.loc 1 972 49 view .LVU1050
 4016 004e BDF91A20 		ldrsh	r2, [sp, #26]
 4017 0052 06EE902A 		vmov	s13, r2	@ int
 973:./../bno055.c ****     return BNO_OK;
 4018              		.loc 1 973 50 view .LVU1051
 4019 0056 BDF91C20 		ldrsh	r2, [sp, #28]
 4020 005a 07EE102A 		vmov	s14, r2	@ int
 971:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 4021              		.loc 1 971 48 view .LVU1052
 4022 005e B8EEC66A 		vcvt.f32.s32	s12, s12
 972:./../bno055.c ****     buf->pitch = (s16)((data[5] << 8) | data[4]) / scale;
 4023              		.loc 1 972 49 view .LVU1053
 4024 0062 F8EEE66A 		vcvt.f32.s32	s13, s13
 973:./../bno055.c ****     return BNO_OK;
 4025              		.loc 1 973 50 view .LVU1054
 4026 0066 B8EEC77A 		vcvt.f32.s32	s14, s14
 970:./../bno055.c ****     buf->yaw = (s16)((data[1] << 8) | data[0]) / scale;
 4027              		.loc 1 970 54 view .LVU1055
 4028 006a 002B     		cmp	r3, #0
 4029 006c F3EE007A 		vmov.f32	s15, #1.6e+1
 4030 0070 18BF     		it	ne
 4031 0072 F0EE657A 		vmovne.f32	s15, s11
 4032              	.LVL431:
 971:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 4033              		.loc 1 971 5 is_stmt 1 view .LVU1056
 971:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 4034              		.loc 1 971 48 is_stmt 0 view .LVU1057
 4035 0076 C6EE275A 		vdiv.f32	s11, s12, s15
 972:./../bno055.c ****     buf->pitch = (s16)((data[5] << 8) | data[4]) / scale;
 4036              		.loc 1 972 49 view .LVU1058
 4037 007a 86EEA76A 		vdiv.f32	s12, s13, s15
 973:./../bno055.c ****     return BNO_OK;
 4038              		.loc 1 973 50 view .LVU1059
 4039 007e C7EE276A 		vdiv.f32	s13, s14, s15
 971:./../bno055.c ****     buf->roll = (s16)((data[3] << 8) | data[2]) / scale;
 4040              		.loc 1 971 14 view .LVU1060
 4041 0082 C5ED025A 		vstr.32	s11, [r5, #8]
 972:./../bno055.c ****     buf->pitch = (s16)((data[5] << 8) | data[4]) / scale;
 4042              		.loc 1 972 5 is_stmt 1 view .LVU1061
 972:./../bno055.c ****     buf->pitch = (s16)((data[5] << 8) | data[4]) / scale;
 4043              		.loc 1 972 15 is_stmt 0 view .LVU1062
 4044 0086 85ED006A 		vstr.32	s12, [r5]
 973:./../bno055.c ****     return BNO_OK;
 4045              		.loc 1 973 5 is_stmt 1 view .LVU1063
 973:./../bno055.c ****     return BNO_OK;
 4046              		.loc 1 973 16 is_stmt 0 view .LVU1064
 4047 008a C5ED016A 		vstr.32	s13, [r5, #4]
 974:./../bno055.c **** }
ARM GAS  /tmp/cctFn18N.s 			page 111


 4048              		.loc 1 974 5 is_stmt 1 view .LVU1065
 975:./../bno055.c **** 
 4049              		.loc 1 975 1 is_stmt 0 view .LVU1066
 4050 008e 09B0     		add	sp, sp, #36
 4051              	.LCFI135:
 4052              		.cfi_def_cfa_offset 20
 4053              		@ sp needed
 4054 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 4055              	.LVL432:
 4056              	.L207:
 975:./../bno055.c **** 
 4057              		.loc 1 975 1 view .LVU1067
 4058 0092 00BF     		.align	2
 4059              	.L206:
 4060 0094 00006144 		.word	1147207680
 4061              		.cfi_endproc
 4062              	.LFE158:
 4064              		.section	.text.bno055_gyro,"ax",%progbits
 4065              		.align	1
 4066              		.p2align 2,,3
 4067              		.global	bno055_gyro
 4068              		.syntax unified
 4069              		.thumb
 4070              		.thumb_func
 4071              		.fpu fpv4-sp-d16
 4073              	bno055_gyro:
 4074              	.LVL433:
 4075              	.LFB146:
 539:./../bno055.c ****     error_bno err;
 4076              		.loc 1 539 58 is_stmt 1 view -0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 24
 4079              		@ frame_needed = 0, uses_anonymous_args = 0
 540:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 4080              		.loc 1 540 5 view .LVU1069
 546:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_GYR_DATA_X_LSB, data, 6)) != BNO_OK) {
 4081              		.loc 1 546 5 view .LVU1070
 547:./../bno055.c ****         return err;
 4082              		.loc 1 547 5 view .LVU1071
 539:./../bno055.c ****     error_bno err;
 4083              		.loc 1 539 58 is_stmt 0 view .LVU1072
 4084 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4085              	.LCFI136:
 4086              		.cfi_def_cfa_offset 20
 4087              		.cfi_offset 4, -20
 4088              		.cfi_offset 5, -16
 4089              		.cfi_offset 6, -12
 4090              		.cfi_offset 7, -8
 4091              		.cfi_offset 14, -4
 4092 0002 89B0     		sub	sp, sp, #36
 4093              	.LCFI137:
 4094              		.cfi_def_cfa_offset 56
 4095 0004 0668     		ldr	r6, [r0]
 4096              	.LVL434:
 4097              	.LBB280:
 4098              	.LBB281:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 112


 4099              		.loc 1 1305 11 view .LVU1073
 4100 0006 4FF0FF37 		mov	r7, #-1
 4101 000a 1423     		movs	r3, #20
 4102 000c 0097     		str	r7, [sp]
 4103              	.LVL435:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4104              		.loc 1 1305 11 view .LVU1074
 4105 000e 8DF81730 		strb	r3, [sp, #23]
 4106              	.LVL436:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4107              		.loc 1 1305 11 view .LVU1075
 4108              	.LBE281:
 4109              	.LBI280:
1299:./../bno055.c ****                            uint32_t buf_size) {
 4110              		.loc 1 1299 11 is_stmt 1 view .LVU1076
 4111              	.LBB282:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 4112              		.loc 1 1301 5 view .LVU1077
1305:./../bno055.c ****     if (err != HAL_OK) {
 4113              		.loc 1 1305 5 view .LVU1078
 4114              	.LBE282:
 4115              	.LBE280:
 539:./../bno055.c ****     error_bno err;
 4116              		.loc 1 539 58 is_stmt 0 view .LVU1079
 4117 0012 0446     		mov	r4, r0
 4118 0014 0D46     		mov	r5, r1
 4119              	.LBB285:
 4120              	.LBB283:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4121              		.loc 1 1305 11 view .LVU1080
 4122 0016 0123     		movs	r3, #1
 4123              	.LVL437:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4124              		.loc 1 1305 11 view .LVU1081
 4125 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 4126              	.LVL438:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4127              		.loc 1 1305 11 view .LVU1082
 4128 001a 0391     		str	r1, [sp, #12]
 4129 001c 0DF11702 		add	r2, sp, #23
 4130              	.LVL439:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4131              		.loc 1 1305 11 view .LVU1083
 4132 0020 3046     		mov	r0, r6
 4133              	.LVL440:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4134              		.loc 1 1305 11 view .LVU1084
 4135 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 4136              	.LVL441:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 4137              		.loc 1 1306 5 is_stmt 1 view .LVU1085
1306:./../bno055.c ****         return BNO_ERR_I2C;
 4138              		.loc 1 1306 8 is_stmt 0 view .LVU1086
 4139 0026 0399     		ldr	r1, [sp, #12]
 4140 0028 10B1     		cbz	r0, .L209
 4141              	.L211:
 4142              	.LVL442:
ARM GAS  /tmp/cctFn18N.s 			page 113


1307:./../bno055.c ****     }
 4143              		.loc 1 1307 16 view .LVU1087
 4144 002a 0120     		movs	r0, #1
 4145              	.LBE283:
 4146              	.LBE285:
 558:./../bno055.c **** 
 4147              		.loc 1 558 1 view .LVU1088
 4148 002c 09B0     		add	sp, sp, #36
 4149              	.LCFI138:
 4150              		.cfi_remember_state
 4151              		.cfi_def_cfa_offset 20
 4152              		@ sp needed
 4153 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 4154              	.LVL443:
 4155              	.L209:
 4156              	.LCFI139:
 4157              		.cfi_restore_state
 4158              	.LBB286:
 4159              	.LBB284:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 4160              		.loc 1 1309 5 is_stmt 1 view .LVU1089
1310:./../bno055.c ****     if (err != HAL_OK) {
 4161              		.loc 1 1310 9 is_stmt 0 view .LVU1090
 4162 0030 0097     		str	r7, [sp]
 4163 0032 0623     		movs	r3, #6
 4164 0034 3046     		mov	r0, r6
 4165              	.LVL444:
1310:./../bno055.c ****     if (err != HAL_OK) {
 4166              		.loc 1 1310 9 view .LVU1091
 4167 0036 06AA     		add	r2, sp, #24
 4168              	.LVL445:
1310:./../bno055.c ****     if (err != HAL_OK) {
 4169              		.loc 1 1310 9 view .LVU1092
 4170 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 4171              	.LVL446:
 4172              		.loc 1 1311 5 is_stmt 1 view .LVU1093
 4173              		.loc 1 1311 8 is_stmt 0 view .LVU1094
 4174 003c 0028     		cmp	r0, #0
 4175 003e F4D1     		bne	.L211
 4176              	.LVL447:
 4177              		.loc 1 1311 8 view .LVU1095
 4178              	.LBE284:
 4179              	.LBE286:
 551:./../bno055.c ****                                                      : BNO_GYR_SCALE_RPS;
 4180              		.loc 1 551 5 is_stmt 1 view .LVU1096
 553:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4181              		.loc 1 553 46 is_stmt 0 view .LVU1097
 4182 0040 BDF91820 		ldrsh	r2, [sp, #24]
 552:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 4183              		.loc 1 552 54 view .LVU1098
 4184 0044 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 4185 0046 DFED135A 		vldr.32	s11, .L215
 553:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4186              		.loc 1 553 46 view .LVU1099
 4187 004a 06EE102A 		vmov	s12, r2	@ int
 554:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4188              		.loc 1 554 46 view .LVU1100
ARM GAS  /tmp/cctFn18N.s 			page 114


 4189 004e BDF91A20 		ldrsh	r2, [sp, #26]
 4190 0052 06EE902A 		vmov	s13, r2	@ int
 555:./../bno055.c **** 
 4191              		.loc 1 555 46 view .LVU1101
 4192 0056 BDF91C20 		ldrsh	r2, [sp, #28]
 4193 005a 07EE102A 		vmov	s14, r2	@ int
 553:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4194              		.loc 1 553 46 view .LVU1102
 4195 005e B8EEC66A 		vcvt.f32.s32	s12, s12
 554:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4196              		.loc 1 554 46 view .LVU1103
 4197 0062 F8EEE66A 		vcvt.f32.s32	s13, s13
 555:./../bno055.c **** 
 4198              		.loc 1 555 46 view .LVU1104
 4199 0066 B8EEC77A 		vcvt.f32.s32	s14, s14
 552:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 4200              		.loc 1 552 54 view .LVU1105
 4201 006a 002B     		cmp	r3, #0
 4202 006c F3EE007A 		vmov.f32	s15, #1.6e+1
 4203 0070 18BF     		it	ne
 4204 0072 F0EE657A 		vmovne.f32	s15, s11
 4205              	.LVL448:
 553:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4206              		.loc 1 553 5 is_stmt 1 view .LVU1106
 553:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4207              		.loc 1 553 46 is_stmt 0 view .LVU1107
 4208 0076 C6EE275A 		vdiv.f32	s11, s12, s15
 554:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4209              		.loc 1 554 46 view .LVU1108
 4210 007a 86EEA76A 		vdiv.f32	s12, s13, s15
 555:./../bno055.c **** 
 4211              		.loc 1 555 46 view .LVU1109
 4212 007e C7EE276A 		vdiv.f32	s13, s14, s15
 553:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4213              		.loc 1 553 12 view .LVU1110
 4214 0082 C5ED005A 		vstr.32	s11, [r5]
 554:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4215              		.loc 1 554 5 is_stmt 1 view .LVU1111
 554:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4216              		.loc 1 554 12 is_stmt 0 view .LVU1112
 4217 0086 85ED016A 		vstr.32	s12, [r5, #4]
 555:./../bno055.c **** 
 4218              		.loc 1 555 5 is_stmt 1 view .LVU1113
 555:./../bno055.c **** 
 4219              		.loc 1 555 12 is_stmt 0 view .LVU1114
 4220 008a C5ED026A 		vstr.32	s13, [r5, #8]
 557:./../bno055.c **** }
 4221              		.loc 1 557 5 is_stmt 1 view .LVU1115
 558:./../bno055.c **** 
 4222              		.loc 1 558 1 is_stmt 0 view .LVU1116
 4223 008e 09B0     		add	sp, sp, #36
 4224              	.LCFI140:
 4225              		.cfi_def_cfa_offset 20
 4226              		@ sp needed
 4227 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 4228              	.LVL449:
 4229              	.L216:
ARM GAS  /tmp/cctFn18N.s 			page 115


 558:./../bno055.c **** 
 4230              		.loc 1 558 1 view .LVU1117
 4231 0092 00BF     		.align	2
 4232              	.L215:
 4233 0094 00006144 		.word	1147207680
 4234              		.cfi_endproc
 4235              	.LFE146:
 4237              		.section	.text.bno055_linear_acc,"ax",%progbits
 4238              		.align	1
 4239              		.p2align 2,,3
 4240              		.global	bno055_linear_acc
 4241              		.syntax unified
 4242              		.thumb
 4243              		.thumb_func
 4244              		.fpu fpv4-sp-d16
 4246              	bno055_linear_acc:
 4247              	.LVL450:
 4248              	.LFB142:
 394:./../bno055.c ****     error_bno err;
 4249              		.loc 1 394 64 is_stmt 1 view -0
 4250              		.cfi_startproc
 4251              		@ args = 0, pretend = 0, frame = 24
 4252              		@ frame_needed = 0, uses_anonymous_args = 0
 395:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 4253              		.loc 1 395 5 view .LVU1119
 401:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_LIA_DATA_X_LSB, data, 6)) != BNO_OK) {
 4254              		.loc 1 401 5 view .LVU1120
 402:./../bno055.c ****         return err;
 4255              		.loc 1 402 5 view .LVU1121
 394:./../bno055.c ****     error_bno err;
 4256              		.loc 1 394 64 is_stmt 0 view .LVU1122
 4257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4258              	.LCFI141:
 4259              		.cfi_def_cfa_offset 20
 4260              		.cfi_offset 4, -20
 4261              		.cfi_offset 5, -16
 4262              		.cfi_offset 6, -12
 4263              		.cfi_offset 7, -8
 4264              		.cfi_offset 14, -4
 4265 0002 89B0     		sub	sp, sp, #36
 4266              	.LCFI142:
 4267              		.cfi_def_cfa_offset 56
 4268 0004 0668     		ldr	r6, [r0]
 4269              	.LVL451:
 4270              	.LBB289:
 4271              	.LBB290:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4272              		.loc 1 1305 11 view .LVU1123
 4273 0006 4FF0FF37 		mov	r7, #-1
 4274 000a 2823     		movs	r3, #40
 4275 000c 0097     		str	r7, [sp]
 4276              	.LVL452:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4277              		.loc 1 1305 11 view .LVU1124
 4278 000e 8DF81730 		strb	r3, [sp, #23]
 4279              	.LVL453:
1305:./../bno055.c ****     if (err != HAL_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 116


 4280              		.loc 1 1305 11 view .LVU1125
 4281              	.LBE290:
 4282              	.LBI289:
1299:./../bno055.c ****                            uint32_t buf_size) {
 4283              		.loc 1 1299 11 is_stmt 1 view .LVU1126
 4284              	.LBB291:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 4285              		.loc 1 1301 5 view .LVU1127
1305:./../bno055.c ****     if (err != HAL_OK) {
 4286              		.loc 1 1305 5 view .LVU1128
 4287              	.LBE291:
 4288              	.LBE289:
 394:./../bno055.c ****     error_bno err;
 4289              		.loc 1 394 64 is_stmt 0 view .LVU1129
 4290 0012 0446     		mov	r4, r0
 4291 0014 0D46     		mov	r5, r1
 4292              	.LBB294:
 4293              	.LBB292:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4294              		.loc 1 1305 11 view .LVU1130
 4295 0016 0123     		movs	r3, #1
 4296              	.LVL454:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4297              		.loc 1 1305 11 view .LVU1131
 4298 0018 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 4299              	.LVL455:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4300              		.loc 1 1305 11 view .LVU1132
 4301 001a 0391     		str	r1, [sp, #12]
 4302 001c 0DF11702 		add	r2, sp, #23
 4303              	.LVL456:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4304              		.loc 1 1305 11 view .LVU1133
 4305 0020 3046     		mov	r0, r6
 4306              	.LVL457:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4307              		.loc 1 1305 11 view .LVU1134
 4308 0022 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 4309              	.LVL458:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 4310              		.loc 1 1306 5 is_stmt 1 view .LVU1135
1306:./../bno055.c ****         return BNO_ERR_I2C;
 4311              		.loc 1 1306 8 is_stmt 0 view .LVU1136
 4312 0026 0399     		ldr	r1, [sp, #12]
 4313 0028 10B1     		cbz	r0, .L218
 4314              	.L220:
 4315              	.LVL459:
1307:./../bno055.c ****     }
 4316              		.loc 1 1307 16 view .LVU1137
 4317 002a 0120     		movs	r0, #1
 4318              	.LBE292:
 4319              	.LBE294:
 412:./../bno055.c **** 
 4320              		.loc 1 412 1 view .LVU1138
 4321 002c 09B0     		add	sp, sp, #36
 4322              	.LCFI143:
 4323              		.cfi_remember_state
ARM GAS  /tmp/cctFn18N.s 			page 117


 4324              		.cfi_def_cfa_offset 20
 4325              		@ sp needed
 4326 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 4327              	.LVL460:
 4328              	.L218:
 4329              	.LCFI144:
 4330              		.cfi_restore_state
 4331              	.LBB295:
 4332              	.LBB293:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 4333              		.loc 1 1309 5 is_stmt 1 view .LVU1139
1310:./../bno055.c ****     if (err != HAL_OK) {
 4334              		.loc 1 1310 9 is_stmt 0 view .LVU1140
 4335 0030 0097     		str	r7, [sp]
 4336 0032 0623     		movs	r3, #6
 4337 0034 3046     		mov	r0, r6
 4338              	.LVL461:
1310:./../bno055.c ****     if (err != HAL_OK) {
 4339              		.loc 1 1310 9 view .LVU1141
 4340 0036 06AA     		add	r2, sp, #24
 4341              	.LVL462:
1310:./../bno055.c ****     if (err != HAL_OK) {
 4342              		.loc 1 1310 9 view .LVU1142
 4343 0038 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 4344              	.LVL463:
 4345              		.loc 1 1311 5 is_stmt 1 view .LVU1143
 4346              		.loc 1 1311 8 is_stmt 0 view .LVU1144
 4347 003c 0028     		cmp	r0, #0
 4348 003e F4D1     		bne	.L220
 4349              	.LVL464:
 4350              		.loc 1 1311 8 view .LVU1145
 4351              	.LBE293:
 4352              	.LBE295:
 405:./../bno055.c ****                                                            : BNO_ACC_SCALE_MG;
 4353              		.loc 1 405 5 is_stmt 1 view .LVU1146
 407:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4354              		.loc 1 407 46 is_stmt 0 view .LVU1147
 4355 0040 BDF91820 		ldrsh	r2, [sp, #24]
 406:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 4356              		.loc 1 406 60 view .LVU1148
 4357 0044 A37B     		ldrb	r3, [r4, #14]	@ zero_extendqisi2
 4358 0046 DFED137A 		vldr.32	s15, .L224
 407:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4359              		.loc 1 407 46 view .LVU1149
 4360 004a 06EE102A 		vmov	s12, r2	@ int
 408:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4361              		.loc 1 408 46 view .LVU1150
 4362 004e BDF91A20 		ldrsh	r2, [sp, #26]
 4363 0052 06EE902A 		vmov	s13, r2	@ int
 409:./../bno055.c **** 
 4364              		.loc 1 409 46 view .LVU1151
 4365 0056 BDF91C20 		ldrsh	r2, [sp, #28]
 4366 005a 07EE102A 		vmov	s14, r2	@ int
 407:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4367              		.loc 1 407 46 view .LVU1152
 4368 005e B8EEC66A 		vcvt.f32.s32	s12, s12
 408:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
ARM GAS  /tmp/cctFn18N.s 			page 118


 4369              		.loc 1 408 46 view .LVU1153
 4370 0062 F8EEE66A 		vcvt.f32.s32	s13, s13
 409:./../bno055.c **** 
 4371              		.loc 1 409 46 view .LVU1154
 4372 0066 B8EEC77A 		vcvt.f32.s32	s14, s14
 406:./../bno055.c ****     xyz->x = (s16)((data[1] << 8) | data[0]) / scale;
 4373              		.loc 1 406 60 view .LVU1155
 4374 006a F7EE005A 		vmov.f32	s11, #1.0e+0
 4375 006e 002B     		cmp	r3, #0
 4376 0070 18BF     		it	ne
 4377 0072 F0EE657A 		vmovne.f32	s15, s11
 4378              	.LVL465:
 407:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4379              		.loc 1 407 5 is_stmt 1 view .LVU1156
 407:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4380              		.loc 1 407 46 is_stmt 0 view .LVU1157
 4381 0076 C6EE275A 		vdiv.f32	s11, s12, s15
 408:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4382              		.loc 1 408 46 view .LVU1158
 4383 007a 86EEA76A 		vdiv.f32	s12, s13, s15
 409:./../bno055.c **** 
 4384              		.loc 1 409 46 view .LVU1159
 4385 007e C7EE276A 		vdiv.f32	s13, s14, s15
 407:./../bno055.c ****     xyz->y = (s16)((data[3] << 8) | data[2]) / scale;
 4386              		.loc 1 407 12 view .LVU1160
 4387 0082 C5ED005A 		vstr.32	s11, [r5]
 408:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4388              		.loc 1 408 5 is_stmt 1 view .LVU1161
 408:./../bno055.c ****     xyz->z = (s16)((data[5] << 8) | data[4]) / scale;
 4389              		.loc 1 408 12 is_stmt 0 view .LVU1162
 4390 0086 85ED016A 		vstr.32	s12, [r5, #4]
 409:./../bno055.c **** 
 4391              		.loc 1 409 5 is_stmt 1 view .LVU1163
 409:./../bno055.c **** 
 4392              		.loc 1 409 12 is_stmt 0 view .LVU1164
 4393 008a C5ED026A 		vstr.32	s13, [r5, #8]
 411:./../bno055.c **** };
 4394              		.loc 1 411 5 is_stmt 1 view .LVU1165
 412:./../bno055.c **** 
 4395              		.loc 1 412 1 is_stmt 0 view .LVU1166
 4396 008e 09B0     		add	sp, sp, #36
 4397              	.LCFI145:
 4398              		.cfi_def_cfa_offset 20
 4399              		@ sp needed
 4400 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 4401              	.LVL466:
 4402              	.L225:
 412:./../bno055.c **** 
 4403              		.loc 1 412 1 view .LVU1167
 4404 0092 00BF     		.align	2
 4405              	.L224:
 4406 0094 0000C842 		.word	1120403456
 4407              		.cfi_endproc
 4408              	.LFE142:
 4410              		.section	.text.bno055_quaternion,"ax",%progbits
 4411              		.align	1
 4412              		.p2align 2,,3
ARM GAS  /tmp/cctFn18N.s 			page 119


 4413              		.global	bno055_quaternion
 4414              		.syntax unified
 4415              		.thumb
 4416              		.thumb_func
 4417              		.fpu fpv4-sp-d16
 4419              	bno055_quaternion:
 4420              	.LVL467:
 4421              	.LFB163:
1123:./../bno055.c ****     error_bno err;
 4422              		.loc 1 1123 64 is_stmt 1 view -0
 4423              		.cfi_startproc
 4424              		@ args = 0, pretend = 0, frame = 16
 4425              		@ frame_needed = 0, uses_anonymous_args = 0
1124:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 4426              		.loc 1 1124 5 view .LVU1169
1130:./../bno055.c ****     if ((err = bno055_read_regs(*imu, BNO_QUA_DATA_W_LSB, data, 8)) != BNO_OK) {
 4427              		.loc 1 1130 5 view .LVU1170
1131:./../bno055.c ****         return err;
 4428              		.loc 1 1131 5 view .LVU1171
1123:./../bno055.c ****     error_bno err;
 4429              		.loc 1 1123 64 is_stmt 0 view .LVU1172
 4430 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4431              	.LCFI146:
 4432              		.cfi_def_cfa_offset 20
 4433              		.cfi_offset 4, -20
 4434              		.cfi_offset 5, -16
 4435              		.cfi_offset 6, -12
 4436              		.cfi_offset 7, -8
 4437              		.cfi_offset 14, -4
 4438 0002 0568     		ldr	r5, [r0]
 4439              	.LVL468:
 4440              	.LBB298:
 4441              	.LBB299:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4442              		.loc 1 1305 11 view .LVU1173
 4443 0004 8679     		ldrb	r6, [r0, #6]	@ zero_extendqisi2
 4444              	.LBE299:
 4445              	.LBE298:
1123:./../bno055.c ****     error_bno err;
 4446              		.loc 1 1123 64 view .LVU1174
 4447 0006 87B0     		sub	sp, sp, #28
 4448              	.LCFI147:
 4449              		.cfi_def_cfa_offset 48
 4450 0008 2023     		movs	r3, #32
 4451              	.LBB303:
 4452              	.LBB300:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4453              		.loc 1 1305 11 view .LVU1175
 4454 000a 4FF0FF37 		mov	r7, #-1
 4455              	.LBE300:
 4456              	.LBE303:
1123:./../bno055.c ****     error_bno err;
 4457              		.loc 1 1123 64 view .LVU1176
 4458 000e 0C46     		mov	r4, r1
 4459 0010 8DF80F30 		strb	r3, [sp, #15]
 4460              	.LVL469:
 4461              	.LBB304:
ARM GAS  /tmp/cctFn18N.s 			page 120


 4462              	.LBI298:
1299:./../bno055.c ****                            uint32_t buf_size) {
 4463              		.loc 1 1299 11 is_stmt 1 view .LVU1177
 4464              	.LBB301:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 4465              		.loc 1 1301 5 view .LVU1178
1305:./../bno055.c ****     if (err != HAL_OK) {
 4466              		.loc 1 1305 5 view .LVU1179
1305:./../bno055.c ****     if (err != HAL_OK) {
 4467              		.loc 1 1305 11 is_stmt 0 view .LVU1180
 4468 0014 0097     		str	r7, [sp]
 4469              	.LVL470:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4470              		.loc 1 1305 11 view .LVU1181
 4471 0016 0123     		movs	r3, #1
 4472              	.LVL471:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4473              		.loc 1 1305 11 view .LVU1182
 4474 0018 0DF10F02 		add	r2, sp, #15
 4475              	.LVL472:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4476              		.loc 1 1305 11 view .LVU1183
 4477 001c 3146     		mov	r1, r6
 4478              	.LVL473:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4479              		.loc 1 1305 11 view .LVU1184
 4480 001e 2846     		mov	r0, r5
 4481              	.LVL474:
1305:./../bno055.c ****     if (err != HAL_OK) {
 4482              		.loc 1 1305 11 view .LVU1185
 4483 0020 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 4484              	.LVL475:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 4485              		.loc 1 1306 5 is_stmt 1 view .LVU1186
1306:./../bno055.c ****         return BNO_ERR_I2C;
 4486              		.loc 1 1306 8 is_stmt 0 view .LVU1187
 4487 0024 10B1     		cbz	r0, .L227
 4488              	.L229:
 4489              	.LVL476:
1307:./../bno055.c ****     }
 4490              		.loc 1 1307 16 view .LVU1188
 4491 0026 0120     		movs	r0, #1
 4492              	.LBE301:
 4493              	.LBE304:
1139:./../bno055.c **** 
 4494              		.loc 1 1139 1 view .LVU1189
 4495 0028 07B0     		add	sp, sp, #28
 4496              	.LCFI148:
 4497              		.cfi_remember_state
 4498              		.cfi_def_cfa_offset 20
 4499              		@ sp needed
 4500 002a F0BD     		pop	{r4, r5, r6, r7, pc}
 4501              	.LVL477:
 4502              	.L227:
 4503              	.LCFI149:
 4504              		.cfi_restore_state
 4505              	.LBB305:
ARM GAS  /tmp/cctFn18N.s 			page 121


 4506              	.LBB302:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 4507              		.loc 1 1309 5 is_stmt 1 view .LVU1190
1310:./../bno055.c ****     if (err != HAL_OK) {
 4508              		.loc 1 1310 9 is_stmt 0 view .LVU1191
 4509 002c 0097     		str	r7, [sp]
 4510 002e 0823     		movs	r3, #8
 4511 0030 04AA     		add	r2, sp, #16
 4512              	.LVL478:
1310:./../bno055.c ****     if (err != HAL_OK) {
 4513              		.loc 1 1310 9 view .LVU1192
 4514 0032 3146     		mov	r1, r6
 4515 0034 2846     		mov	r0, r5
 4516              	.LVL479:
1310:./../bno055.c ****     if (err != HAL_OK) {
 4517              		.loc 1 1310 9 view .LVU1193
 4518 0036 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 4519              	.LVL480:
 4520              		.loc 1 1311 5 is_stmt 1 view .LVU1194
 4521              		.loc 1 1311 8 is_stmt 0 view .LVU1195
 4522 003a 0028     		cmp	r0, #0
 4523 003c F3D1     		bne	.L229
 4524              	.LVL481:
 4525              		.loc 1 1311 8 view .LVU1196
 4526              	.LBE302:
 4527              	.LBE305:
1134:./../bno055.c ****     buf->x = (s16)((data[3] << 8) | data[2]) / (f32)BNO_QUA_SCALE;
 4528              		.loc 1 1134 5 is_stmt 1 view .LVU1197
1134:./../bno055.c ****     buf->x = (s16)((data[3] << 8) | data[2]) / (f32)BNO_QUA_SCALE;
 4529              		.loc 1 1134 46 is_stmt 0 view .LVU1198
 4530 003e BDF91030 		ldrsh	r3, [sp, #16]
 4531 0042 DFED155A 		vldr.32	s11, .L231
 4532 0046 06EE103A 		vmov	s12, r3	@ int
1135:./../bno055.c ****     buf->y = (s16)((data[5] << 8) | data[4]) / (f32)BNO_QUA_SCALE;
 4533              		.loc 1 1135 46 view .LVU1199
 4534 004a BDF91230 		ldrsh	r3, [sp, #18]
 4535 004e 06EE903A 		vmov	s13, r3	@ int
1136:./../bno055.c ****     buf->z = (s16)((data[7] << 8) | data[6]) / (f32)BNO_QUA_SCALE;
 4536              		.loc 1 1136 46 view .LVU1200
 4537 0052 BDF91430 		ldrsh	r3, [sp, #20]
 4538 0056 07EE103A 		vmov	s14, r3	@ int
1137:./../bno055.c ****     return BNO_OK;
 4539              		.loc 1 1137 46 view .LVU1201
 4540 005a BDF91630 		ldrsh	r3, [sp, #22]
 4541 005e 07EE903A 		vmov	s15, r3	@ int
1134:./../bno055.c ****     buf->x = (s16)((data[3] << 8) | data[2]) / (f32)BNO_QUA_SCALE;
 4542              		.loc 1 1134 46 view .LVU1202
 4543 0062 B8EEC66A 		vcvt.f32.s32	s12, s12
1135:./../bno055.c ****     buf->y = (s16)((data[5] << 8) | data[4]) / (f32)BNO_QUA_SCALE;
 4544              		.loc 1 1135 46 view .LVU1203
 4545 0066 F8EEE66A 		vcvt.f32.s32	s13, s13
1136:./../bno055.c ****     buf->z = (s16)((data[7] << 8) | data[6]) / (f32)BNO_QUA_SCALE;
 4546              		.loc 1 1136 46 view .LVU1204
 4547 006a B8EEC77A 		vcvt.f32.s32	s14, s14
1137:./../bno055.c ****     return BNO_OK;
 4548              		.loc 1 1137 46 view .LVU1205
 4549 006e F8EEE77A 		vcvt.f32.s32	s15, s15
ARM GAS  /tmp/cctFn18N.s 			page 122


1134:./../bno055.c ****     buf->x = (s16)((data[3] << 8) | data[2]) / (f32)BNO_QUA_SCALE;
 4550              		.loc 1 1134 46 view .LVU1206
 4551 0072 26EE256A 		vmul.f32	s12, s12, s11
1135:./../bno055.c ****     buf->y = (s16)((data[5] << 8) | data[4]) / (f32)BNO_QUA_SCALE;
 4552              		.loc 1 1135 46 view .LVU1207
 4553 0076 66EEA56A 		vmul.f32	s13, s13, s11
1136:./../bno055.c ****     buf->z = (s16)((data[7] << 8) | data[6]) / (f32)BNO_QUA_SCALE;
 4554              		.loc 1 1136 46 view .LVU1208
 4555 007a 27EE257A 		vmul.f32	s14, s14, s11
1137:./../bno055.c ****     return BNO_OK;
 4556              		.loc 1 1137 46 view .LVU1209
 4557 007e 67EEA57A 		vmul.f32	s15, s15, s11
1134:./../bno055.c ****     buf->x = (s16)((data[3] << 8) | data[2]) / (f32)BNO_QUA_SCALE;
 4558              		.loc 1 1134 12 view .LVU1210
 4559 0082 84ED036A 		vstr.32	s12, [r4, #12]
1135:./../bno055.c ****     buf->y = (s16)((data[5] << 8) | data[4]) / (f32)BNO_QUA_SCALE;
 4560              		.loc 1 1135 5 is_stmt 1 view .LVU1211
1135:./../bno055.c ****     buf->y = (s16)((data[5] << 8) | data[4]) / (f32)BNO_QUA_SCALE;
 4561              		.loc 1 1135 12 is_stmt 0 view .LVU1212
 4562 0086 C4ED006A 		vstr.32	s13, [r4]
1136:./../bno055.c ****     buf->z = (s16)((data[7] << 8) | data[6]) / (f32)BNO_QUA_SCALE;
 4563              		.loc 1 1136 5 is_stmt 1 view .LVU1213
1136:./../bno055.c ****     buf->z = (s16)((data[7] << 8) | data[6]) / (f32)BNO_QUA_SCALE;
 4564              		.loc 1 1136 12 is_stmt 0 view .LVU1214
 4565 008a 84ED017A 		vstr.32	s14, [r4, #4]
1137:./../bno055.c ****     return BNO_OK;
 4566              		.loc 1 1137 5 is_stmt 1 view .LVU1215
1137:./../bno055.c ****     return BNO_OK;
 4567              		.loc 1 1137 12 is_stmt 0 view .LVU1216
 4568 008e C4ED027A 		vstr.32	s15, [r4, #8]
1138:./../bno055.c **** }
 4569              		.loc 1 1138 5 is_stmt 1 view .LVU1217
1139:./../bno055.c **** 
 4570              		.loc 1 1139 1 is_stmt 0 view .LVU1218
 4571 0092 07B0     		add	sp, sp, #28
 4572              	.LCFI150:
 4573              		.cfi_def_cfa_offset 20
 4574              		@ sp needed
 4575 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 4576              	.LVL482:
 4577              	.L232:
1139:./../bno055.c **** 
 4578              		.loc 1 1139 1 view .LVU1219
 4579 0096 00BF     		.align	2
 4580              	.L231:
 4581 0098 00008038 		.word	947912704
 4582              		.cfi_endproc
 4583              	.LFE163:
 4585              		.section	.text.bno055_gyr_conf,"ax",%progbits
 4586              		.align	1
 4587              		.p2align 2,,3
 4588              		.global	bno055_gyr_conf
 4589              		.syntax unified
 4590              		.thumb
 4591              		.thumb_func
 4592              		.fpu fpv4-sp-d16
 4594              	bno055_gyr_conf:
ARM GAS  /tmp/cctFn18N.s 			page 123


 4595              	.LVL483:
 4596              	.LFB165:
1168:./../bno055.c ****     error_bno err;
 4597              		.loc 1 1168 57 is_stmt 1 view -0
 4598              		.cfi_startproc
 4599              		@ args = 0, pretend = 0, frame = 16
 4600              		@ frame_needed = 0, uses_anonymous_args = 0
1169:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_1)) != BNO_OK) {
 4601              		.loc 1 1169 5 view .LVU1221
1170:./../bno055.c ****         return err;
 4602              		.loc 1 1170 5 view .LVU1222
1168:./../bno055.c ****     error_bno err;
 4603              		.loc 1 1168 57 is_stmt 0 view .LVU1223
 4604 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4605              	.LCFI151:
 4606              		.cfi_def_cfa_offset 36
 4607              		.cfi_offset 4, -36
 4608              		.cfi_offset 5, -32
 4609              		.cfi_offset 6, -28
 4610              		.cfi_offset 7, -24
 4611              		.cfi_offset 8, -20
 4612              		.cfi_offset 9, -16
 4613              		.cfi_offset 10, -12
 4614              		.cfi_offset 11, -8
 4615              		.cfi_offset 14, -4
 4616 0004 89B0     		sub	sp, sp, #36
 4617              	.LCFI152:
 4618              		.cfi_def_cfa_offset 72
1168:./../bno055.c ****     error_bno err;
 4619              		.loc 1 1168 57 view .LVU1224
 4620 0006 1E46     		mov	r6, r3
 4621 0008 0123     		movs	r3, #1
 4622              	.LVL484:
1168:./../bno055.c ****     error_bno err;
 4623              		.loc 1 1168 57 view .LVU1225
 4624 000a 8DF81C30 		strb	r3, [sp, #28]
 4625              	.LBB326:
 4626              	.LBB327:
1312:./../bno055.c ****         return BNO_ERR_I2C;
1313:./../bno055.c ****     }
1314:./../bno055.c ****     return BNO_OK;
1315:./../bno055.c **** }
1316:./../bno055.c **** 
1317:./../bno055.c **** error_bno bno055_write_regs(bno055_t imu, uint32_t addr, uint8_t* buf,
1318:./../bno055.c ****                             uint32_t buf_size) {
1319:./../bno055.c ****     HAL_StatusTypeDef err;
1320:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
1321:./../bno055.c ****                             HAL_MAX_DELAY);
1322:./../bno055.c ****     if (err != HAL_OK) {
1323:./../bno055.c ****         return BNO_ERR_I2C;
1324:./../bno055.c ****     }
1325:./../bno055.c ****     return BNO_OK;
1326:./../bno055.c **** }
1327:./../bno055.c **** 
1328:./../bno055.c **** error_bno bno055_set_page(bno055_t* imu, const bno055_page_t page) {
1329:./../bno055.c ****     if (imu->_page != page) {
 4627              		.loc 1 1329 12 view .LVU1226
ARM GAS  /tmp/cctFn18N.s 			page 124


 4628 000e 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 4629              		.loc 1 1329 8 view .LVU1227
 4630 0010 012B     		cmp	r3, #1
 4631              	.LBE327:
 4632              	.LBE326:
1168:./../bno055.c ****     error_bno err;
 4633              		.loc 1 1168 57 view .LVU1228
 4634 0012 0446     		mov	r4, r0
 4635              	.LVL485:
 4636              	.LBB332:
 4637              	.LBI326:
1328:./../bno055.c ****     if (imu->_page != page) {
 4638              		.loc 1 1328 11 is_stmt 1 view .LVU1229
 4639              	.LBB330:
 4640              		.loc 1 1329 5 view .LVU1230
 4641              	.LBE330:
 4642              	.LBE332:
1168:./../bno055.c ****     error_bno err;
 4643              		.loc 1 1168 57 is_stmt 0 view .LVU1231
 4644 0014 0D46     		mov	r5, r1
 4645 0016 1746     		mov	r7, r2
 4646              	.LBB333:
 4647              	.LBB331:
 4648              		.loc 1 1329 8 view .LVU1232
 4649 0018 16D1     		bne	.L245
1330:./../bno055.c ****         return BNO_OK;
1331:./../bno055.c ****     }
1332:./../bno055.c ****     if (page > 0x01) {
 4650              		.loc 1 1332 5 is_stmt 1 view .LVU1233
1333:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
1334:./../bno055.c ****     }
1335:./../bno055.c ****     error_bno err;
 4651              		.loc 1 1335 5 view .LVU1234
1336:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 4652              		.loc 1 1336 5 view .LVU1235
 4653              	.LVL486:
 4654              	.LBB328:
 4655              	.LBI328:
1317:./../bno055.c ****                             uint32_t buf_size) {
 4656              		.loc 1 1317 11 view .LVU1236
 4657              	.LBB329:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 4658              		.loc 1 1319 5 view .LVU1237
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4659              		.loc 1 1320 5 view .LVU1238
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4660              		.loc 1 1320 11 is_stmt 0 view .LVU1239
 4661 001a 4FF0FF32 		mov	r2, #-1
 4662              	.LVL487:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4663              		.loc 1 1320 11 view .LVU1240
 4664 001e 0DF11C09 		add	r9, sp, #28
 4665              	.LVL488:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4666              		.loc 1 1320 11 view .LVU1241
 4667 0022 0193     		str	r3, [sp, #4]
 4668              	.LVL489:
ARM GAS  /tmp/cctFn18N.s 			page 125


1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4669              		.loc 1 1320 11 view .LVU1242
 4670 0024 0292     		str	r2, [sp, #8]
 4671 0026 CDF80090 		str	r9, [sp]
 4672 002a 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 4673              	.LVL490:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4674              		.loc 1 1320 11 view .LVU1243
 4675 002c 0068     		ldr	r0, [r0]
 4676              	.LVL491:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4677              		.loc 1 1320 11 view .LVU1244
 4678 002e 0593     		str	r3, [sp, #20]
 4679 0030 0722     		movs	r2, #7
 4680 0032 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 4681              	.LVL492:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4682              		.loc 1 1322 5 is_stmt 1 view .LVU1245
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4683              		.loc 1 1322 8 is_stmt 0 view .LVU1246
 4684 0036 059B     		ldr	r3, [sp, #20]
 4685 0038 D8B9     		cbnz	r0, .L237
 4686              	.LVL493:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4687              		.loc 1 1322 8 view .LVU1247
 4688              	.LBE329:
 4689              	.LBE328:
1337:./../bno055.c ****     if (err != BNO_OK) {
 4690              		.loc 1 1337 5 is_stmt 1 view .LVU1248
1338:./../bno055.c ****         return err;
1339:./../bno055.c ****     }
1340:./../bno055.c ****     imu->_page = page;
 4691              		.loc 1 1340 5 view .LVU1249
 4692              		.loc 1 1340 16 is_stmt 0 view .LVU1250
 4693 003a 9DF81C30 		ldrb	r3, [sp, #28]	@ zero_extendqisi2
 4694 003e 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     HAL_Delay(2);
 4695              		.loc 1 1341 5 is_stmt 1 view .LVU1251
 4696 0040 0220     		movs	r0, #2
 4697 0042 FFF7FEFF 		bl	HAL_Delay
 4698              	.LVL494:
1342:./../bno055.c ****     return BNO_OK;
 4699              		.loc 1 1342 5 view .LVU1252
 4700              		.loc 1 1342 5 is_stmt 0 view .LVU1253
 4701 0046 01E0     		b	.L235
 4702              	.LVL495:
 4703              	.L245:
 4704              		.loc 1 1342 5 view .LVU1254
 4705 0048 0DF11C09 		add	r9, sp, #28
 4706              	.LVL496:
 4707              	.L235:
 4708              		.loc 1 1342 5 view .LVU1255
 4709              	.LBE331:
 4710              	.LBE333:
1173:./../bno055.c ****         return err;
 4711              		.loc 1 1173 5 is_stmt 1 view .LVU1256
 4712              	.LBB334:
ARM GAS  /tmp/cctFn18N.s 			page 126


 4713              	.LBB335:
 4714              	.LBB336:
 4715              	.LBB337:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4716              		.loc 1 1320 11 is_stmt 0 view .LVU1257
 4717 004c 4FF00108 		mov	r8, #1
 4718 0050 4FF0FF3A 		mov	r10, #-1
 4719 0054 CDE9018A 		strd	r8, r10, [sp, #4]
 4720 0058 CDF80090 		str	r9, [sp]
 4721 005c 0023     		movs	r3, #0
 4722 005e 8DF81C30 		strb	r3, [sp, #28]
 4723              	.LVL497:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4724              		.loc 1 1320 11 view .LVU1258
 4725              	.LBE337:
 4726              	.LBE336:
 4727              	.LBE335:
 4728              	.LBI334:
1216:./../bno055.c ****     error_bno err;
 4729              		.loc 1 1216 11 is_stmt 1 view .LVU1259
 4730              	.LBB340:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 4731              		.loc 1 1217 5 view .LVU1260
1223:./../bno055.c ****         BNO_OK) {
 4732              		.loc 1 1223 5 view .LVU1261
 4733              	.LBB339:
 4734              	.LBI336:
1317:./../bno055.c ****                             uint32_t buf_size) {
 4735              		.loc 1 1317 11 view .LVU1262
 4736              	.LBB338:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 4737              		.loc 1 1319 5 view .LVU1263
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4738              		.loc 1 1320 5 view .LVU1264
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4739              		.loc 1 1320 11 is_stmt 0 view .LVU1265
 4740 0062 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 4741 0064 2068     		ldr	r0, [r4]
 4742 0066 4346     		mov	r3, r8
 4743              	.LVL498:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4744              		.loc 1 1320 11 view .LVU1266
 4745 0068 3D22     		movs	r2, #61
 4746 006a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 4747              	.LVL499:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4748              		.loc 1 1322 5 is_stmt 1 view .LVU1267
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4749              		.loc 1 1322 8 is_stmt 0 view .LVU1268
 4750 006e 20B1     		cbz	r0, .L238
 4751              	.LVL500:
 4752              	.L242:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4753              		.loc 1 1322 8 view .LVU1269
 4754              	.LBE338:
 4755              	.LBE339:
 4756              	.LBE340:
ARM GAS  /tmp/cctFn18N.s 			page 127


 4757              	.LBE334:
 4758              	.LBB342:
 4759              	.LBB343:
 4760              	.LBB344:
 4761              	.LBB345:
1323:./../bno055.c ****     }
 4762              		.loc 1 1323 16 view .LVU1270
 4763 0070 4346     		mov	r3, r8
 4764              	.L237:
1323:./../bno055.c ****     }
 4765              		.loc 1 1323 16 view .LVU1271
 4766              	.LBE345:
 4767              	.LBE344:
 4768              	.LBE343:
 4769              	.LBE342:
1190:./../bno055.c **** error_bno bno055_mag_conf(bno055_t* bno, const bno055_mag_rate_t out_rate,
 4770              		.loc 1 1190 1 view .LVU1272
 4771 0072 1846     		mov	r0, r3
 4772 0074 09B0     		add	sp, sp, #36
 4773              	.LCFI153:
 4774              		.cfi_remember_state
 4775              		.cfi_def_cfa_offset 36
 4776              		@ sp needed
 4777 0076 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4778              	.LVL501:
 4779              	.L238:
 4780              	.LCFI154:
 4781              		.cfi_restore_state
 4782              	.LBB366:
 4783              	.LBB341:
1227:./../bno055.c ****     return BNO_OK;
 4784              		.loc 1 1227 5 is_stmt 1 view .LVU1273
 4785 007a 1820     		movs	r0, #24
 4786 007c FFF7FEFF 		bl	HAL_Delay
 4787              	.LVL502:
1228:./../bno055.c **** }
 4788              		.loc 1 1228 5 view .LVU1274
1228:./../bno055.c **** }
 4789              		.loc 1 1228 5 is_stmt 0 view .LVU1275
 4790              	.LBE341:
 4791              	.LBE366:
 4792              	.LBB367:
 4793              	.LBI342:
1166:./../bno055.c ****                           const bno055_gyr_band_t bandwidth,
 4794              		.loc 1 1166 11 is_stmt 1 view .LVU1276
 4795              	.LBB365:
1176:./../bno055.c ****     u8 config[2] = {range | bandwidth, mode};
 4796              		.loc 1 1176 5 view .LVU1277
 4797              	.LBB351:
 4798              	.LBB346:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4799              		.loc 1 1320 11 is_stmt 0 view .LVU1278
 4800 0080 4FF0020B 		mov	fp, #2
 4801              	.LBE346:
 4802              	.LBE351:
1176:./../bno055.c ****     u8 config[2] = {range | bandwidth, mode};
 4803              		.loc 1 1176 5 view .LVU1279
ARM GAS  /tmp/cctFn18N.s 			page 128


 4804 0084 0C20     		movs	r0, #12
 4805 0086 FFF7FEFF 		bl	HAL_Delay
 4806              	.LVL503:
1177:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_GYR_CONFIG_0, config, 2)) !=
 4807              		.loc 1 1177 5 is_stmt 1 view .LVU1280
 4808              	.LBB352:
 4809              	.LBB347:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4810              		.loc 1 1320 11 is_stmt 0 view .LVU1281
 4811 008a CDE901BA 		strd	fp, r10, [sp, #4]
 4812 008e CDF80090 		str	r9, [sp]
 4813              	.LBE347:
 4814              	.LBE352:
1177:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_GYR_CONFIG_0, config, 2)) !=
 4815              		.loc 1 1177 8 view .LVU1282
 4816 0092 3D43     		orrs	r5, r5, r7
 4817              	.LVL504:
 4818              	.LBB353:
 4819              	.LBB348:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4820              		.loc 1 1320 11 view .LVU1283
 4821 0094 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 4822 0096 2068     		ldr	r0, [r4]
 4823              	.LBE348:
 4824              	.LBE353:
1177:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_GYR_CONFIG_0, config, 2)) !=
 4825              		.loc 1 1177 8 view .LVU1284
 4826 0098 8DF81C50 		strb	r5, [sp, #28]
 4827              	.LBB354:
 4828              	.LBB349:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4829              		.loc 1 1320 11 view .LVU1285
 4830 009c 5B46     		mov	r3, fp
 4831 009e 0A22     		movs	r2, #10
 4832              	.LBE349:
 4833              	.LBE354:
1177:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_GYR_CONFIG_0, config, 2)) !=
 4834              		.loc 1 1177 8 view .LVU1286
 4835 00a0 8DF81D60 		strb	r6, [sp, #29]
1178:./../bno055.c ****         BNO_OK) {
 4836              		.loc 1 1178 5 is_stmt 1 view .LVU1287
 4837              	.LVL505:
 4838              	.LBB355:
 4839              	.LBI344:
1317:./../bno055.c ****                             uint32_t buf_size) {
 4840              		.loc 1 1317 11 view .LVU1288
 4841              	.LBB350:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 4842              		.loc 1 1319 5 view .LVU1289
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4843              		.loc 1 1320 5 view .LVU1290
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4844              		.loc 1 1320 11 is_stmt 0 view .LVU1291
 4845 00a4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 4846              	.LVL506:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4847              		.loc 1 1322 5 is_stmt 1 view .LVU1292
ARM GAS  /tmp/cctFn18N.s 			page 129


1322:./../bno055.c ****         return BNO_ERR_I2C;
 4848              		.loc 1 1322 8 is_stmt 0 view .LVU1293
 4849 00a8 0028     		cmp	r0, #0
 4850 00aa E1D1     		bne	.L242
 4851              	.LVL507:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4852              		.loc 1 1322 8 view .LVU1294
 4853              	.LBE350:
 4854              	.LBE355:
1182:./../bno055.c ****         return err;
 4855              		.loc 1 1182 5 is_stmt 1 view .LVU1295
1182:./../bno055.c ****         return err;
 4856              		.loc 1 1182 5 is_stmt 0 view .LVU1296
 4857 00ac 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 4858 00ae 8DF81B30 		strb	r3, [sp, #27]
 4859              	.LVL508:
 4860              	.LBB356:
 4861              	.LBI356:
1216:./../bno055.c ****     error_bno err;
 4862              		.loc 1 1216 11 is_stmt 1 view .LVU1297
 4863              	.LBB357:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 4864              		.loc 1 1217 5 view .LVU1298
1223:./../bno055.c ****         BNO_OK) {
 4865              		.loc 1 1223 5 view .LVU1299
 4866              	.LBB358:
 4867              	.LBI358:
1317:./../bno055.c ****                             uint32_t buf_size) {
 4868              		.loc 1 1317 11 view .LVU1300
 4869              	.LBB359:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 4870              		.loc 1 1319 5 view .LVU1301
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4871              		.loc 1 1320 5 view .LVU1302
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4872              		.loc 1 1320 11 is_stmt 0 view .LVU1303
 4873 00b2 CDE9018A 		strd	r8, r10, [sp, #4]
 4874              	.LVL509:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4875              		.loc 1 1320 11 view .LVU1304
 4876 00b6 0DF11B03 		add	r3, sp, #27
 4877              	.LVL510:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4878              		.loc 1 1320 11 view .LVU1305
 4879 00ba 0093     		str	r3, [sp]
 4880 00bc A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 4881 00be 2068     		ldr	r0, [r4]
 4882 00c0 4346     		mov	r3, r8
 4883              	.LVL511:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4884              		.loc 1 1320 11 view .LVU1306
 4885 00c2 3D22     		movs	r2, #61
 4886 00c4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 4887              	.LVL512:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4888              		.loc 1 1322 5 is_stmt 1 view .LVU1307
1322:./../bno055.c ****         return BNO_ERR_I2C;
ARM GAS  /tmp/cctFn18N.s 			page 130


 4889              		.loc 1 1322 8 is_stmt 0 view .LVU1308
 4890 00c8 0028     		cmp	r0, #0
 4891 00ca D1D1     		bne	.L242
 4892              	.LVL513:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4893              		.loc 1 1322 8 view .LVU1309
 4894              	.LBE359:
 4895              	.LBE358:
1227:./../bno055.c ****     return BNO_OK;
 4896              		.loc 1 1227 5 is_stmt 1 view .LVU1310
 4897 00cc 0590     		str	r0, [sp, #20]
 4898 00ce 1820     		movs	r0, #24
 4899 00d0 FFF7FEFF 		bl	HAL_Delay
 4900              	.LVL514:
1228:./../bno055.c **** }
 4901              		.loc 1 1228 5 view .LVU1311
1228:./../bno055.c **** }
 4902              		.loc 1 1228 5 is_stmt 0 view .LVU1312
 4903              	.LBE357:
 4904              	.LBE356:
1185:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
 4905              		.loc 1 1185 5 is_stmt 1 view .LVU1313
 4906 00d4 1820     		movs	r0, #24
 4907 00d6 FFF7FEFF 		bl	HAL_Delay
 4908              	.LVL515:
1186:./../bno055.c ****         return err;
 4909              		.loc 1 1186 5 view .LVU1314
 4910              	.LBB360:
 4911              	.LBB361:
1329:./../bno055.c ****         return BNO_OK;
 4912              		.loc 1 1329 8 is_stmt 0 view .LVU1315
 4913 00da 627B     		ldrb	r2, [r4, #13]	@ zero_extendqisi2
 4914 00dc 059B     		ldr	r3, [sp, #20]
 4915 00de 8DF81B30 		strb	r3, [sp, #27]
 4916              	.LVL516:
1329:./../bno055.c ****         return BNO_OK;
 4917              		.loc 1 1329 8 view .LVU1316
 4918              	.LBE361:
 4919              	.LBI360:
1328:./../bno055.c ****     if (imu->_page != page) {
 4920              		.loc 1 1328 11 is_stmt 1 view .LVU1317
 4921              	.LBB364:
1329:./../bno055.c ****         return BNO_OK;
 4922              		.loc 1 1329 5 view .LVU1318
1329:./../bno055.c ****         return BNO_OK;
 4923              		.loc 1 1329 8 is_stmt 0 view .LVU1319
 4924 00e2 002A     		cmp	r2, #0
 4925 00e4 C5D1     		bne	.L237
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 4926              		.loc 1 1332 5 is_stmt 1 view .LVU1320
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 4927              		.loc 1 1335 5 view .LVU1321
1336:./../bno055.c ****     if (err != BNO_OK) {
 4928              		.loc 1 1336 5 view .LVU1322
 4929              	.LVL517:
 4930              	.LBB362:
 4931              	.LBI362:
ARM GAS  /tmp/cctFn18N.s 			page 131


1317:./../bno055.c ****                             uint32_t buf_size) {
 4932              		.loc 1 1317 11 view .LVU1323
 4933              	.LBB363:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 4934              		.loc 1 1319 5 view .LVU1324
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4935              		.loc 1 1320 5 view .LVU1325
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4936              		.loc 1 1320 11 is_stmt 0 view .LVU1326
 4937 00e6 CDE9018A 		strd	r8, r10, [sp, #4]
 4938              	.LVL518:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4939              		.loc 1 1320 11 view .LVU1327
 4940 00ea 0DF11B03 		add	r3, sp, #27
 4941              	.LVL519:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4942              		.loc 1 1320 11 view .LVU1328
 4943 00ee 0093     		str	r3, [sp]
 4944 00f0 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 4945 00f2 2068     		ldr	r0, [r4]
 4946 00f4 4346     		mov	r3, r8
 4947              	.LVL520:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 4948              		.loc 1 1320 11 view .LVU1329
 4949 00f6 0722     		movs	r2, #7
 4950 00f8 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 4951              	.LVL521:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4952              		.loc 1 1322 5 is_stmt 1 view .LVU1330
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4953              		.loc 1 1322 8 is_stmt 0 view .LVU1331
 4954 00fc 0590     		str	r0, [sp, #20]
 4955              	.LVL522:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4956              		.loc 1 1322 8 view .LVU1332
 4957 00fe 0028     		cmp	r0, #0
 4958 0100 B6D1     		bne	.L242
 4959              	.LVL523:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 4960              		.loc 1 1322 8 view .LVU1333
 4961              	.LBE363:
 4962              	.LBE362:
1337:./../bno055.c ****         return err;
 4963              		.loc 1 1337 5 is_stmt 1 view .LVU1334
1340:./../bno055.c ****     HAL_Delay(2);
 4964              		.loc 1 1340 5 view .LVU1335
1340:./../bno055.c ****     HAL_Delay(2);
 4965              		.loc 1 1340 16 is_stmt 0 view .LVU1336
 4966 0102 9DF81B20 		ldrb	r2, [sp, #27]	@ zero_extendqisi2
 4967 0106 6273     		strb	r2, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 4968              		.loc 1 1341 5 is_stmt 1 view .LVU1337
 4969 0108 5846     		mov	r0, fp
 4970 010a FFF7FEFF 		bl	HAL_Delay
 4971              	.LVL524:
 4972              		.loc 1 1342 5 view .LVU1338
 4973              		.loc 1 1342 12 is_stmt 0 view .LVU1339
ARM GAS  /tmp/cctFn18N.s 			page 132


 4974 010e 059B     		ldr	r3, [sp, #20]
 4975 0110 AFE7     		b	.L237
 4976              	.LBE364:
 4977              	.LBE360:
 4978              	.LBE365:
 4979              	.LBE367:
 4980              		.cfi_endproc
 4981              	.LFE165:
 4983 0112 00BF     		.section	.text.bno055_mag_conf,"ax",%progbits
 4984              		.align	1
 4985              		.p2align 2,,3
 4986              		.global	bno055_mag_conf
 4987              		.syntax unified
 4988              		.thumb
 4989              		.thumb_func
 4990              		.fpu fpv4-sp-d16
 4992              	bno055_mag_conf:
 4993              	.LVL525:
 4994              	.LFB166:
1193:./../bno055.c ****     error_bno err;
 4995              		.loc 1 1193 57 is_stmt 1 view -0
 4996              		.cfi_startproc
 4997              		@ args = 0, pretend = 0, frame = 8
 4998              		@ frame_needed = 0, uses_anonymous_args = 0
1194:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_1)) != BNO_OK) {
 4999              		.loc 1 1194 5 view .LVU1341
1195:./../bno055.c ****         return err;
 5000              		.loc 1 1195 5 view .LVU1342
1193:./../bno055.c ****     error_bno err;
 5001              		.loc 1 1193 57 is_stmt 0 view .LVU1343
 5002 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5003              	.LCFI155:
 5004              		.cfi_def_cfa_offset 36
 5005              		.cfi_offset 4, -36
 5006              		.cfi_offset 5, -32
 5007              		.cfi_offset 6, -28
 5008              		.cfi_offset 7, -24
 5009              		.cfi_offset 8, -20
 5010              		.cfi_offset 9, -16
 5011              		.cfi_offset 10, -12
 5012              		.cfi_offset 11, -8
 5013              		.cfi_offset 14, -4
 5014 0004 0446     		mov	r4, r0
 5015              	.LVL526:
1193:./../bno055.c ****     error_bno err;
 5016              		.loc 1 1193 57 view .LVU1344
 5017 0006 87B0     		sub	sp, sp, #28
 5018              	.LCFI156:
 5019              		.cfi_def_cfa_offset 64
 5020              	.LBB388:
 5021              	.LBB389:
1329:./../bno055.c ****         return BNO_OK;
 5022              		.loc 1 1329 12 view .LVU1345
 5023 0008 657B     		ldrb	r5, [r4, #13]	@ zero_extendqisi2
 5024 000a 0120     		movs	r0, #1
 5025              	.LVL527:
1329:./../bno055.c ****         return BNO_OK;
ARM GAS  /tmp/cctFn18N.s 			page 133


 5026              		.loc 1 1329 8 view .LVU1346
 5027 000c 8542     		cmp	r5, r0
 5028 000e 8DF81700 		strb	r0, [sp, #23]
 5029              	.LVL528:
1329:./../bno055.c ****         return BNO_OK;
 5030              		.loc 1 1329 8 view .LVU1347
 5031              	.LBE389:
 5032              	.LBI388:
1328:./../bno055.c ****     if (imu->_page != page) {
 5033              		.loc 1 1328 11 is_stmt 1 view .LVU1348
 5034              	.LBB392:
1329:./../bno055.c ****         return BNO_OK;
 5035              		.loc 1 1329 5 view .LVU1349
 5036              	.LBE392:
 5037              	.LBE388:
1193:./../bno055.c ****     error_bno err;
 5038              		.loc 1 1193 57 is_stmt 0 view .LVU1350
 5039 0012 8946     		mov	r9, r1
 5040 0014 9046     		mov	r8, r2
 5041 0016 1E46     		mov	r6, r3
 5042              	.LBB394:
 5043              	.LBB393:
1329:./../bno055.c ****         return BNO_OK;
 5044              		.loc 1 1329 8 view .LVU1351
 5045 0018 15D1     		bne	.L258
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 5046              		.loc 1 1332 5 is_stmt 1 view .LVU1352
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 5047              		.loc 1 1335 5 view .LVU1353
1336:./../bno055.c ****     if (err != BNO_OK) {
 5048              		.loc 1 1336 5 view .LVU1354
 5049              	.LVL529:
 5050              	.LBB390:
 5051              	.LBI390:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5052              		.loc 1 1317 11 view .LVU1355
 5053              	.LBB391:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5054              		.loc 1 1319 5 view .LVU1356
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5055              		.loc 1 1320 5 view .LVU1357
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5056              		.loc 1 1320 11 is_stmt 0 view .LVU1358
 5057 001a 4FF0FF33 		mov	r3, #-1
 5058              	.LVL530:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5059              		.loc 1 1320 11 view .LVU1359
 5060 001e 0DF1170A 		add	r10, sp, #23
 5061              	.LVL531:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5062              		.loc 1 1320 11 view .LVU1360
 5063 0022 0293     		str	r3, [sp, #8]
 5064              	.LVL532:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5065              		.loc 1 1320 11 view .LVU1361
 5066 0024 0195     		str	r5, [sp, #4]
 5067 0026 CDF800A0 		str	r10, [sp]
ARM GAS  /tmp/cctFn18N.s 			page 134


 5068 002a A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5069              	.LVL533:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5070              		.loc 1 1320 11 view .LVU1362
 5071 002c 2068     		ldr	r0, [r4]
 5072              	.LVL534:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5073              		.loc 1 1320 11 view .LVU1363
 5074 002e 2B46     		mov	r3, r5
 5075 0030 0722     		movs	r2, #7
 5076              	.LVL535:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5077              		.loc 1 1320 11 view .LVU1364
 5078 0032 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5079              	.LVL536:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5080              		.loc 1 1322 5 is_stmt 1 view .LVU1365
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5081              		.loc 1 1322 8 is_stmt 0 view .LVU1366
 5082 0036 D0B9     		cbnz	r0, .L250
 5083              	.LVL537:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5084              		.loc 1 1322 8 view .LVU1367
 5085              	.LBE391:
 5086              	.LBE390:
1337:./../bno055.c ****         return err;
 5087              		.loc 1 1337 5 is_stmt 1 view .LVU1368
1340:./../bno055.c ****     HAL_Delay(2);
 5088              		.loc 1 1340 5 view .LVU1369
1340:./../bno055.c ****     HAL_Delay(2);
 5089              		.loc 1 1340 16 is_stmt 0 view .LVU1370
 5090 0038 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 5091 003c 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 5092              		.loc 1 1341 5 is_stmt 1 view .LVU1371
 5093 003e 0220     		movs	r0, #2
 5094 0040 FFF7FEFF 		bl	HAL_Delay
 5095              	.LVL538:
 5096              		.loc 1 1342 5 view .LVU1372
 5097              		.loc 1 1342 5 is_stmt 0 view .LVU1373
 5098 0044 01E0     		b	.L248
 5099              	.LVL539:
 5100              	.L258:
 5101              		.loc 1 1342 5 view .LVU1374
 5102 0046 0DF1170A 		add	r10, sp, #23
 5103              	.LVL540:
 5104              	.L248:
 5105              		.loc 1 1342 5 view .LVU1375
 5106              	.LBE393:
 5107              	.LBE394:
1198:./../bno055.c ****         return err;
 5108              		.loc 1 1198 5 is_stmt 1 view .LVU1376
 5109              	.LBB395:
 5110              	.LBB396:
 5111              	.LBB397:
 5112              	.LBB398:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
ARM GAS  /tmp/cctFn18N.s 			page 135


 5113              		.loc 1 1320 11 is_stmt 0 view .LVU1377
 5114 004a 0127     		movs	r7, #1
 5115 004c 4FF0FF3B 		mov	fp, #-1
 5116 0050 CDE9017B 		strd	r7, fp, [sp, #4]
 5117 0054 CDF800A0 		str	r10, [sp]
 5118 0058 0023     		movs	r3, #0
 5119 005a 8DF81730 		strb	r3, [sp, #23]
 5120              	.LVL541:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5121              		.loc 1 1320 11 view .LVU1378
 5122              	.LBE398:
 5123              	.LBE397:
 5124              	.LBE396:
 5125              	.LBI395:
1216:./../bno055.c ****     error_bno err;
 5126              		.loc 1 1216 11 is_stmt 1 view .LVU1379
 5127              	.LBB401:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 5128              		.loc 1 1217 5 view .LVU1380
1223:./../bno055.c ****         BNO_OK) {
 5129              		.loc 1 1223 5 view .LVU1381
 5130              	.LBB400:
 5131              	.LBI397:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5132              		.loc 1 1317 11 view .LVU1382
 5133              	.LBB399:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5134              		.loc 1 1319 5 view .LVU1383
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5135              		.loc 1 1320 5 view .LVU1384
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5136              		.loc 1 1320 11 is_stmt 0 view .LVU1385
 5137 005e A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5138 0060 2068     		ldr	r0, [r4]
 5139 0062 3B46     		mov	r3, r7
 5140              	.LVL542:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5141              		.loc 1 1320 11 view .LVU1386
 5142 0064 3D22     		movs	r2, #61
 5143 0066 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5144              	.LVL543:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5145              		.loc 1 1322 5 is_stmt 1 view .LVU1387
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5146              		.loc 1 1322 8 is_stmt 0 view .LVU1388
 5147 006a 20B1     		cbz	r0, .L251
 5148              	.LVL544:
 5149              	.L255:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5150              		.loc 1 1322 8 view .LVU1389
 5151              	.LBE399:
 5152              	.LBE400:
 5153              	.LBE401:
 5154              	.LBE395:
 5155              	.LBB403:
 5156              	.LBB404:
 5157              	.LBB405:
ARM GAS  /tmp/cctFn18N.s 			page 136


 5158              	.LBB406:
1323:./../bno055.c ****     }
 5159              		.loc 1 1323 16 view .LVU1390
 5160 006c 3D46     		mov	r5, r7
 5161              	.L250:
1323:./../bno055.c ****     }
 5162              		.loc 1 1323 16 view .LVU1391
 5163              	.LBE406:
 5164              	.LBE405:
 5165              	.LBE404:
 5166              	.LBE403:
1214:./../bno055.c **** 
 5167              		.loc 1 1214 1 view .LVU1392
 5168 006e 2846     		mov	r0, r5
 5169 0070 07B0     		add	sp, sp, #28
 5170              	.LCFI157:
 5171              		.cfi_remember_state
 5172              		.cfi_def_cfa_offset 36
 5173              		@ sp needed
 5174 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5175              	.LVL545:
 5176              	.L251:
 5177              	.LCFI158:
 5178              		.cfi_restore_state
 5179              	.LBB428:
 5180              	.LBB402:
1227:./../bno055.c ****     return BNO_OK;
 5181              		.loc 1 1227 5 is_stmt 1 view .LVU1393
 5182 0076 1820     		movs	r0, #24
 5183 0078 FFF7FEFF 		bl	HAL_Delay
 5184              	.LVL546:
1228:./../bno055.c **** }
 5185              		.loc 1 1228 5 view .LVU1394
1228:./../bno055.c **** }
 5186              		.loc 1 1228 5 is_stmt 0 view .LVU1395
 5187              	.LBE402:
 5188              	.LBE428:
 5189              	.LBB429:
 5190              	.LBI403:
1191:./../bno055.c ****                           const bno055_mag_pwr_t pwr_mode,
 5191              		.loc 1 1191 11 is_stmt 1 view .LVU1396
 5192              	.LBB427:
1201:./../bno055.c ****     u8 config = out_rate | pwr_mode | mode;
 5193              		.loc 1 1201 5 view .LVU1397
 5194 007c 0C20     		movs	r0, #12
 5195 007e FFF7FEFF 		bl	HAL_Delay
 5196              	.LVL547:
1202:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_MAG_CONFIG, &config, 1)) != BNO_OK) {
 5197              		.loc 1 1202 5 view .LVU1398
 5198              	.LBB411:
 5199              	.LBB407:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5200              		.loc 1 1320 11 is_stmt 0 view .LVU1399
 5201 0082 CDE9017B 		strd	r7, fp, [sp, #4]
 5202              	.LBE407:
 5203              	.LBE411:
1202:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_MAG_CONFIG, &config, 1)) != BNO_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 137


 5204              		.loc 1 1202 8 view .LVU1400
 5205 0086 48EA0602 		orr	r2, r8, r6
 5206              	.LBB412:
 5207              	.LBB408:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5208              		.loc 1 1320 11 view .LVU1401
 5209 008a 0DF11603 		add	r3, sp, #22
 5210              	.LBE408:
 5211              	.LBE412:
1202:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_MAG_CONFIG, &config, 1)) != BNO_OK) {
 5212              		.loc 1 1202 8 view .LVU1402
 5213 008e 49EA0201 		orr	r1, r9, r2
 5214              	.LBB413:
 5215              	.LBB409:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5216              		.loc 1 1320 11 view .LVU1403
 5217 0092 0093     		str	r3, [sp]
 5218              	.LBE409:
 5219              	.LBE413:
1202:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_MAG_CONFIG, &config, 1)) != BNO_OK) {
 5220              		.loc 1 1202 8 view .LVU1404
 5221 0094 8DF81610 		strb	r1, [sp, #22]
1203:./../bno055.c ****         return err;
 5222              		.loc 1 1203 5 is_stmt 1 view .LVU1405
 5223              	.LVL548:
 5224              	.LBB414:
 5225              	.LBI405:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5226              		.loc 1 1317 11 view .LVU1406
 5227              	.LBB410:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5228              		.loc 1 1319 5 view .LVU1407
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5229              		.loc 1 1320 5 view .LVU1408
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5230              		.loc 1 1320 11 is_stmt 0 view .LVU1409
 5231 0098 2068     		ldr	r0, [r4]
 5232 009a A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5233 009c 3B46     		mov	r3, r7
 5234              	.LVL549:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5235              		.loc 1 1320 11 view .LVU1410
 5236 009e 0922     		movs	r2, #9
 5237 00a0 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5238              	.LVL550:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5239              		.loc 1 1322 5 is_stmt 1 view .LVU1411
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5240              		.loc 1 1322 8 is_stmt 0 view .LVU1412
 5241 00a4 0028     		cmp	r0, #0
 5242 00a6 E1D1     		bne	.L255
 5243              	.LVL551:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5244              		.loc 1 1322 8 view .LVU1413
 5245              	.LBE410:
 5246              	.LBE414:
1206:./../bno055.c ****         return err;
ARM GAS  /tmp/cctFn18N.s 			page 138


 5247              		.loc 1 1206 5 is_stmt 1 view .LVU1414
1206:./../bno055.c ****         return err;
 5248              		.loc 1 1206 5 is_stmt 0 view .LVU1415
 5249 00a8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5250              	.LBB415:
 5251              	.LBB416:
 5252              	.LBB417:
 5253              	.LBB418:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5254              		.loc 1 1320 11 view .LVU1416
 5255 00aa CDF800A0 		str	r10, [sp]
 5256 00ae CDE9017B 		strd	r7, fp, [sp, #4]
 5257 00b2 8DF81730 		strb	r3, [sp, #23]
 5258              	.LVL552:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5259              		.loc 1 1320 11 view .LVU1417
 5260              	.LBE418:
 5261              	.LBE417:
 5262              	.LBE416:
 5263              	.LBI415:
1216:./../bno055.c ****     error_bno err;
 5264              		.loc 1 1216 11 is_stmt 1 view .LVU1418
 5265              	.LBB421:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 5266              		.loc 1 1217 5 view .LVU1419
1223:./../bno055.c ****         BNO_OK) {
 5267              		.loc 1 1223 5 view .LVU1420
 5268              	.LBB420:
 5269              	.LBI417:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5270              		.loc 1 1317 11 view .LVU1421
 5271              	.LBB419:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5272              		.loc 1 1319 5 view .LVU1422
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5273              		.loc 1 1320 5 view .LVU1423
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5274              		.loc 1 1320 11 is_stmt 0 view .LVU1424
 5275 00b6 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5276 00b8 2068     		ldr	r0, [r4]
 5277 00ba 3B46     		mov	r3, r7
 5278              	.LVL553:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5279              		.loc 1 1320 11 view .LVU1425
 5280 00bc 3D22     		movs	r2, #61
 5281 00be FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5282              	.LVL554:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5283              		.loc 1 1322 5 is_stmt 1 view .LVU1426
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5284              		.loc 1 1322 8 is_stmt 0 view .LVU1427
 5285 00c2 0546     		mov	r5, r0
 5286 00c4 0028     		cmp	r0, #0
 5287 00c6 D1D1     		bne	.L255
 5288              	.LVL555:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5289              		.loc 1 1322 8 view .LVU1428
ARM GAS  /tmp/cctFn18N.s 			page 139


 5290              	.LBE419:
 5291              	.LBE420:
1227:./../bno055.c ****     return BNO_OK;
 5292              		.loc 1 1227 5 is_stmt 1 view .LVU1429
 5293 00c8 1820     		movs	r0, #24
 5294 00ca FFF7FEFF 		bl	HAL_Delay
 5295              	.LVL556:
1228:./../bno055.c **** }
 5296              		.loc 1 1228 5 view .LVU1430
1228:./../bno055.c **** }
 5297              		.loc 1 1228 5 is_stmt 0 view .LVU1431
 5298              	.LBE421:
 5299              	.LBE415:
1209:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
 5300              		.loc 1 1209 5 is_stmt 1 view .LVU1432
 5301 00ce 1820     		movs	r0, #24
 5302 00d0 FFF7FEFF 		bl	HAL_Delay
 5303              	.LVL557:
1210:./../bno055.c ****         return err;
 5304              		.loc 1 1210 5 view .LVU1433
 5305              	.LBB422:
 5306              	.LBB423:
1329:./../bno055.c ****         return BNO_OK;
 5307              		.loc 1 1329 8 is_stmt 0 view .LVU1434
 5308 00d4 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 5309 00d6 8DF81750 		strb	r5, [sp, #23]
 5310              	.LVL558:
1329:./../bno055.c ****         return BNO_OK;
 5311              		.loc 1 1329 8 view .LVU1435
 5312              	.LBE423:
 5313              	.LBI422:
1328:./../bno055.c ****     if (imu->_page != page) {
 5314              		.loc 1 1328 11 is_stmt 1 view .LVU1436
 5315              	.LBB426:
1329:./../bno055.c ****         return BNO_OK;
 5316              		.loc 1 1329 5 view .LVU1437
1329:./../bno055.c ****         return BNO_OK;
 5317              		.loc 1 1329 8 is_stmt 0 view .LVU1438
 5318 00da 002B     		cmp	r3, #0
 5319 00dc C7D1     		bne	.L250
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 5320              		.loc 1 1332 5 is_stmt 1 view .LVU1439
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 5321              		.loc 1 1335 5 view .LVU1440
1336:./../bno055.c ****     if (err != BNO_OK) {
 5322              		.loc 1 1336 5 view .LVU1441
 5323              	.LVL559:
 5324              	.LBB424:
 5325              	.LBI424:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5326              		.loc 1 1317 11 view .LVU1442
 5327              	.LBB425:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5328              		.loc 1 1319 5 view .LVU1443
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5329              		.loc 1 1320 5 view .LVU1444
1320:./../bno055.c ****                             HAL_MAX_DELAY);
ARM GAS  /tmp/cctFn18N.s 			page 140


 5330              		.loc 1 1320 11 is_stmt 0 view .LVU1445
 5331 00de A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5332 00e0 CDF800A0 		str	r10, [sp]
 5333              	.LVL560:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5334              		.loc 1 1320 11 view .LVU1446
 5335 00e4 CDE9017B 		strd	r7, fp, [sp, #4]
 5336 00e8 3B46     		mov	r3, r7
 5337 00ea 2068     		ldr	r0, [r4]
 5338 00ec 0722     		movs	r2, #7
 5339 00ee FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5340              	.LVL561:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5341              		.loc 1 1322 5 is_stmt 1 view .LVU1447
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5342              		.loc 1 1322 8 is_stmt 0 view .LVU1448
 5343 00f2 0546     		mov	r5, r0
 5344              	.LVL562:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5345              		.loc 1 1322 8 view .LVU1449
 5346 00f4 0028     		cmp	r0, #0
 5347 00f6 B9D1     		bne	.L255
 5348              	.LVL563:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5349              		.loc 1 1322 8 view .LVU1450
 5350              	.LBE425:
 5351              	.LBE424:
1337:./../bno055.c ****         return err;
 5352              		.loc 1 1337 5 is_stmt 1 view .LVU1451
1340:./../bno055.c ****     HAL_Delay(2);
 5353              		.loc 1 1340 5 view .LVU1452
1340:./../bno055.c ****     HAL_Delay(2);
 5354              		.loc 1 1340 16 is_stmt 0 view .LVU1453
 5355 00f8 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 5356 00fc 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 5357              		.loc 1 1341 5 is_stmt 1 view .LVU1454
 5358 00fe 0220     		movs	r0, #2
 5359 0100 FFF7FEFF 		bl	HAL_Delay
 5360              	.LVL564:
 5361              		.loc 1 1342 5 view .LVU1455
 5362              		.loc 1 1342 12 is_stmt 0 view .LVU1456
 5363 0104 B3E7     		b	.L250
 5364              	.LBE426:
 5365              	.LBE422:
 5366              	.LBE427:
 5367              	.LBE429:
 5368              		.cfi_endproc
 5369              	.LFE166:
 5371 0106 00BF     		.section	.text.bno055_acc_conf,"ax",%progbits
 5372              		.align	1
 5373              		.p2align 2,,3
 5374              		.global	bno055_acc_conf
 5375              		.syntax unified
 5376              		.thumb
 5377              		.thumb_func
 5378              		.fpu fpv4-sp-d16
ARM GAS  /tmp/cctFn18N.s 			page 141


 5380              	bno055_acc_conf:
 5381              	.LVL565:
 5382              	.LFB164:
1143:./../bno055.c ****     error_bno err;
 5383              		.loc 1 1143 57 is_stmt 1 view -0
 5384              		.cfi_startproc
 5385              		@ args = 0, pretend = 0, frame = 8
 5386              		@ frame_needed = 0, uses_anonymous_args = 0
1144:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_1)) != BNO_OK) {
 5387              		.loc 1 1144 5 view .LVU1458
1145:./../bno055.c ****         return err;
 5388              		.loc 1 1145 5 view .LVU1459
1143:./../bno055.c ****     error_bno err;
 5389              		.loc 1 1143 57 is_stmt 0 view .LVU1460
 5390 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5391              	.LCFI159:
 5392              		.cfi_def_cfa_offset 36
 5393              		.cfi_offset 4, -36
 5394              		.cfi_offset 5, -32
 5395              		.cfi_offset 6, -28
 5396              		.cfi_offset 7, -24
 5397              		.cfi_offset 8, -20
 5398              		.cfi_offset 9, -16
 5399              		.cfi_offset 10, -12
 5400              		.cfi_offset 11, -8
 5401              		.cfi_offset 14, -4
 5402 0004 0446     		mov	r4, r0
 5403              	.LVL566:
1143:./../bno055.c ****     error_bno err;
 5404              		.loc 1 1143 57 view .LVU1461
 5405 0006 87B0     		sub	sp, sp, #28
 5406              	.LCFI160:
 5407              		.cfi_def_cfa_offset 64
 5408              	.LBB450:
 5409              	.LBB451:
1329:./../bno055.c ****         return BNO_OK;
 5410              		.loc 1 1329 12 view .LVU1462
 5411 0008 657B     		ldrb	r5, [r4, #13]	@ zero_extendqisi2
 5412 000a 0120     		movs	r0, #1
 5413              	.LVL567:
1329:./../bno055.c ****         return BNO_OK;
 5414              		.loc 1 1329 8 view .LVU1463
 5415 000c 8542     		cmp	r5, r0
 5416 000e 8DF81700 		strb	r0, [sp, #23]
 5417              	.LVL568:
1329:./../bno055.c ****         return BNO_OK;
 5418              		.loc 1 1329 8 view .LVU1464
 5419              	.LBE451:
 5420              	.LBI450:
1328:./../bno055.c ****     if (imu->_page != page) {
 5421              		.loc 1 1328 11 is_stmt 1 view .LVU1465
 5422              	.LBB454:
1329:./../bno055.c ****         return BNO_OK;
 5423              		.loc 1 1329 5 view .LVU1466
 5424              	.LBE454:
 5425              	.LBE450:
1143:./../bno055.c ****     error_bno err;
ARM GAS  /tmp/cctFn18N.s 			page 142


 5426              		.loc 1 1143 57 is_stmt 0 view .LVU1467
 5427 0012 8946     		mov	r9, r1
 5428 0014 9046     		mov	r8, r2
 5429 0016 1E46     		mov	r6, r3
 5430              	.LBB456:
 5431              	.LBB455:
1329:./../bno055.c ****         return BNO_OK;
 5432              		.loc 1 1329 8 view .LVU1468
 5433 0018 15D1     		bne	.L271
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 5434              		.loc 1 1332 5 is_stmt 1 view .LVU1469
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 5435              		.loc 1 1335 5 view .LVU1470
1336:./../bno055.c ****     if (err != BNO_OK) {
 5436              		.loc 1 1336 5 view .LVU1471
 5437              	.LVL569:
 5438              	.LBB452:
 5439              	.LBI452:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5440              		.loc 1 1317 11 view .LVU1472
 5441              	.LBB453:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5442              		.loc 1 1319 5 view .LVU1473
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5443              		.loc 1 1320 5 view .LVU1474
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5444              		.loc 1 1320 11 is_stmt 0 view .LVU1475
 5445 001a 4FF0FF33 		mov	r3, #-1
 5446              	.LVL570:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5447              		.loc 1 1320 11 view .LVU1476
 5448 001e 0DF1170A 		add	r10, sp, #23
 5449              	.LVL571:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5450              		.loc 1 1320 11 view .LVU1477
 5451 0022 0293     		str	r3, [sp, #8]
 5452              	.LVL572:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5453              		.loc 1 1320 11 view .LVU1478
 5454 0024 0195     		str	r5, [sp, #4]
 5455 0026 CDF800A0 		str	r10, [sp]
 5456 002a A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5457              	.LVL573:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5458              		.loc 1 1320 11 view .LVU1479
 5459 002c 2068     		ldr	r0, [r4]
 5460              	.LVL574:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5461              		.loc 1 1320 11 view .LVU1480
 5462 002e 2B46     		mov	r3, r5
 5463 0030 0722     		movs	r2, #7
 5464              	.LVL575:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5465              		.loc 1 1320 11 view .LVU1481
 5466 0032 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5467              	.LVL576:
1322:./../bno055.c ****         return BNO_ERR_I2C;
ARM GAS  /tmp/cctFn18N.s 			page 143


 5468              		.loc 1 1322 5 is_stmt 1 view .LVU1482
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5469              		.loc 1 1322 8 is_stmt 0 view .LVU1483
 5470 0036 D0B9     		cbnz	r0, .L263
 5471              	.LVL577:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5472              		.loc 1 1322 8 view .LVU1484
 5473              	.LBE453:
 5474              	.LBE452:
1337:./../bno055.c ****         return err;
 5475              		.loc 1 1337 5 is_stmt 1 view .LVU1485
1340:./../bno055.c ****     HAL_Delay(2);
 5476              		.loc 1 1340 5 view .LVU1486
1340:./../bno055.c ****     HAL_Delay(2);
 5477              		.loc 1 1340 16 is_stmt 0 view .LVU1487
 5478 0038 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 5479 003c 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 5480              		.loc 1 1341 5 is_stmt 1 view .LVU1488
 5481 003e 0220     		movs	r0, #2
 5482 0040 FFF7FEFF 		bl	HAL_Delay
 5483              	.LVL578:
 5484              		.loc 1 1342 5 view .LVU1489
 5485              		.loc 1 1342 5 is_stmt 0 view .LVU1490
 5486 0044 01E0     		b	.L261
 5487              	.LVL579:
 5488              	.L271:
 5489              		.loc 1 1342 5 view .LVU1491
 5490 0046 0DF1170A 		add	r10, sp, #23
 5491              	.LVL580:
 5492              	.L261:
 5493              		.loc 1 1342 5 view .LVU1492
 5494              	.LBE455:
 5495              	.LBE456:
1148:./../bno055.c ****         return err;
 5496              		.loc 1 1148 5 is_stmt 1 view .LVU1493
 5497              	.LBB457:
 5498              	.LBB458:
 5499              	.LBB459:
 5500              	.LBB460:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5501              		.loc 1 1320 11 is_stmt 0 view .LVU1494
 5502 004a 0127     		movs	r7, #1
 5503 004c 4FF0FF3B 		mov	fp, #-1
 5504 0050 CDE9017B 		strd	r7, fp, [sp, #4]
 5505 0054 CDF800A0 		str	r10, [sp]
 5506 0058 0023     		movs	r3, #0
 5507 005a 8DF81730 		strb	r3, [sp, #23]
 5508              	.LVL581:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5509              		.loc 1 1320 11 view .LVU1495
 5510              	.LBE460:
 5511              	.LBE459:
 5512              	.LBE458:
 5513              	.LBI457:
1216:./../bno055.c ****     error_bno err;
 5514              		.loc 1 1216 11 is_stmt 1 view .LVU1496
ARM GAS  /tmp/cctFn18N.s 			page 144


 5515              	.LBB463:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 5516              		.loc 1 1217 5 view .LVU1497
1223:./../bno055.c ****         BNO_OK) {
 5517              		.loc 1 1223 5 view .LVU1498
 5518              	.LBB462:
 5519              	.LBI459:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5520              		.loc 1 1317 11 view .LVU1499
 5521              	.LBB461:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5522              		.loc 1 1319 5 view .LVU1500
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5523              		.loc 1 1320 5 view .LVU1501
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5524              		.loc 1 1320 11 is_stmt 0 view .LVU1502
 5525 005e A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5526 0060 2068     		ldr	r0, [r4]
 5527 0062 3B46     		mov	r3, r7
 5528              	.LVL582:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5529              		.loc 1 1320 11 view .LVU1503
 5530 0064 3D22     		movs	r2, #61
 5531 0066 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5532              	.LVL583:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5533              		.loc 1 1322 5 is_stmt 1 view .LVU1504
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5534              		.loc 1 1322 8 is_stmt 0 view .LVU1505
 5535 006a 20B1     		cbz	r0, .L264
 5536              	.LVL584:
 5537              	.L268:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5538              		.loc 1 1322 8 view .LVU1506
 5539              	.LBE461:
 5540              	.LBE462:
 5541              	.LBE463:
 5542              	.LBE457:
 5543              	.LBB465:
 5544              	.LBB466:
 5545              	.LBB467:
 5546              	.LBB468:
1323:./../bno055.c ****     }
 5547              		.loc 1 1323 16 view .LVU1507
 5548 006c 3D46     		mov	r5, r7
 5549              	.L263:
1323:./../bno055.c ****     }
 5550              		.loc 1 1323 16 view .LVU1508
 5551              	.LBE468:
 5552              	.LBE467:
 5553              	.LBE466:
 5554              	.LBE465:
1164:./../bno055.c **** 
 5555              		.loc 1 1164 1 view .LVU1509
 5556 006e 2846     		mov	r0, r5
 5557 0070 07B0     		add	sp, sp, #28
 5558              	.LCFI161:
ARM GAS  /tmp/cctFn18N.s 			page 145


 5559              		.cfi_remember_state
 5560              		.cfi_def_cfa_offset 36
 5561              		@ sp needed
 5562 0072 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 5563              	.LVL585:
 5564              	.L264:
 5565              	.LCFI162:
 5566              		.cfi_restore_state
 5567              	.LBB490:
 5568              	.LBB464:
1227:./../bno055.c ****     return BNO_OK;
 5569              		.loc 1 1227 5 is_stmt 1 view .LVU1510
 5570 0076 1820     		movs	r0, #24
 5571 0078 FFF7FEFF 		bl	HAL_Delay
 5572              	.LVL586:
1228:./../bno055.c **** }
 5573              		.loc 1 1228 5 view .LVU1511
1228:./../bno055.c **** }
 5574              		.loc 1 1228 5 is_stmt 0 view .LVU1512
 5575              	.LBE464:
 5576              	.LBE490:
 5577              	.LBB491:
 5578              	.LBI465:
1141:./../bno055.c ****                           const bno055_acc_band_t bandwidth,
 5579              		.loc 1 1141 11 is_stmt 1 view .LVU1513
 5580              	.LBB489:
1151:./../bno055.c ****     u8 config = range | bandwidth | mode;
 5581              		.loc 1 1151 5 view .LVU1514
 5582 007c 0C20     		movs	r0, #12
 5583 007e FFF7FEFF 		bl	HAL_Delay
 5584              	.LVL587:
1152:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_ACC_CONFIG, &config, 1)) != BNO_OK) {
 5585              		.loc 1 1152 5 view .LVU1515
 5586              	.LBB473:
 5587              	.LBB469:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5588              		.loc 1 1320 11 is_stmt 0 view .LVU1516
 5589 0082 CDE9017B 		strd	r7, fp, [sp, #4]
 5590              	.LBE469:
 5591              	.LBE473:
1152:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_ACC_CONFIG, &config, 1)) != BNO_OK) {
 5592              		.loc 1 1152 8 view .LVU1517
 5593 0086 48EA0602 		orr	r2, r8, r6
 5594              	.LBB474:
 5595              	.LBB470:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5596              		.loc 1 1320 11 view .LVU1518
 5597 008a 0DF11603 		add	r3, sp, #22
 5598              	.LBE470:
 5599              	.LBE474:
1152:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_ACC_CONFIG, &config, 1)) != BNO_OK) {
 5600              		.loc 1 1152 8 view .LVU1519
 5601 008e 49EA0201 		orr	r1, r9, r2
 5602              	.LBB475:
 5603              	.LBB471:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5604              		.loc 1 1320 11 view .LVU1520
ARM GAS  /tmp/cctFn18N.s 			page 146


 5605 0092 0093     		str	r3, [sp]
 5606              	.LBE471:
 5607              	.LBE475:
1152:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_ACC_CONFIG, &config, 1)) != BNO_OK) {
 5608              		.loc 1 1152 8 view .LVU1521
 5609 0094 8DF81610 		strb	r1, [sp, #22]
1153:./../bno055.c ****         return err;
 5610              		.loc 1 1153 5 is_stmt 1 view .LVU1522
 5611              	.LVL588:
 5612              	.LBB476:
 5613              	.LBI467:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5614              		.loc 1 1317 11 view .LVU1523
 5615              	.LBB472:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5616              		.loc 1 1319 5 view .LVU1524
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5617              		.loc 1 1320 5 view .LVU1525
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5618              		.loc 1 1320 11 is_stmt 0 view .LVU1526
 5619 0098 2068     		ldr	r0, [r4]
 5620 009a A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5621 009c 3B46     		mov	r3, r7
 5622              	.LVL589:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5623              		.loc 1 1320 11 view .LVU1527
 5624 009e 0822     		movs	r2, #8
 5625 00a0 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5626              	.LVL590:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5627              		.loc 1 1322 5 is_stmt 1 view .LVU1528
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5628              		.loc 1 1322 8 is_stmt 0 view .LVU1529
 5629 00a4 0028     		cmp	r0, #0
 5630 00a6 E1D1     		bne	.L268
 5631              	.LVL591:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5632              		.loc 1 1322 8 view .LVU1530
 5633              	.LBE472:
 5634              	.LBE476:
1156:./../bno055.c ****         return err;
 5635              		.loc 1 1156 5 is_stmt 1 view .LVU1531
1156:./../bno055.c ****         return err;
 5636              		.loc 1 1156 5 is_stmt 0 view .LVU1532
 5637 00a8 2379     		ldrb	r3, [r4, #4]	@ zero_extendqisi2
 5638              	.LBB477:
 5639              	.LBB478:
 5640              	.LBB479:
 5641              	.LBB480:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5642              		.loc 1 1320 11 view .LVU1533
 5643 00aa CDF800A0 		str	r10, [sp]
 5644 00ae CDE9017B 		strd	r7, fp, [sp, #4]
 5645 00b2 8DF81730 		strb	r3, [sp, #23]
 5646              	.LVL592:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5647              		.loc 1 1320 11 view .LVU1534
ARM GAS  /tmp/cctFn18N.s 			page 147


 5648              	.LBE480:
 5649              	.LBE479:
 5650              	.LBE478:
 5651              	.LBI477:
1216:./../bno055.c ****     error_bno err;
 5652              		.loc 1 1216 11 is_stmt 1 view .LVU1535
 5653              	.LBB483:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 5654              		.loc 1 1217 5 view .LVU1536
1223:./../bno055.c ****         BNO_OK) {
 5655              		.loc 1 1223 5 view .LVU1537
 5656              	.LBB482:
 5657              	.LBI479:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5658              		.loc 1 1317 11 view .LVU1538
 5659              	.LBB481:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5660              		.loc 1 1319 5 view .LVU1539
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5661              		.loc 1 1320 5 view .LVU1540
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5662              		.loc 1 1320 11 is_stmt 0 view .LVU1541
 5663 00b6 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5664 00b8 2068     		ldr	r0, [r4]
 5665 00ba 3B46     		mov	r3, r7
 5666              	.LVL593:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5667              		.loc 1 1320 11 view .LVU1542
 5668 00bc 3D22     		movs	r2, #61
 5669 00be FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5670              	.LVL594:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5671              		.loc 1 1322 5 is_stmt 1 view .LVU1543
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5672              		.loc 1 1322 8 is_stmt 0 view .LVU1544
 5673 00c2 0546     		mov	r5, r0
 5674 00c4 0028     		cmp	r0, #0
 5675 00c6 D1D1     		bne	.L268
 5676              	.LVL595:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5677              		.loc 1 1322 8 view .LVU1545
 5678              	.LBE481:
 5679              	.LBE482:
1227:./../bno055.c ****     return BNO_OK;
 5680              		.loc 1 1227 5 is_stmt 1 view .LVU1546
 5681 00c8 1820     		movs	r0, #24
 5682 00ca FFF7FEFF 		bl	HAL_Delay
 5683              	.LVL596:
1228:./../bno055.c **** }
 5684              		.loc 1 1228 5 view .LVU1547
1228:./../bno055.c **** }
 5685              		.loc 1 1228 5 is_stmt 0 view .LVU1548
 5686              	.LBE483:
 5687              	.LBE477:
1159:./../bno055.c ****     if ((err = bno055_set_page(bno, BNO_PAGE_0)) != BNO_OK) {
 5688              		.loc 1 1159 5 is_stmt 1 view .LVU1549
 5689 00ce 1820     		movs	r0, #24
ARM GAS  /tmp/cctFn18N.s 			page 148


 5690 00d0 FFF7FEFF 		bl	HAL_Delay
 5691              	.LVL597:
1160:./../bno055.c ****         return err;
 5692              		.loc 1 1160 5 view .LVU1550
 5693              	.LBB484:
 5694              	.LBB485:
1329:./../bno055.c ****         return BNO_OK;
 5695              		.loc 1 1329 8 is_stmt 0 view .LVU1551
 5696 00d4 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 5697 00d6 8DF81750 		strb	r5, [sp, #23]
 5698              	.LVL598:
1329:./../bno055.c ****         return BNO_OK;
 5699              		.loc 1 1329 8 view .LVU1552
 5700              	.LBE485:
 5701              	.LBI484:
1328:./../bno055.c ****     if (imu->_page != page) {
 5702              		.loc 1 1328 11 is_stmt 1 view .LVU1553
 5703              	.LBB488:
1329:./../bno055.c ****         return BNO_OK;
 5704              		.loc 1 1329 5 view .LVU1554
1329:./../bno055.c ****         return BNO_OK;
 5705              		.loc 1 1329 8 is_stmt 0 view .LVU1555
 5706 00da 002B     		cmp	r3, #0
 5707 00dc C7D1     		bne	.L263
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 5708              		.loc 1 1332 5 is_stmt 1 view .LVU1556
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 5709              		.loc 1 1335 5 view .LVU1557
1336:./../bno055.c ****     if (err != BNO_OK) {
 5710              		.loc 1 1336 5 view .LVU1558
 5711              	.LVL599:
 5712              	.LBB486:
 5713              	.LBI486:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5714              		.loc 1 1317 11 view .LVU1559
 5715              	.LBB487:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5716              		.loc 1 1319 5 view .LVU1560
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5717              		.loc 1 1320 5 view .LVU1561
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5718              		.loc 1 1320 11 is_stmt 0 view .LVU1562
 5719 00de A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 5720 00e0 CDF800A0 		str	r10, [sp]
 5721              	.LVL600:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5722              		.loc 1 1320 11 view .LVU1563
 5723 00e4 CDE9017B 		strd	r7, fp, [sp, #4]
 5724 00e8 3B46     		mov	r3, r7
 5725 00ea 2068     		ldr	r0, [r4]
 5726 00ec 0722     		movs	r2, #7
 5727 00ee FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5728              	.LVL601:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5729              		.loc 1 1322 5 is_stmt 1 view .LVU1564
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5730              		.loc 1 1322 8 is_stmt 0 view .LVU1565
ARM GAS  /tmp/cctFn18N.s 			page 149


 5731 00f2 0546     		mov	r5, r0
 5732              	.LVL602:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5733              		.loc 1 1322 8 view .LVU1566
 5734 00f4 0028     		cmp	r0, #0
 5735 00f6 B9D1     		bne	.L268
 5736              	.LVL603:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5737              		.loc 1 1322 8 view .LVU1567
 5738              	.LBE487:
 5739              	.LBE486:
1337:./../bno055.c ****         return err;
 5740              		.loc 1 1337 5 is_stmt 1 view .LVU1568
1340:./../bno055.c ****     HAL_Delay(2);
 5741              		.loc 1 1340 5 view .LVU1569
1340:./../bno055.c ****     HAL_Delay(2);
 5742              		.loc 1 1340 16 is_stmt 0 view .LVU1570
 5743 00f8 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 5744 00fc 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 5745              		.loc 1 1341 5 is_stmt 1 view .LVU1571
 5746 00fe 0220     		movs	r0, #2
 5747 0100 FFF7FEFF 		bl	HAL_Delay
 5748              	.LVL604:
 5749              		.loc 1 1342 5 view .LVU1572
 5750              		.loc 1 1342 12 is_stmt 0 view .LVU1573
 5751 0104 B3E7     		b	.L263
 5752              	.LBE488:
 5753              	.LBE484:
 5754              	.LBE489:
 5755              	.LBE491:
 5756              		.cfi_endproc
 5757              	.LFE164:
 5759 0106 00BF     		.section	.text.bno055_set_opmode,"ax",%progbits
 5760              		.align	1
 5761              		.p2align 2,,3
 5762              		.global	bno055_set_opmode
 5763              		.syntax unified
 5764              		.thumb
 5765              		.thumb_func
 5766              		.fpu fpv4-sp-d16
 5768              	bno055_set_opmode:
 5769              	.LVL605:
 5770              	.LFB167:
1216:./../bno055.c ****     error_bno err;
 5771              		.loc 1 1216 74 is_stmt 1 view -0
 5772              		.cfi_startproc
 5773              		@ args = 0, pretend = 0, frame = 8
 5774              		@ frame_needed = 0, uses_anonymous_args = 0
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 5775              		.loc 1 1217 5 view .LVU1575
1223:./../bno055.c ****         BNO_OK) {
 5776              		.loc 1 1223 5 view .LVU1576
1216:./../bno055.c ****     error_bno err;
 5777              		.loc 1 1216 74 is_stmt 0 view .LVU1577
 5778 0000 30B5     		push	{r4, r5, lr}
 5779              	.LCFI163:
ARM GAS  /tmp/cctFn18N.s 			page 150


 5780              		.cfi_def_cfa_offset 12
 5781              		.cfi_offset 4, -12
 5782              		.cfi_offset 5, -8
 5783              		.cfi_offset 14, -4
 5784              	.LBB494:
 5785              	.LBB495:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5786              		.loc 1 1320 11 view .LVU1578
 5787 0002 4FF0FF32 		mov	r2, #-1
 5788              	.LBE495:
 5789              	.LBE494:
1216:./../bno055.c ****     error_bno err;
 5790              		.loc 1 1216 74 view .LVU1579
 5791 0006 87B0     		sub	sp, sp, #28
 5792              	.LCFI164:
 5793              		.cfi_def_cfa_offset 40
 5794              	.LVL606:
 5795              	.LBB499:
 5796              	.LBI494:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5797              		.loc 1 1317 11 is_stmt 1 view .LVU1580
 5798              	.LBB496:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5799              		.loc 1 1319 5 view .LVU1581
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5800              		.loc 1 1320 5 view .LVU1582
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5801              		.loc 1 1320 11 is_stmt 0 view .LVU1583
 5802 0008 0125     		movs	r5, #1
 5803 000a CDE90152 		strd	r5, r2, [sp, #4]
 5804              	.LVL607:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5805              		.loc 1 1320 11 view .LVU1584
 5806 000e 0DF11703 		add	r3, sp, #23
 5807              	.LVL608:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5808              		.loc 1 1320 11 view .LVU1585
 5809 0012 0093     		str	r3, [sp]
 5810              	.LBE496:
 5811              	.LBE499:
1216:./../bno055.c ****     error_bno err;
 5812              		.loc 1 1216 74 view .LVU1586
 5813 0014 8DF81710 		strb	r1, [sp, #23]
 5814              	.LBB500:
 5815              	.LBB497:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5816              		.loc 1 1320 11 view .LVU1587
 5817 0018 2B46     		mov	r3, r5
 5818              	.LVL609:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5819              		.loc 1 1320 11 view .LVU1588
 5820 001a 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 5821              	.LVL610:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5822              		.loc 1 1320 11 view .LVU1589
 5823 001c 0068     		ldr	r0, [r0]
 5824              	.LVL611:
ARM GAS  /tmp/cctFn18N.s 			page 151


1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5825              		.loc 1 1320 11 view .LVU1590
 5826 001e 3D22     		movs	r2, #61
 5827 0020 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5828              	.LVL612:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5829              		.loc 1 1322 5 is_stmt 1 view .LVU1591
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5830              		.loc 1 1322 8 is_stmt 0 view .LVU1592
 5831 0024 30B9     		cbnz	r0, .L274
 5832 0026 0446     		mov	r4, r0
 5833              	.LVL613:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5834              		.loc 1 1322 8 view .LVU1593
 5835              	.LBE497:
 5836              	.LBE500:
1227:./../bno055.c ****     return BNO_OK;
 5837              		.loc 1 1227 5 is_stmt 1 view .LVU1594
 5838 0028 1820     		movs	r0, #24
 5839 002a FFF7FEFF 		bl	HAL_Delay
 5840              	.LVL614:
1228:./../bno055.c **** }
 5841              		.loc 1 1228 5 view .LVU1595
1229:./../bno055.c **** 
 5842              		.loc 1 1229 1 is_stmt 0 view .LVU1596
 5843 002e 2046     		mov	r0, r4
 5844 0030 07B0     		add	sp, sp, #28
 5845              	.LCFI165:
 5846              		.cfi_remember_state
 5847              		.cfi_def_cfa_offset 12
 5848              		@ sp needed
 5849 0032 30BD     		pop	{r4, r5, pc}
 5850              	.LVL615:
 5851              	.L274:
 5852              	.LCFI166:
 5853              		.cfi_restore_state
 5854              	.LBB501:
 5855              	.LBB498:
1323:./../bno055.c ****     }
 5856              		.loc 1 1323 16 view .LVU1597
 5857 0034 2C46     		mov	r4, r5
 5858              	.LVL616:
1323:./../bno055.c ****     }
 5859              		.loc 1 1323 16 view .LVU1598
 5860              	.LBE498:
 5861              	.LBE501:
1229:./../bno055.c **** 
 5862              		.loc 1 1229 1 view .LVU1599
 5863 0036 2046     		mov	r0, r4
 5864 0038 07B0     		add	sp, sp, #28
 5865              	.LCFI167:
 5866              		.cfi_def_cfa_offset 12
 5867              		@ sp needed
 5868 003a 30BD     		pop	{r4, r5, pc}
 5869              		.cfi_endproc
 5870              	.LFE167:
 5872              		.section	.text.bno055_set_unit,"ax",%progbits
ARM GAS  /tmp/cctFn18N.s 			page 152


 5873              		.align	1
 5874              		.p2align 2,,3
 5875              		.global	bno055_set_unit
 5876              		.syntax unified
 5877              		.thumb
 5878              		.thumb_func
 5879              		.fpu fpv4-sp-d16
 5881              	bno055_set_unit:
 5882              	.LVL617:
 5883              	.LFB168:
1234:./../bno055.c ****     error_bno err;
 5884              		.loc 1 1234 62 is_stmt 1 view -0
 5885              		.cfi_startproc
 5886              		@ args = 4, pretend = 0, frame = 8
 5887              		@ frame_needed = 0, uses_anonymous_args = 0
1235:./../bno055.c ****     if ((err = bno055_set_opmode(bno, BNO_MODE_CONFIG)) != BNO_OK) {
 5888              		.loc 1 1235 5 view .LVU1601
1236:./../bno055.c ****         return err;
 5889              		.loc 1 1236 5 view .LVU1602
1234:./../bno055.c ****     error_bno err;
 5890              		.loc 1 1234 62 is_stmt 0 view .LVU1603
 5891 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 5892              	.LCFI168:
 5893              		.cfi_def_cfa_offset 36
 5894              		.cfi_offset 4, -36
 5895              		.cfi_offset 5, -32
 5896              		.cfi_offset 6, -28
 5897              		.cfi_offset 7, -24
 5898              		.cfi_offset 8, -20
 5899              		.cfi_offset 9, -16
 5900              		.cfi_offset 10, -12
 5901              		.cfi_offset 11, -8
 5902              		.cfi_offset 14, -4
 5903              	.LBB516:
 5904              	.LBB517:
 5905              	.LBB518:
 5906              	.LBB519:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5907              		.loc 1 1320 11 view .LVU1604
 5908 0004 0125     		movs	r5, #1
 5909              	.LBE519:
 5910              	.LBE518:
 5911              	.LBE517:
 5912              	.LBE516:
1234:./../bno055.c ****     error_bno err;
 5913              		.loc 1 1234 62 view .LVU1605
 5914 0006 87B0     		sub	sp, sp, #28
 5915              	.LCFI169:
 5916              		.cfi_def_cfa_offset 64
 5917              	.LBB535:
 5918              	.LBB530:
 5919              	.LBB525:
 5920              	.LBB520:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5921              		.loc 1 1320 11 view .LVU1606
 5922 0008 4FF0FF3A 		mov	r10, #-1
 5923 000c CDE9015A 		strd	r5, r10, [sp, #4]
ARM GAS  /tmp/cctFn18N.s 			page 153


 5924              	.LBE520:
 5925              	.LBE525:
 5926              	.LBE530:
 5927              	.LBE535:
1234:./../bno055.c ****     error_bno err;
 5928              		.loc 1 1234 62 view .LVU1607
 5929 0010 9846     		mov	r8, r3
 5930              	.LBB536:
 5931              	.LBB531:
 5932              	.LBB526:
 5933              	.LBB521:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5934              		.loc 1 1320 11 view .LVU1608
 5935 0012 0DF11703 		add	r3, sp, #23
 5936              	.LVL618:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5937              		.loc 1 1320 11 view .LVU1609
 5938 0016 0093     		str	r3, [sp]
 5939 0018 0023     		movs	r3, #0
 5940              	.LBE521:
 5941              	.LBE526:
 5942              	.LBE531:
 5943              	.LBE536:
1234:./../bno055.c ****     error_bno err;
 5944              		.loc 1 1234 62 view .LVU1610
 5945 001a 0446     		mov	r4, r0
 5946              	.LVL619:
1234:./../bno055.c ****     error_bno err;
 5947              		.loc 1 1234 62 view .LVU1611
 5948 001c 0F46     		mov	r7, r1
 5949 001e 9146     		mov	r9, r2
 5950              	.LBB537:
 5951              	.LBB532:
 5952              	.LBB527:
 5953              	.LBB522:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5954              		.loc 1 1320 11 view .LVU1612
 5955 0020 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 5956              	.LVL620:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5957              		.loc 1 1320 11 view .LVU1613
 5958 0022 8DF81730 		strb	r3, [sp, #23]
 5959              	.LVL621:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5960              		.loc 1 1320 11 view .LVU1614
 5961              	.LBE522:
 5962              	.LBE527:
 5963              	.LBE532:
 5964              	.LBI516:
1216:./../bno055.c ****     error_bno err;
 5965              		.loc 1 1216 11 is_stmt 1 view .LVU1615
 5966              	.LBB533:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 5967              		.loc 1 1217 5 view .LVU1616
1223:./../bno055.c ****         BNO_OK) {
 5968              		.loc 1 1223 5 view .LVU1617
 5969              	.LBB528:
ARM GAS  /tmp/cctFn18N.s 			page 154


 5970              	.LBI518:
1317:./../bno055.c ****                             uint32_t buf_size) {
 5971              		.loc 1 1317 11 view .LVU1618
 5972              	.LBB523:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 5973              		.loc 1 1319 5 view .LVU1619
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5974              		.loc 1 1320 5 view .LVU1620
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5975              		.loc 1 1320 11 is_stmt 0 view .LVU1621
 5976 0026 0068     		ldr	r0, [r0]
 5977              	.LVL622:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5978              		.loc 1 1320 11 view .LVU1622
 5979              	.LBE523:
 5980              	.LBE528:
 5981              	.LBE533:
 5982              	.LBE537:
1234:./../bno055.c ****     error_bno err;
 5983              		.loc 1 1234 62 view .LVU1623
 5984 0028 9DF840B0 		ldrb	fp, [sp, #64]	@ zero_extendqisi2
 5985              	.LBB538:
 5986              	.LBB534:
 5987              	.LBB529:
 5988              	.LBB524:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5989              		.loc 1 1320 11 view .LVU1624
 5990 002c 2B46     		mov	r3, r5
 5991              	.LVL623:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5992              		.loc 1 1320 11 view .LVU1625
 5993 002e 3D22     		movs	r2, #61
 5994              	.LVL624:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 5995              		.loc 1 1320 11 view .LVU1626
 5996 0030 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 5997              	.LVL625:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5998              		.loc 1 1322 5 is_stmt 1 view .LVU1627
1322:./../bno055.c ****         return BNO_ERR_I2C;
 5999              		.loc 1 1322 8 is_stmt 0 view .LVU1628
 6000 0034 0028     		cmp	r0, #0
 6001 0036 49D1     		bne	.L280
 6002              	.LVL626:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6003              		.loc 1 1322 8 view .LVU1629
 6004              	.LBE524:
 6005              	.LBE529:
1227:./../bno055.c ****     return BNO_OK;
 6006              		.loc 1 1227 5 is_stmt 1 view .LVU1630
 6007 0038 0646     		mov	r6, r0
 6008 003a 1820     		movs	r0, #24
 6009 003c FFF7FEFF 		bl	HAL_Delay
 6010              	.LVL627:
1228:./../bno055.c **** }
 6011              		.loc 1 1228 5 view .LVU1631
1228:./../bno055.c **** }
ARM GAS  /tmp/cctFn18N.s 			page 155


 6012              		.loc 1 1228 5 is_stmt 0 view .LVU1632
 6013              	.LBE534:
 6014              	.LBE538:
1239:./../bno055.c ****         return err;
 6015              		.loc 1 1239 5 is_stmt 1 view .LVU1633
 6016              	.LBB539:
 6017              	.LBB540:
1329:./../bno055.c ****         return BNO_OK;
 6018              		.loc 1 1329 8 is_stmt 0 view .LVU1634
 6019 0040 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 6020 0042 8DF81760 		strb	r6, [sp, #23]
 6021              	.LVL628:
1329:./../bno055.c ****         return BNO_OK;
 6022              		.loc 1 1329 8 view .LVU1635
 6023              	.LBE540:
 6024              	.LBI539:
1328:./../bno055.c ****     if (imu->_page != page) {
 6025              		.loc 1 1328 11 is_stmt 1 view .LVU1636
 6026              	.LBB543:
1329:./../bno055.c ****         return BNO_OK;
 6027              		.loc 1 1329 5 view .LVU1637
1329:./../bno055.c ****         return BNO_OK;
 6028              		.loc 1 1329 8 is_stmt 0 view .LVU1638
 6029 0046 8BB9     		cbnz	r3, .L282
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 6030              		.loc 1 1332 5 is_stmt 1 view .LVU1639
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 6031              		.loc 1 1335 5 view .LVU1640
1336:./../bno055.c ****     if (err != BNO_OK) {
 6032              		.loc 1 1336 5 view .LVU1641
 6033              	.LVL629:
 6034              	.LBB541:
 6035              	.LBI541:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6036              		.loc 1 1317 11 view .LVU1642
 6037              	.LBB542:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6038              		.loc 1 1319 5 view .LVU1643
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6039              		.loc 1 1320 5 view .LVU1644
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6040              		.loc 1 1320 11 is_stmt 0 view .LVU1645
 6041 0048 CDE9015A 		strd	r5, r10, [sp, #4]
 6042              	.LVL630:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6043              		.loc 1 1320 11 view .LVU1646
 6044 004c 0DF11703 		add	r3, sp, #23
 6045              	.LVL631:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6046              		.loc 1 1320 11 view .LVU1647
 6047 0050 0093     		str	r3, [sp]
 6048 0052 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6049 0054 2068     		ldr	r0, [r4]
 6050 0056 2B46     		mov	r3, r5
 6051              	.LVL632:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6052              		.loc 1 1320 11 view .LVU1648
ARM GAS  /tmp/cctFn18N.s 			page 156


 6053 0058 0722     		movs	r2, #7
 6054 005a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6055              	.LVL633:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6056              		.loc 1 1322 5 is_stmt 1 view .LVU1649
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6057              		.loc 1 1322 8 is_stmt 0 view .LVU1650
 6058 005e A8BB     		cbnz	r0, .L280
 6059              	.LVL634:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6060              		.loc 1 1322 8 view .LVU1651
 6061              	.LBE542:
 6062              	.LBE541:
1337:./../bno055.c ****         return err;
 6063              		.loc 1 1337 5 is_stmt 1 view .LVU1652
1340:./../bno055.c ****     HAL_Delay(2);
 6064              		.loc 1 1340 5 view .LVU1653
1340:./../bno055.c ****     HAL_Delay(2);
 6065              		.loc 1 1340 16 is_stmt 0 view .LVU1654
 6066 0060 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 6067 0064 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 6068              		.loc 1 1341 5 is_stmt 1 view .LVU1655
 6069 0066 0220     		movs	r0, #2
 6070 0068 FFF7FEFF 		bl	HAL_Delay
 6071              	.LVL635:
 6072              		.loc 1 1342 5 view .LVU1656
 6073              	.L282:
 6074              		.loc 1 1342 5 is_stmt 0 view .LVU1657
 6075              	.LBE543:
 6076              	.LBE539:
1242:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_UNIT_SEL, &data, 1)) != BNO_OK) {
 6077              		.loc 1 1242 5 is_stmt 1 view .LVU1658
1242:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_UNIT_SEL, &data, 1)) != BNO_OK) {
 6078              		.loc 1 1242 13 is_stmt 0 view .LVU1659
 6079 006c 48EA0B03 		orr	r3, r8, fp
 6080              	.LBB544:
 6081              	.LBB545:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6082              		.loc 1 1320 11 view .LVU1660
 6083 0070 0126     		movs	r6, #1
 6084              	.LBE545:
 6085              	.LBE544:
1242:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_UNIT_SEL, &data, 1)) != BNO_OK) {
 6086              		.loc 1 1242 13 view .LVU1661
 6087 0072 49EA0303 		orr	r3, r9, r3
 6088              	.LBB549:
 6089              	.LBB546:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6090              		.loc 1 1320 11 view .LVU1662
 6091 0076 4FF0FF35 		mov	r5, #-1
 6092 007a CDE90165 		strd	r6, r5, [sp, #4]
 6093              	.LBE546:
 6094              	.LBE549:
1242:./../bno055.c ****     if ((err = bno055_write_regs(*bno, BNO_UNIT_SEL, &data, 1)) != BNO_OK) {
 6095              		.loc 1 1242 13 view .LVU1663
 6096 007e 3B43     		orrs	r3, r3, r7
ARM GAS  /tmp/cctFn18N.s 			page 157


 6097 0080 8DF81630 		strb	r3, [sp, #22]
1243:./../bno055.c ****         return err;
 6098              		.loc 1 1243 5 is_stmt 1 view .LVU1664
 6099              	.LVL636:
 6100              	.LBB550:
 6101              	.LBI544:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6102              		.loc 1 1317 11 view .LVU1665
 6103              	.LBB547:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6104              		.loc 1 1319 5 view .LVU1666
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6105              		.loc 1 1320 5 view .LVU1667
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6106              		.loc 1 1320 11 is_stmt 0 view .LVU1668
 6107 0084 0DF11603 		add	r3, sp, #22
 6108              	.LVL637:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6109              		.loc 1 1320 11 view .LVU1669
 6110 0088 0093     		str	r3, [sp]
 6111 008a A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6112 008c 2068     		ldr	r0, [r4]
 6113 008e 3346     		mov	r3, r6
 6114              	.LVL638:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6115              		.loc 1 1320 11 view .LVU1670
 6116 0090 3B22     		movs	r2, #59
 6117 0092 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6118              	.LVL639:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6119              		.loc 1 1322 5 is_stmt 1 view .LVU1671
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6120              		.loc 1 1322 8 is_stmt 0 view .LVU1672
 6121 0096 E8B9     		cbnz	r0, .L284
 6122              	.LVL640:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6123              		.loc 1 1322 8 view .LVU1673
 6124              	.LBE547:
 6125              	.LBE550:
1246:./../bno055.c ****     bno->_acc_unit = a_unit;
 6126              		.loc 1 1246 5 is_stmt 1 view .LVU1674
 6127 0098 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
1246:./../bno055.c ****     bno->_acc_unit = a_unit;
 6128              		.loc 1 1246 20 is_stmt 0 view .LVU1675
 6129 009a 84F81090 		strb	r9, [r4, #16]
1247:./../bno055.c ****     bno->_eul_unit = e_unit;
 6130              		.loc 1 1247 5 is_stmt 1 view .LVU1676
1247:./../bno055.c ****     bno->_eul_unit = e_unit;
 6131              		.loc 1 1247 20 is_stmt 0 view .LVU1677
 6132 009e 84F80E80 		strb	r8, [r4, #14]
1248:./../bno055.c ****     bno->_temp_unit = t_unit;
 6133              		.loc 1 1248 5 is_stmt 1 view .LVU1678
1248:./../bno055.c ****     bno->_temp_unit = t_unit;
 6134              		.loc 1 1248 20 is_stmt 0 view .LVU1679
 6135 00a2 84F811B0 		strb	fp, [r4, #17]
1249:./../bno055.c **** 
 6136              		.loc 1 1249 5 is_stmt 1 view .LVU1680
ARM GAS  /tmp/cctFn18N.s 			page 158


1249:./../bno055.c **** 
 6137              		.loc 1 1249 21 is_stmt 0 view .LVU1681
 6138 00a6 E773     		strb	r7, [r4, #15]
1251:./../bno055.c ****         return err;
 6139              		.loc 1 1251 5 is_stmt 1 view .LVU1682
 6140              	.LVL641:
 6141              	.LBB551:
 6142              	.LBB552:
 6143              	.LBB553:
 6144              	.LBB554:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6145              		.loc 1 1320 11 is_stmt 0 view .LVU1683
 6146 00a8 CDE90165 		strd	r6, r5, [sp, #4]
 6147 00ac 0DF11703 		add	r3, sp, #23
 6148 00b0 0093     		str	r3, [sp]
 6149 00b2 8DF81710 		strb	r1, [sp, #23]
 6150              	.LVL642:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6151              		.loc 1 1320 11 view .LVU1684
 6152              	.LBE554:
 6153              	.LBE553:
 6154              	.LBE552:
 6155              	.LBI551:
1216:./../bno055.c ****     error_bno err;
 6156              		.loc 1 1216 11 is_stmt 1 view .LVU1685
 6157              	.LBB557:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 6158              		.loc 1 1217 5 view .LVU1686
1223:./../bno055.c ****         BNO_OK) {
 6159              		.loc 1 1223 5 view .LVU1687
 6160              	.LBB556:
 6161              	.LBI553:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6162              		.loc 1 1317 11 view .LVU1688
 6163              	.LBB555:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6164              		.loc 1 1319 5 view .LVU1689
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6165              		.loc 1 1320 5 view .LVU1690
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6166              		.loc 1 1320 11 is_stmt 0 view .LVU1691
 6167 00b6 2068     		ldr	r0, [r4]
 6168 00b8 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6169              	.LVL643:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6170              		.loc 1 1320 11 view .LVU1692
 6171 00ba 3346     		mov	r3, r6
 6172              	.LVL644:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6173              		.loc 1 1320 11 view .LVU1693
 6174 00bc 3D22     		movs	r2, #61
 6175 00be FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6176              	.LVL645:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6177              		.loc 1 1322 5 is_stmt 1 view .LVU1694
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6178              		.loc 1 1322 8 is_stmt 0 view .LVU1695
ARM GAS  /tmp/cctFn18N.s 			page 159


 6179 00c2 0546     		mov	r5, r0
 6180 00c4 30B9     		cbnz	r0, .L284
 6181              	.LVL646:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6182              		.loc 1 1322 8 view .LVU1696
 6183              	.LBE555:
 6184              	.LBE556:
1227:./../bno055.c ****     return BNO_OK;
 6185              		.loc 1 1227 5 is_stmt 1 view .LVU1697
 6186 00c6 1820     		movs	r0, #24
 6187 00c8 FFF7FEFF 		bl	HAL_Delay
 6188              	.LVL647:
1228:./../bno055.c **** }
 6189              		.loc 1 1228 5 view .LVU1698
 6190              	.L280:
1228:./../bno055.c **** }
 6191              		.loc 1 1228 5 is_stmt 0 view .LVU1699
 6192              	.LBE557:
 6193              	.LBE551:
1255:./../bno055.c **** 
 6194              		.loc 1 1255 1 view .LVU1700
 6195 00cc 2846     		mov	r0, r5
 6196 00ce 07B0     		add	sp, sp, #28
 6197              	.LCFI170:
 6198              		.cfi_remember_state
 6199              		.cfi_def_cfa_offset 36
 6200              		@ sp needed
 6201 00d0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 6202              	.LVL648:
 6203              	.L284:
 6204              	.LCFI171:
 6205              		.cfi_restore_state
 6206              	.LBB558:
 6207              	.LBB548:
1323:./../bno055.c ****     }
 6208              		.loc 1 1323 16 view .LVU1701
 6209 00d4 3546     		mov	r5, r6
 6210              	.LVL649:
1323:./../bno055.c ****     }
 6211              		.loc 1 1323 16 view .LVU1702
 6212              	.LBE548:
 6213              	.LBE558:
1255:./../bno055.c **** 
 6214              		.loc 1 1255 1 view .LVU1703
 6215 00d6 2846     		mov	r0, r5
 6216 00d8 07B0     		add	sp, sp, #28
 6217              	.LCFI172:
 6218              		.cfi_def_cfa_offset 36
 6219              		@ sp needed
 6220 00da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
1255:./../bno055.c **** 
 6221              		.loc 1 1255 1 view .LVU1704
 6222              		.cfi_endproc
 6223              	.LFE168:
 6225 00de 00BF     		.section	.text.bno055_set_pwr_mode,"ax",%progbits
 6226              		.align	1
 6227              		.p2align 2,,3
ARM GAS  /tmp/cctFn18N.s 			page 160


 6228              		.global	bno055_set_pwr_mode
 6229              		.syntax unified
 6230              		.thumb
 6231              		.thumb_func
 6232              		.fpu fpv4-sp-d16
 6234              	bno055_set_pwr_mode:
 6235              	.LVL650:
 6236              	.LFB169:
1257:./../bno055.c ****     if (imu == NULL) {
 6237              		.loc 1 1257 69 is_stmt 1 view -0
 6238              		.cfi_startproc
 6239              		@ args = 0, pretend = 0, frame = 16
 6240              		@ frame_needed = 0, uses_anonymous_args = 0
1258:./../bno055.c ****         return BNO_ERR_NULL_PTR;
 6241              		.loc 1 1258 5 view .LVU1706
1257:./../bno055.c ****     if (imu == NULL) {
 6242              		.loc 1 1257 69 is_stmt 0 view .LVU1707
 6243 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6244              	.LCFI173:
 6245              		.cfi_def_cfa_offset 20
 6246              		.cfi_offset 4, -20
 6247              		.cfi_offset 5, -16
 6248              		.cfi_offset 6, -12
 6249              		.cfi_offset 7, -8
 6250              		.cfi_offset 14, -4
 6251 0002 89B0     		sub	sp, sp, #36
 6252              	.LCFI174:
 6253              		.cfi_def_cfa_offset 56
1257:./../bno055.c ****     if (imu == NULL) {
 6254              		.loc 1 1257 69 view .LVU1708
 6255 0004 8DF81710 		strb	r1, [sp, #23]
1258:./../bno055.c ****         return BNO_ERR_NULL_PTR;
 6256              		.loc 1 1258 8 view .LVU1709
 6257 0008 0028     		cmp	r0, #0
 6258 000a 74D0     		beq	.L299
1261:./../bno055.c ****     if ((err = bno055_set_opmode(imu, BNO_MODE_CONFIG)) != BNO_OK) {
 6259              		.loc 1 1261 5 is_stmt 1 view .LVU1710
1262:./../bno055.c ****         return err;
 6260              		.loc 1 1262 5 view .LVU1711
 6261              	.LVL651:
 6262              	.LBB577:
 6263              	.LBB578:
 6264              	.LBB579:
 6265              	.LBB580:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6266              		.loc 1 1320 11 is_stmt 0 view .LVU1712
 6267 000c 0125     		movs	r5, #1
 6268 000e 4FF0FF37 		mov	r7, #-1
 6269 0012 CDE90157 		strd	r5, r7, [sp, #4]
 6270 0016 0DF11F02 		add	r2, sp, #31
 6271 001a 0092     		str	r2, [sp]
 6272 001c 0023     		movs	r3, #0
 6273 001e 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 6274              	.LVL652:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6275              		.loc 1 1320 11 view .LVU1713
 6276 0020 8DF81F30 		strb	r3, [sp, #31]
ARM GAS  /tmp/cctFn18N.s 			page 161


 6277              	.LVL653:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6278              		.loc 1 1320 11 view .LVU1714
 6279              	.LBE580:
 6280              	.LBE579:
 6281              	.LBE578:
 6282              	.LBI577:
1216:./../bno055.c ****     error_bno err;
 6283              		.loc 1 1216 11 is_stmt 1 view .LVU1715
 6284              	.LBB583:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 6285              		.loc 1 1217 5 view .LVU1716
1223:./../bno055.c ****         BNO_OK) {
 6286              		.loc 1 1223 5 view .LVU1717
 6287              	.LBB582:
 6288              	.LBI579:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6289              		.loc 1 1317 11 view .LVU1718
 6290              	.LBB581:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6291              		.loc 1 1319 5 view .LVU1719
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6292              		.loc 1 1320 5 view .LVU1720
 6293 0024 0446     		mov	r4, r0
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6294              		.loc 1 1320 11 is_stmt 0 view .LVU1721
 6295 0026 2B46     		mov	r3, r5
 6296              	.LVL654:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6297              		.loc 1 1320 11 view .LVU1722
 6298 0028 0068     		ldr	r0, [r0]
 6299              	.LVL655:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6300              		.loc 1 1320 11 view .LVU1723
 6301 002a 3D22     		movs	r2, #61
 6302              	.LVL656:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6303              		.loc 1 1320 11 view .LVU1724
 6304 002c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6305              	.LVL657:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6306              		.loc 1 1322 5 is_stmt 1 view .LVU1725
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6307              		.loc 1 1322 8 is_stmt 0 view .LVU1726
 6308 0030 0646     		mov	r6, r0
 6309 0032 0028     		cmp	r0, #0
 6310 0034 48D1     		bne	.L289
 6311              	.LVL658:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6312              		.loc 1 1322 8 view .LVU1727
 6313              	.LBE581:
 6314              	.LBE582:
1227:./../bno055.c ****     return BNO_OK;
 6315              		.loc 1 1227 5 is_stmt 1 view .LVU1728
 6316 0036 1820     		movs	r0, #24
 6317 0038 FFF7FEFF 		bl	HAL_Delay
 6318              	.LVL659:
ARM GAS  /tmp/cctFn18N.s 			page 162


1228:./../bno055.c **** }
 6319              		.loc 1 1228 5 view .LVU1729
1228:./../bno055.c **** }
 6320              		.loc 1 1228 5 is_stmt 0 view .LVU1730
 6321              	.LBE583:
 6322              	.LBE577:
1265:./../bno055.c ****         return err;
 6323              		.loc 1 1265 5 is_stmt 1 view .LVU1731
 6324              	.LBB584:
 6325              	.LBB585:
1329:./../bno055.c ****         return BNO_OK;
 6326              		.loc 1 1329 8 is_stmt 0 view .LVU1732
 6327 003c 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 6328 003e 8DF81F60 		strb	r6, [sp, #31]
 6329              	.LVL660:
1329:./../bno055.c ****         return BNO_OK;
 6330              		.loc 1 1329 8 view .LVU1733
 6331              	.LBE585:
 6332              	.LBI584:
1328:./../bno055.c ****     if (imu->_page != page) {
 6333              		.loc 1 1328 11 is_stmt 1 view .LVU1734
 6334              	.LBB588:
1329:./../bno055.c ****         return BNO_OK;
 6335              		.loc 1 1329 5 view .LVU1735
1329:./../bno055.c ****         return BNO_OK;
 6336              		.loc 1 1329 8 is_stmt 0 view .LVU1736
 6337 0042 002B     		cmp	r3, #0
 6338 0044 43D0     		beq	.L303
 6339              	.LVL661:
 6340              	.L294:
1329:./../bno055.c ****         return BNO_OK;
 6341              		.loc 1 1329 8 view .LVU1737
 6342              	.LBE588:
 6343              	.LBE584:
1268:./../bno055.c ****         BNO_OK) {
 6344              		.loc 1 1268 5 is_stmt 1 view .LVU1738
 6345              	.LBB590:
 6346              	.LBI590:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6347              		.loc 1 1317 11 view .LVU1739
 6348              	.LBB591:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6349              		.loc 1 1319 5 view .LVU1740
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6350              		.loc 1 1320 5 view .LVU1741
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6351              		.loc 1 1320 11 is_stmt 0 view .LVU1742
 6352 0046 0125     		movs	r5, #1
 6353 0048 4FF0FF36 		mov	r6, #-1
 6354 004c CDE90156 		strd	r5, r6, [sp, #4]
 6355              	.LVL662:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6356              		.loc 1 1320 11 view .LVU1743
 6357 0050 0DF11703 		add	r3, sp, #23
 6358              	.LVL663:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6359              		.loc 1 1320 11 view .LVU1744
ARM GAS  /tmp/cctFn18N.s 			page 163


 6360 0054 0093     		str	r3, [sp]
 6361 0056 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6362 0058 2068     		ldr	r0, [r4]
 6363 005a 2B46     		mov	r3, r5
 6364              	.LVL664:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6365              		.loc 1 1320 11 view .LVU1745
 6366 005c 3E22     		movs	r2, #62
 6367 005e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6368              	.LVL665:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6369              		.loc 1 1322 5 is_stmt 1 view .LVU1746
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6370              		.loc 1 1322 8 is_stmt 0 view .LVU1747
 6371 0062 88BB     		cbnz	r0, .L289
 6372              	.LVL666:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6373              		.loc 1 1322 8 view .LVU1748
 6374              	.LBE591:
 6375              	.LBE590:
1272:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 6376              		.loc 1 1272 5 is_stmt 1 view .LVU1749
 6377              	.LBB592:
 6378              	.LBB593:
1329:./../bno055.c ****         return BNO_OK;
 6379              		.loc 1 1329 8 is_stmt 0 view .LVU1750
 6380 0064 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 6381              	.LBE593:
 6382              	.LBE592:
1272:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 6383              		.loc 1 1272 20 view .LVU1751
 6384 0066 9DF81720 		ldrb	r2, [sp, #23]	@ zero_extendqisi2
 6385 006a 8DF81F00 		strb	r0, [sp, #31]
 6386 006e 2273     		strb	r2, [r4, #12]
1273:./../bno055.c ****         return err;
 6387              		.loc 1 1273 5 is_stmt 1 view .LVU1752
 6388              	.LVL667:
 6389              	.LBB597:
 6390              	.LBI592:
1328:./../bno055.c ****     if (imu->_page != page) {
 6391              		.loc 1 1328 11 view .LVU1753
 6392              	.LBB596:
1329:./../bno055.c ****         return BNO_OK;
 6393              		.loc 1 1329 5 view .LVU1754
1329:./../bno055.c ****         return BNO_OK;
 6394              		.loc 1 1329 8 is_stmt 0 view .LVU1755
 6395 0070 8BB9     		cbnz	r3, .L297
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 6396              		.loc 1 1332 5 is_stmt 1 view .LVU1756
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 6397              		.loc 1 1335 5 view .LVU1757
1336:./../bno055.c ****     if (err != BNO_OK) {
 6398              		.loc 1 1336 5 view .LVU1758
 6399              	.LVL668:
 6400              	.LBB594:
 6401              	.LBI594:
1317:./../bno055.c ****                             uint32_t buf_size) {
ARM GAS  /tmp/cctFn18N.s 			page 164


 6402              		.loc 1 1317 11 view .LVU1759
 6403              	.LBB595:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6404              		.loc 1 1319 5 view .LVU1760
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6405              		.loc 1 1320 5 view .LVU1761
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6406              		.loc 1 1320 11 is_stmt 0 view .LVU1762
 6407 0072 CDE90156 		strd	r5, r6, [sp, #4]
 6408              	.LVL669:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6409              		.loc 1 1320 11 view .LVU1763
 6410 0076 0DF11F03 		add	r3, sp, #31
 6411              	.LVL670:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6412              		.loc 1 1320 11 view .LVU1764
 6413 007a 0093     		str	r3, [sp]
 6414 007c A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6415 007e 2068     		ldr	r0, [r4]
 6416              	.LVL671:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6417              		.loc 1 1320 11 view .LVU1765
 6418 0080 2B46     		mov	r3, r5
 6419              	.LVL672:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6420              		.loc 1 1320 11 view .LVU1766
 6421 0082 0722     		movs	r2, #7
 6422 0084 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6423              	.LVL673:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6424              		.loc 1 1322 5 is_stmt 1 view .LVU1767
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6425              		.loc 1 1322 8 is_stmt 0 view .LVU1768
 6426 0088 F0B9     		cbnz	r0, .L289
 6427              	.LVL674:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6428              		.loc 1 1322 8 view .LVU1769
 6429              	.LBE595:
 6430              	.LBE594:
1337:./../bno055.c ****         return err;
 6431              		.loc 1 1337 5 is_stmt 1 view .LVU1770
1340:./../bno055.c ****     HAL_Delay(2);
 6432              		.loc 1 1340 5 view .LVU1771
1340:./../bno055.c ****     HAL_Delay(2);
 6433              		.loc 1 1340 16 is_stmt 0 view .LVU1772
 6434 008a 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 6435 008e 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 6436              		.loc 1 1341 5 is_stmt 1 view .LVU1773
 6437 0090 0220     		movs	r0, #2
 6438 0092 FFF7FEFF 		bl	HAL_Delay
 6439              	.LVL675:
 6440              		.loc 1 1342 5 view .LVU1774
 6441              	.L297:
 6442              		.loc 1 1342 5 is_stmt 0 view .LVU1775
 6443              	.LBE596:
 6444              	.LBE597:
ARM GAS  /tmp/cctFn18N.s 			page 165


1276:./../bno055.c ****         return err;
 6445              		.loc 1 1276 5 is_stmt 1 view .LVU1776
 6446              	.LBB598:
 6447              	.LBB599:
 6448              	.LBB600:
 6449              	.LBB601:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6450              		.loc 1 1320 11 is_stmt 0 view .LVU1777
 6451 0096 0126     		movs	r6, #1
 6452 0098 4FF0FF33 		mov	r3, #-1
 6453 009c 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 6454 009e 8DF81F10 		strb	r1, [sp, #31]
 6455              	.LVL676:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6456              		.loc 1 1320 11 view .LVU1778
 6457              	.LBE601:
 6458              	.LBE600:
 6459              	.LBE599:
 6460              	.LBI598:
1216:./../bno055.c ****     error_bno err;
 6461              		.loc 1 1216 11 is_stmt 1 view .LVU1779
 6462              	.LBB606:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 6463              		.loc 1 1217 5 view .LVU1780
1223:./../bno055.c ****         BNO_OK) {
 6464              		.loc 1 1223 5 view .LVU1781
 6465              	.LBB604:
 6466              	.LBI600:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6467              		.loc 1 1317 11 view .LVU1782
 6468              	.LBB602:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6469              		.loc 1 1319 5 view .LVU1783
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6470              		.loc 1 1320 5 view .LVU1784
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6471              		.loc 1 1320 11 is_stmt 0 view .LVU1785
 6472 00a2 CDE90163 		strd	r6, r3, [sp, #4]
 6473              	.LVL677:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6474              		.loc 1 1320 11 view .LVU1786
 6475 00a6 0DF11F03 		add	r3, sp, #31
 6476              	.LVL678:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6477              		.loc 1 1320 11 view .LVU1787
 6478 00aa 0093     		str	r3, [sp]
 6479 00ac A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6480              	.LVL679:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6481              		.loc 1 1320 11 view .LVU1788
 6482 00ae 2068     		ldr	r0, [r4]
 6483 00b0 3346     		mov	r3, r6
 6484              	.LVL680:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6485              		.loc 1 1320 11 view .LVU1789
 6486 00b2 3D22     		movs	r2, #61
 6487 00b4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
ARM GAS  /tmp/cctFn18N.s 			page 166


 6488              	.LVL681:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6489              		.loc 1 1322 5 is_stmt 1 view .LVU1790
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6490              		.loc 1 1322 8 is_stmt 0 view .LVU1791
 6491 00b8 0546     		mov	r5, r0
 6492 00ba 00BB     		cbnz	r0, .L304
 6493              	.LVL682:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6494              		.loc 1 1322 8 view .LVU1792
 6495              	.LBE602:
 6496              	.LBE604:
1227:./../bno055.c ****     return BNO_OK;
 6497              		.loc 1 1227 5 is_stmt 1 view .LVU1793
 6498 00bc 1820     		movs	r0, #24
 6499 00be FFF7FEFF 		bl	HAL_Delay
 6500              	.LVL683:
1228:./../bno055.c **** }
 6501              		.loc 1 1228 5 view .LVU1794
1228:./../bno055.c **** }
 6502              		.loc 1 1228 5 is_stmt 0 view .LVU1795
 6503              	.LBE606:
 6504              	.LBE598:
1279:./../bno055.c ****     return BNO_OK;
 6505              		.loc 1 1279 5 is_stmt 1 view .LVU1796
 6506 00c2 0220     		movs	r0, #2
 6507 00c4 FFF7FEFF 		bl	HAL_Delay
 6508              	.LVL684:
1280:./../bno055.c **** }
 6509              		.loc 1 1280 5 view .LVU1797
 6510              	.L289:
1281:./../bno055.c **** 
 6511              		.loc 1 1281 1 is_stmt 0 view .LVU1798
 6512 00c8 2846     		mov	r0, r5
 6513 00ca 09B0     		add	sp, sp, #36
 6514              	.LCFI175:
 6515              		.cfi_remember_state
 6516              		.cfi_def_cfa_offset 20
 6517              		@ sp needed
 6518 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 6519              	.LVL685:
 6520              	.L303:
 6521              	.LCFI176:
 6522              		.cfi_restore_state
 6523              	.LBB608:
 6524              	.LBB589:
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 6525              		.loc 1 1332 5 is_stmt 1 view .LVU1799
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 6526              		.loc 1 1335 5 view .LVU1800
1336:./../bno055.c ****     if (err != BNO_OK) {
 6527              		.loc 1 1336 5 view .LVU1801
 6528              	.LBB586:
 6529              	.LBI586:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6530              		.loc 1 1317 11 view .LVU1802
 6531              	.LBB587:
ARM GAS  /tmp/cctFn18N.s 			page 167


1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6532              		.loc 1 1319 5 view .LVU1803
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6533              		.loc 1 1320 5 view .LVU1804
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6534              		.loc 1 1320 11 is_stmt 0 view .LVU1805
 6535 00ce CDE90157 		strd	r5, r7, [sp, #4]
 6536              	.LVL686:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6537              		.loc 1 1320 11 view .LVU1806
 6538 00d2 0DF11F03 		add	r3, sp, #31
 6539              	.LVL687:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6540              		.loc 1 1320 11 view .LVU1807
 6541 00d6 0093     		str	r3, [sp]
 6542 00d8 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6543 00da 2068     		ldr	r0, [r4]
 6544 00dc 2B46     		mov	r3, r5
 6545              	.LVL688:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6546              		.loc 1 1320 11 view .LVU1808
 6547 00de 0722     		movs	r2, #7
 6548 00e0 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6549              	.LVL689:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6550              		.loc 1 1322 5 is_stmt 1 view .LVU1809
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6551              		.loc 1 1322 8 is_stmt 0 view .LVU1810
 6552 00e4 0028     		cmp	r0, #0
 6553 00e6 EFD1     		bne	.L289
 6554              	.LVL690:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6555              		.loc 1 1322 8 view .LVU1811
 6556              	.LBE587:
 6557              	.LBE586:
1337:./../bno055.c ****         return err;
 6558              		.loc 1 1337 5 is_stmt 1 view .LVU1812
1340:./../bno055.c ****     HAL_Delay(2);
 6559              		.loc 1 1340 5 view .LVU1813
1340:./../bno055.c ****     HAL_Delay(2);
 6560              		.loc 1 1340 16 is_stmt 0 view .LVU1814
 6561 00e8 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 6562 00ec 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 6563              		.loc 1 1341 5 is_stmt 1 view .LVU1815
 6564 00ee 0220     		movs	r0, #2
 6565 00f0 FFF7FEFF 		bl	HAL_Delay
 6566              	.LVL691:
 6567              		.loc 1 1342 5 view .LVU1816
 6568              		.loc 1 1342 5 is_stmt 0 view .LVU1817
 6569 00f4 A7E7     		b	.L294
 6570              	.LVL692:
 6571              	.L299:
 6572              		.loc 1 1342 5 view .LVU1818
 6573              	.LBE589:
 6574              	.LBE608:
1259:./../bno055.c ****     }
ARM GAS  /tmp/cctFn18N.s 			page 168


 6575              		.loc 1 1259 16 view .LVU1819
 6576 00f6 0425     		movs	r5, #4
1281:./../bno055.c **** 
 6577              		.loc 1 1281 1 view .LVU1820
 6578 00f8 2846     		mov	r0, r5
 6579              	.LVL693:
1281:./../bno055.c **** 
 6580              		.loc 1 1281 1 view .LVU1821
 6581 00fa 09B0     		add	sp, sp, #36
 6582              	.LCFI177:
 6583              		.cfi_remember_state
 6584              		.cfi_def_cfa_offset 20
 6585              		@ sp needed
 6586 00fc F0BD     		pop	{r4, r5, r6, r7, pc}
 6587              	.LVL694:
 6588              	.L304:
 6589              	.LCFI178:
 6590              		.cfi_restore_state
 6591              	.LBB609:
 6592              	.LBB607:
 6593              	.LBB605:
 6594              	.LBB603:
1323:./../bno055.c ****     }
 6595              		.loc 1 1323 16 view .LVU1822
 6596 00fe 3546     		mov	r5, r6
 6597 0100 E2E7     		b	.L289
 6598              	.LBE603:
 6599              	.LBE605:
 6600              	.LBE607:
 6601              	.LBE609:
 6602              		.cfi_endproc
 6603              	.LFE169:
 6605 0102 00BF     		.section	.text.bno055_init,"ax",%progbits
 6606              		.align	1
 6607              		.p2align 2,,3
 6608              		.global	bno055_init
 6609              		.syntax unified
 6610              		.thumb
 6611              		.thumb_func
 6612              		.fpu fpv4-sp-d16
 6614              	bno055_init:
 6615              	.LVL695:
 6616              	.LFB133:
  26:./../bno055.c ****     u8 id = 0;
 6617              		.loc 1 26 38 is_stmt 1 view -0
 6618              		.cfi_startproc
 6619              		@ args = 0, pretend = 0, frame = 16
 6620              		@ frame_needed = 0, uses_anonymous_args = 0
  27:./../bno055.c ****     error_bno err;
 6621              		.loc 1 27 5 view .LVU1824
  26:./../bno055.c ****     u8 id = 0;
 6622              		.loc 1 26 38 is_stmt 0 view .LVU1825
 6623 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 6624              	.LCFI179:
 6625              		.cfi_def_cfa_offset 20
 6626              		.cfi_offset 4, -20
 6627              		.cfi_offset 5, -16
ARM GAS  /tmp/cctFn18N.s 			page 169


 6628              		.cfi_offset 6, -12
 6629              		.cfi_offset 7, -8
 6630              		.cfi_offset 14, -4
  30:./../bno055.c ****     err = bno055_read_regs(*imu, BNO_CHIP_ID, &id, 1);
 6631              		.loc 1 30 28 view .LVU1826
 6632 0002 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 6633 0004 0568     		ldr	r5, [r0]
  26:./../bno055.c ****     u8 id = 0;
 6634              		.loc 1 26 38 view .LVU1827
 6635 0006 89B0     		sub	sp, sp, #36
 6636              	.LCFI180:
 6637              		.cfi_def_cfa_offset 56
  30:./../bno055.c ****     err = bno055_read_regs(*imu, BNO_CHIP_ID, &id, 1);
 6638              		.loc 1 30 28 view .LVU1828
 6639 0008 5B00     		lsls	r3, r3, #1
  27:./../bno055.c ****     error_bno err;
 6640              		.loc 1 27 8 view .LVU1829
 6641 000a 0022     		movs	r2, #0
  30:./../bno055.c ****     err = bno055_read_regs(*imu, BNO_CHIP_ID, &id, 1);
 6642              		.loc 1 30 28 view .LVU1830
 6643 000c DBB2     		uxtb	r3, r3
 6644              	.LBB632:
 6645              	.LBB633:
1305:./../bno055.c ****     if (err != HAL_OK) {
 6646              		.loc 1 1305 11 view .LVU1831
 6647 000e 4FF0FF36 		mov	r6, #-1
 6648 0012 99B2     		uxth	r1, r3
 6649              	.LBE633:
 6650              	.LBE632:
  30:./../bno055.c ****     err = bno055_read_regs(*imu, BNO_CHIP_ID, &id, 1);
 6651              		.loc 1 30 15 view .LVU1832
 6652 0014 8371     		strb	r3, [r0, #6]
  27:./../bno055.c ****     error_bno err;
 6653              		.loc 1 27 8 view .LVU1833
 6654 0016 8DF81E20 		strb	r2, [sp, #30]
  28:./../bno055.c **** 
 6655              		.loc 1 28 5 is_stmt 1 view .LVU1834
  30:./../bno055.c ****     err = bno055_read_regs(*imu, BNO_CHIP_ID, &id, 1);
 6656              		.loc 1 30 5 view .LVU1835
  31:./../bno055.c ****     if (err != BNO_OK) {
 6657              		.loc 1 31 5 view .LVU1836
 6658              	.LVL696:
  31:./../bno055.c ****     if (err != BNO_OK) {
 6659              		.loc 1 31 5 is_stmt 0 view .LVU1837
 6660 001a 8DF81F20 		strb	r2, [sp, #31]
 6661              	.LVL697:
 6662              	.LBB638:
 6663              	.LBI632:
1299:./../bno055.c ****                            uint32_t buf_size) {
 6664              		.loc 1 1299 11 is_stmt 1 view .LVU1838
 6665              	.LBB634:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 6666              		.loc 1 1301 5 view .LVU1839
1305:./../bno055.c ****     if (err != HAL_OK) {
 6667              		.loc 1 1305 5 view .LVU1840
 6668              	.LBE634:
 6669              	.LBE638:
ARM GAS  /tmp/cctFn18N.s 			page 170


  26:./../bno055.c ****     u8 id = 0;
 6670              		.loc 1 26 38 is_stmt 0 view .LVU1841
 6671 001e 0446     		mov	r4, r0
 6672              	.LBB639:
 6673              	.LBB635:
1305:./../bno055.c ****     if (err != HAL_OK) {
 6674              		.loc 1 1305 11 view .LVU1842
 6675 0020 0096     		str	r6, [sp]
 6676 0022 0123     		movs	r3, #1
 6677              	.LVL698:
1305:./../bno055.c ****     if (err != HAL_OK) {
 6678              		.loc 1 1305 11 view .LVU1843
 6679 0024 0DF11F02 		add	r2, sp, #31
 6680              	.LVL699:
1305:./../bno055.c ****     if (err != HAL_OK) {
 6681              		.loc 1 1305 11 view .LVU1844
 6682 0028 2846     		mov	r0, r5
 6683              	.LVL700:
1305:./../bno055.c ****     if (err != HAL_OK) {
 6684              		.loc 1 1305 11 view .LVU1845
 6685 002a 0591     		str	r1, [sp, #20]
 6686 002c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 6687              	.LVL701:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 6688              		.loc 1 1306 5 is_stmt 1 view .LVU1846
1306:./../bno055.c ****         return BNO_ERR_I2C;
 6689              		.loc 1 1306 8 is_stmt 0 view .LVU1847
 6690 0030 0599     		ldr	r1, [sp, #20]
 6691 0032 18B1     		cbz	r0, .L306
 6692              	.LVL702:
 6693              	.L308:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 6694              		.loc 1 1306 8 view .LVU1848
 6695              	.LBE635:
 6696              	.LBE639:
  32:./../bno055.c ****         return err;
 6697              		.loc 1 32 5 is_stmt 1 view .LVU1849
 6698              	.LBB640:
 6699              	.LBB636:
1307:./../bno055.c ****     }
 6700              		.loc 1 1307 16 is_stmt 0 view .LVU1850
 6701 0034 0125     		movs	r5, #1
 6702              	.LVL703:
 6703              	.L307:
1307:./../bno055.c ****     }
 6704              		.loc 1 1307 16 view .LVU1851
 6705              	.LBE636:
 6706              	.LBE640:
  93:./../bno055.c **** 
 6707              		.loc 1 93 1 view .LVU1852
 6708 0036 2846     		mov	r0, r5
 6709 0038 09B0     		add	sp, sp, #36
 6710              	.LCFI181:
 6711              		.cfi_remember_state
 6712              		.cfi_def_cfa_offset 20
 6713              		@ sp needed
 6714 003a F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /tmp/cctFn18N.s 			page 171


 6715              	.LVL704:
 6716              	.L306:
 6717              	.LCFI182:
 6718              		.cfi_restore_state
 6719              	.LBB641:
 6720              	.LBB637:
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 6721              		.loc 1 1309 5 is_stmt 1 view .LVU1853
1310:./../bno055.c ****     if (err != HAL_OK) {
 6722              		.loc 1 1310 9 is_stmt 0 view .LVU1854
 6723 003c 0096     		str	r6, [sp]
 6724 003e 2846     		mov	r0, r5
 6725              	.LVL705:
1310:./../bno055.c ****     if (err != HAL_OK) {
 6726              		.loc 1 1310 9 view .LVU1855
 6727 0040 0123     		movs	r3, #1
 6728 0042 0DF11E02 		add	r2, sp, #30
 6729              	.LVL706:
1310:./../bno055.c ****     if (err != HAL_OK) {
 6730              		.loc 1 1310 9 view .LVU1856
 6731 0046 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 6732              	.LVL707:
1311:./../bno055.c ****         return BNO_ERR_I2C;
 6733              		.loc 1 1311 5 is_stmt 1 view .LVU1857
1311:./../bno055.c ****         return BNO_ERR_I2C;
 6734              		.loc 1 1311 8 is_stmt 0 view .LVU1858
 6735 004a 0028     		cmp	r0, #0
 6736 004c F2D1     		bne	.L308
 6737              	.LVL708:
1311:./../bno055.c ****         return BNO_ERR_I2C;
 6738              		.loc 1 1311 8 view .LVU1859
 6739              	.LBE637:
 6740              	.LBE641:
  32:./../bno055.c ****         return err;
 6741              		.loc 1 32 5 is_stmt 1 view .LVU1860
  35:./../bno055.c ****         return BNO_ERR_WRONG_CHIP_ID;
 6742              		.loc 1 35 5 view .LVU1861
  35:./../bno055.c ****         return BNO_ERR_WRONG_CHIP_ID;
 6743              		.loc 1 35 8 is_stmt 0 view .LVU1862
 6744 004e 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 6745 0052 A02B     		cmp	r3, #160
 6746 0054 40F0A980 		bne	.L314
  38:./../bno055.c ****         return err;
 6747              		.loc 1 38 5 is_stmt 1 view .LVU1863
 6748              	.LVL709:
 6749              	.LBB642:
 6750              	.LBB643:
 6751              	.LBB644:
 6752              	.LBB645:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6753              		.loc 1 1320 11 is_stmt 0 view .LVU1864
 6754 0058 0127     		movs	r7, #1
 6755 005a CDE90176 		strd	r7, r6, [sp, #4]
 6756 005e 0DF11F03 		add	r3, sp, #31
 6757 0062 0093     		str	r3, [sp]
 6758 0064 8DF81F00 		strb	r0, [sp, #31]
 6759              	.LVL710:
ARM GAS  /tmp/cctFn18N.s 			page 172


1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6760              		.loc 1 1320 11 view .LVU1865
 6761              	.LBE645:
 6762              	.LBE644:
 6763              	.LBE643:
 6764              	.LBI642:
1216:./../bno055.c ****     error_bno err;
 6765              		.loc 1 1216 11 is_stmt 1 view .LVU1866
 6766              	.LBB648:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 6767              		.loc 1 1217 5 view .LVU1867
1223:./../bno055.c ****         BNO_OK) {
 6768              		.loc 1 1223 5 view .LVU1868
 6769              	.LBB647:
 6770              	.LBI644:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6771              		.loc 1 1317 11 view .LVU1869
 6772              	.LBB646:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6773              		.loc 1 1319 5 view .LVU1870
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6774              		.loc 1 1320 5 view .LVU1871
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6775              		.loc 1 1320 11 is_stmt 0 view .LVU1872
 6776 0068 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6777 006a 2068     		ldr	r0, [r4]
 6778              	.LVL711:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6779              		.loc 1 1320 11 view .LVU1873
 6780 006c 3B46     		mov	r3, r7
 6781              	.LVL712:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6782              		.loc 1 1320 11 view .LVU1874
 6783 006e 3D22     		movs	r2, #61
 6784 0070 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6785              	.LVL713:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6786              		.loc 1 1322 5 is_stmt 1 view .LVU1875
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6787              		.loc 1 1322 8 is_stmt 0 view .LVU1876
 6788 0074 0546     		mov	r5, r0
 6789 0076 0028     		cmp	r0, #0
 6790 0078 DCD1     		bne	.L308
 6791              	.LVL714:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6792              		.loc 1 1322 8 view .LVU1877
 6793              	.LBE646:
 6794              	.LBE647:
1227:./../bno055.c ****     return BNO_OK;
 6795              		.loc 1 1227 5 is_stmt 1 view .LVU1878
 6796 007a 1820     		movs	r0, #24
 6797 007c FFF7FEFF 		bl	HAL_Delay
 6798              	.LVL715:
1228:./../bno055.c **** }
 6799              		.loc 1 1228 5 view .LVU1879
1228:./../bno055.c **** }
 6800              		.loc 1 1228 5 is_stmt 0 view .LVU1880
ARM GAS  /tmp/cctFn18N.s 			page 173


 6801              	.LBE648:
 6802              	.LBE642:
  41:./../bno055.c ****     bno055_reset(imu);
 6803              		.loc 1 41 5 is_stmt 1 view .LVU1881
 6804 0080 0220     		movs	r0, #2
 6805 0082 FFF7FEFF 		bl	HAL_Delay
 6806              	.LVL716:
  42:./../bno055.c ****     HAL_Delay(5000);
 6807              		.loc 1 42 5 view .LVU1882
 6808              	.LBB649:
 6809              	.LBI649:
1283:./../bno055.c ****     u8 data = 0x20U;
 6810              		.loc 1 1283 11 view .LVU1883
 6811              	.LBB650:
1284:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 6812              		.loc 1 1284 5 view .LVU1884
 6813              	.LBB651:
 6814              	.LBB652:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6815              		.loc 1 1320 11 is_stmt 0 view .LVU1885
 6816 0086 CDE90176 		strd	r7, r6, [sp, #4]
 6817 008a 0DF11F03 		add	r3, sp, #31
 6818 008e 0093     		str	r3, [sp]
 6819              	.LBE652:
 6820              	.LBE651:
1284:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 6821              		.loc 1 1284 8 view .LVU1886
 6822 0090 4FF0200C 		mov	ip, #32
 6823              	.LBB655:
 6824              	.LBB653:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6825              		.loc 1 1320 11 view .LVU1887
 6826 0094 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6827 0096 2068     		ldr	r0, [r4]
 6828              	.LBE653:
 6829              	.LBE655:
1284:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 6830              		.loc 1 1284 8 view .LVU1888
 6831 0098 8DF81FC0 		strb	ip, [sp, #31]
1285:./../bno055.c ****         return BNO_ERR_I2C;
 6832              		.loc 1 1285 5 is_stmt 1 view .LVU1889
 6833              	.LVL717:
 6834              	.LBB656:
 6835              	.LBI651:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6836              		.loc 1 1317 11 view .LVU1890
 6837              	.LBB654:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6838              		.loc 1 1319 5 view .LVU1891
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6839              		.loc 1 1320 5 view .LVU1892
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6840              		.loc 1 1320 11 is_stmt 0 view .LVU1893
 6841 009c 3B46     		mov	r3, r7
 6842              	.LVL718:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6843              		.loc 1 1320 11 view .LVU1894
ARM GAS  /tmp/cctFn18N.s 			page 174


 6844 009e 3F22     		movs	r2, #63
 6845 00a0 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6846              	.LVL719:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6847              		.loc 1 1322 5 is_stmt 1 view .LVU1895
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6848              		.loc 1 1322 5 is_stmt 0 view .LVU1896
 6849              	.LBE654:
 6850              	.LBE656:
 6851              	.LBE650:
 6852              	.LBE649:
  43:./../bno055.c ****     if ((err = bno055_set_pwr_mode(imu, BNO_PWR_NORMAL)) != BNO_OK) {
 6853              		.loc 1 43 5 is_stmt 1 view .LVU1897
 6854 00a4 41F28830 		movw	r0, #5000
 6855 00a8 FFF7FEFF 		bl	HAL_Delay
 6856              	.LVL720:
  44:./../bno055.c ****         return err;
 6857              		.loc 1 44 5 view .LVU1898
  44:./../bno055.c ****         return err;
 6858              		.loc 1 44 16 is_stmt 0 view .LVU1899
 6859 00ac 2946     		mov	r1, r5
 6860 00ae 2046     		mov	r0, r4
 6861 00b0 FFF7FEFF 		bl	bno055_set_pwr_mode
 6862              	.LVL721:
  44:./../bno055.c ****         return err;
 6863              		.loc 1 44 8 view .LVU1900
 6864 00b4 0546     		mov	r5, r0
 6865 00b6 0028     		cmp	r0, #0
 6866 00b8 BDD1     		bne	.L307
  47:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 6867              		.loc 1 47 5 is_stmt 1 view .LVU1901
 6868 00ba 0A20     		movs	r0, #10
 6869              	.LVL722:
  47:./../bno055.c ****     if ((err = bno055_set_page(imu, BNO_PAGE_0)) != BNO_OK) {
 6870              		.loc 1 47 5 is_stmt 0 view .LVU1902
 6871 00bc FFF7FEFF 		bl	HAL_Delay
 6872              	.LVL723:
  48:./../bno055.c ****         return err;
 6873              		.loc 1 48 5 is_stmt 1 view .LVU1903
 6874              	.LBB657:
 6875              	.LBB658:
1329:./../bno055.c ****         return BNO_OK;
 6876              		.loc 1 1329 8 is_stmt 0 view .LVU1904
 6877 00c0 637B     		ldrb	r3, [r4, #13]	@ zero_extendqisi2
 6878 00c2 8DF81F50 		strb	r5, [sp, #31]
 6879              	.LVL724:
1329:./../bno055.c ****         return BNO_OK;
 6880              		.loc 1 1329 8 view .LVU1905
 6881              	.LBE658:
 6882              	.LBI657:
1328:./../bno055.c ****     if (imu->_page != page) {
 6883              		.loc 1 1328 11 is_stmt 1 view .LVU1906
 6884              	.LBB661:
1329:./../bno055.c ****         return BNO_OK;
 6885              		.loc 1 1329 5 view .LVU1907
1329:./../bno055.c ****         return BNO_OK;
 6886              		.loc 1 1329 8 is_stmt 0 view .LVU1908
ARM GAS  /tmp/cctFn18N.s 			page 175


 6887 00c6 002B     		cmp	r3, #0
 6888 00c8 73D0     		beq	.L316
 6889              	.LVL725:
 6890              	.L312:
1329:./../bno055.c ****         return BNO_OK;
 6891              		.loc 1 1329 8 view .LVU1909
 6892              	.LBE661:
 6893              	.LBE657:
  51:./../bno055.c ****     bno055_on(imu);
 6894              		.loc 1 51 5 is_stmt 1 view .LVU1910
 6895              	.LBB663:
 6896              	.LBB664:
 6897              	.LBB665:
 6898              	.LBB666:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6899              		.loc 1 1320 11 is_stmt 0 view .LVU1911
 6900 00ca 0126     		movs	r6, #1
 6901 00cc 4FF0FF35 		mov	r5, #-1
 6902              	.LBE666:
 6903              	.LBE665:
 6904              	.LBE664:
 6905              	.LBE663:
  51:./../bno055.c ****     bno055_on(imu);
 6906              		.loc 1 51 5 view .LVU1912
 6907 00d0 0C20     		movs	r0, #12
 6908 00d2 FFF7FEFF 		bl	HAL_Delay
 6909              	.LVL726:
  52:./../bno055.c ****     if ((err = bno055_set_opmode(imu, imu->mode)) != BNO_OK) {
 6910              		.loc 1 52 5 is_stmt 1 view .LVU1913
 6911              	.LBB674:
 6912              	.LBI663:
1291:./../bno055.c ****     u8 data = 0x00U;
 6913              		.loc 1 1291 11 view .LVU1914
 6914              	.LBB673:
1292:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 6915              		.loc 1 1292 5 view .LVU1915
 6916              	.LBB670:
 6917              	.LBB667:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6918              		.loc 1 1320 11 is_stmt 0 view .LVU1916
 6919 00d6 CDE90165 		strd	r6, r5, [sp, #4]
 6920 00da 0DF11F02 		add	r2, sp, #31
 6921 00de 0092     		str	r2, [sp]
 6922              	.LBE667:
 6923              	.LBE670:
1292:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 6924              		.loc 1 1292 8 view .LVU1917
 6925 00e0 0023     		movs	r3, #0
 6926              	.LBB671:
 6927              	.LBB668:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6928              		.loc 1 1320 11 view .LVU1918
 6929 00e2 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6930              	.LBE668:
 6931              	.LBE671:
1292:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 6932              		.loc 1 1292 8 view .LVU1919
ARM GAS  /tmp/cctFn18N.s 			page 176


 6933 00e4 8DF81F30 		strb	r3, [sp, #31]
1293:./../bno055.c ****         return BNO_ERR_I2C;
 6934              		.loc 1 1293 5 is_stmt 1 view .LVU1920
 6935              	.LVL727:
 6936              	.LBB672:
 6937              	.LBI665:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6938              		.loc 1 1317 11 view .LVU1921
 6939              	.LBB669:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6940              		.loc 1 1319 5 view .LVU1922
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6941              		.loc 1 1320 5 view .LVU1923
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6942              		.loc 1 1320 11 is_stmt 0 view .LVU1924
 6943 00e8 3F22     		movs	r2, #63
 6944              	.LVL728:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6945              		.loc 1 1320 11 view .LVU1925
 6946 00ea 3346     		mov	r3, r6
 6947 00ec 2068     		ldr	r0, [r4]
 6948 00ee FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6949              	.LVL729:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6950              		.loc 1 1322 5 is_stmt 1 view .LVU1926
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6951              		.loc 1 1322 5 is_stmt 0 view .LVU1927
 6952              	.LBE669:
 6953              	.LBE672:
 6954              	.LBE673:
 6955              	.LBE674:
  53:./../bno055.c ****         return err;
 6956              		.loc 1 53 5 is_stmt 1 view .LVU1928
  53:./../bno055.c ****         return err;
 6957              		.loc 1 53 5 is_stmt 0 view .LVU1929
 6958 00f2 2179     		ldrb	r1, [r4, #4]	@ zero_extendqisi2
 6959 00f4 8DF81F10 		strb	r1, [sp, #31]
 6960              	.LVL730:
 6961              	.LBB675:
 6962              	.LBI675:
1216:./../bno055.c ****     error_bno err;
 6963              		.loc 1 1216 11 is_stmt 1 view .LVU1930
 6964              	.LBB676:
1217:./../bno055.c **** #ifdef BNO_AUTO_PAGE_SET
 6965              		.loc 1 1217 5 view .LVU1931
1223:./../bno055.c ****         BNO_OK) {
 6966              		.loc 1 1223 5 view .LVU1932
 6967              	.LBB677:
 6968              	.LBI677:
1317:./../bno055.c ****                             uint32_t buf_size) {
 6969              		.loc 1 1317 11 view .LVU1933
 6970              	.LBB678:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 6971              		.loc 1 1319 5 view .LVU1934
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6972              		.loc 1 1320 5 view .LVU1935
1320:./../bno055.c ****                             HAL_MAX_DELAY);
ARM GAS  /tmp/cctFn18N.s 			page 177


 6973              		.loc 1 1320 11 is_stmt 0 view .LVU1936
 6974 00f8 CDE90165 		strd	r6, r5, [sp, #4]
 6975              	.LVL731:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6976              		.loc 1 1320 11 view .LVU1937
 6977 00fc 0DF11F03 		add	r3, sp, #31
 6978              	.LVL732:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6979              		.loc 1 1320 11 view .LVU1938
 6980 0100 0093     		str	r3, [sp]
 6981 0102 A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 6982              	.LVL733:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6983              		.loc 1 1320 11 view .LVU1939
 6984 0104 2068     		ldr	r0, [r4]
 6985 0106 3346     		mov	r3, r6
 6986              	.LVL734:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 6987              		.loc 1 1320 11 view .LVU1940
 6988 0108 3D22     		movs	r2, #61
 6989 010a FFF7FEFF 		bl	HAL_I2C_Mem_Write
 6990              	.LVL735:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6991              		.loc 1 1322 5 is_stmt 1 view .LVU1941
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6992              		.loc 1 1322 8 is_stmt 0 view .LVU1942
 6993 010e 0546     		mov	r5, r0
 6994 0110 0028     		cmp	r0, #0
 6995 0112 8FD1     		bne	.L308
 6996              	.LVL736:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 6997              		.loc 1 1322 8 view .LVU1943
 6998              	.LBE678:
 6999              	.LBE677:
1227:./../bno055.c ****     return BNO_OK;
 7000              		.loc 1 1227 5 is_stmt 1 view .LVU1944
 7001 0114 1820     		movs	r0, #24
 7002 0116 FFF7FEFF 		bl	HAL_Delay
 7003              	.LVL737:
1228:./../bno055.c **** }
 7004              		.loc 1 1228 5 view .LVU1945
1228:./../bno055.c **** }
 7005              		.loc 1 1228 5 is_stmt 0 view .LVU1946
 7006              	.LBE676:
 7007              	.LBE675:
  56:./../bno055.c **** 
 7008              		.loc 1 56 5 is_stmt 1 view .LVU1947
 7009 011a 1820     		movs	r0, #24
 7010 011c FFF7FEFF 		bl	HAL_Delay
 7011              	.LVL738:
  58:./../bno055.c ****     imu->acc_x = &bno055_acc_x;
 7012              		.loc 1 58 5 view .LVU1948
  58:./../bno055.c ****     imu->acc_x = &bno055_acc_x;
 7013              		.loc 1 58 22 is_stmt 0 view .LVU1949
 7014 0120 2E4A     		ldr	r2, .L317
  59:./../bno055.c ****     imu->acc_y = &bno055_acc_y;
 7015              		.loc 1 59 16 view .LVU1950
ARM GAS  /tmp/cctFn18N.s 			page 178


 7016 0122 2F4B     		ldr	r3, .L317+4
  60:./../bno055.c ****     imu->acc_z = &bno055_acc_z;
 7017              		.loc 1 60 16 view .LVU1951
 7018 0124 2F49     		ldr	r1, .L317+8
  59:./../bno055.c ****     imu->acc_y = &bno055_acc_y;
 7019              		.loc 1 59 16 view .LVU1952
 7020 0126 C4E90923 		strd	r2, r3, [r4, #36]
  60:./../bno055.c ****     imu->acc_z = &bno055_acc_z;
 7021              		.loc 1 60 5 is_stmt 1 view .LVU1953
  61:./../bno055.c ****     imu->acc = &bno055_acc;
 7022              		.loc 1 61 16 is_stmt 0 view .LVU1954
 7023 012a 2F4B     		ldr	r3, .L317+12
  62:./../bno055.c ****     imu->linear_acc_x = &bno055_linear_acc_x;
 7024              		.loc 1 62 14 view .LVU1955
 7025 012c 2F4A     		ldr	r2, .L317+16
  61:./../bno055.c ****     imu->acc = &bno055_acc;
 7026              		.loc 1 61 16 view .LVU1956
 7027 012e C4E90B13 		strd	r1, r3, [r4, #44]
  62:./../bno055.c ****     imu->linear_acc_x = &bno055_linear_acc_x;
 7028              		.loc 1 62 5 is_stmt 1 view .LVU1957
  63:./../bno055.c ****     imu->linear_acc_y = &bno055_linear_acc_y;
 7029              		.loc 1 63 23 is_stmt 0 view .LVU1958
 7030 0132 2F4B     		ldr	r3, .L317+20
  64:./../bno055.c ****     imu->linear_acc_z = &bno055_linear_acc_z;
 7031              		.loc 1 64 23 view .LVU1959
 7032 0134 2F49     		ldr	r1, .L317+24
  63:./../bno055.c ****     imu->linear_acc_y = &bno055_linear_acc_y;
 7033              		.loc 1 63 23 view .LVU1960
 7034 0136 C4E90D23 		strd	r2, r3, [r4, #52]
  64:./../bno055.c ****     imu->linear_acc_z = &bno055_linear_acc_z;
 7035              		.loc 1 64 5 is_stmt 1 view .LVU1961
  65:./../bno055.c ****     imu->linear_acc = &bno055_linear_acc;
 7036              		.loc 1 65 23 is_stmt 0 view .LVU1962
 7037 013a 2F4B     		ldr	r3, .L317+28
  66:./../bno055.c ****     imu->gyro_x = &bno055_gyro_x;
 7038              		.loc 1 66 21 view .LVU1963
 7039 013c 2F4A     		ldr	r2, .L317+32
  65:./../bno055.c ****     imu->linear_acc = &bno055_linear_acc;
 7040              		.loc 1 65 23 view .LVU1964
 7041 013e C4E90F13 		strd	r1, r3, [r4, #60]
  66:./../bno055.c ****     imu->gyro_x = &bno055_gyro_x;
 7042              		.loc 1 66 5 is_stmt 1 view .LVU1965
  67:./../bno055.c ****     imu->gyro_y = &bno055_gyro_y;
 7043              		.loc 1 67 17 is_stmt 0 view .LVU1966
 7044 0142 2F4B     		ldr	r3, .L317+36
  68:./../bno055.c ****     imu->gyro_z = &bno055_gyro_z;
 7045              		.loc 1 68 17 view .LVU1967
 7046 0144 2F49     		ldr	r1, .L317+40
  67:./../bno055.c ****     imu->gyro_y = &bno055_gyro_y;
 7047              		.loc 1 67 17 view .LVU1968
 7048 0146 C4E91123 		strd	r2, r3, [r4, #68]
  68:./../bno055.c ****     imu->gyro_z = &bno055_gyro_z;
 7049              		.loc 1 68 5 is_stmt 1 view .LVU1969
  69:./../bno055.c ****     imu->gyro = &bno055_gyro;
 7050              		.loc 1 69 17 is_stmt 0 view .LVU1970
 7051 014a 2F4B     		ldr	r3, .L317+44
  70:./../bno055.c ****     imu->mag_x = &bno055_mag_x;
ARM GAS  /tmp/cctFn18N.s 			page 179


 7052              		.loc 1 70 15 view .LVU1971
 7053 014c 2F4A     		ldr	r2, .L317+48
  69:./../bno055.c ****     imu->gyro = &bno055_gyro;
 7054              		.loc 1 69 17 view .LVU1972
 7055 014e C4E91313 		strd	r1, r3, [r4, #76]
  70:./../bno055.c ****     imu->mag_x = &bno055_mag_x;
 7056              		.loc 1 70 5 is_stmt 1 view .LVU1973
  71:./../bno055.c ****     imu->mag_y = &bno055_mag_y;
 7057              		.loc 1 71 16 is_stmt 0 view .LVU1974
 7058 0152 2F4B     		ldr	r3, .L317+52
  72:./../bno055.c ****     imu->mag_z = &bno055_mag_z;
 7059              		.loc 1 72 16 view .LVU1975
 7060 0154 2F49     		ldr	r1, .L317+56
  71:./../bno055.c ****     imu->mag_y = &bno055_mag_y;
 7061              		.loc 1 71 16 view .LVU1976
 7062 0156 C4E91523 		strd	r2, r3, [r4, #84]
  72:./../bno055.c ****     imu->mag_z = &bno055_mag_z;
 7063              		.loc 1 72 5 is_stmt 1 view .LVU1977
  73:./../bno055.c ****     imu->mag = &bno055_mag;
 7064              		.loc 1 73 16 is_stmt 0 view .LVU1978
 7065 015a 2F4B     		ldr	r3, .L317+60
  74:./../bno055.c ****     imu->gravity_x = &bno055_gravity_x;
 7066              		.loc 1 74 14 view .LVU1979
 7067 015c 2F4A     		ldr	r2, .L317+64
  73:./../bno055.c ****     imu->mag = &bno055_mag;
 7068              		.loc 1 73 16 view .LVU1980
 7069 015e C4E91713 		strd	r1, r3, [r4, #92]
  74:./../bno055.c ****     imu->gravity_x = &bno055_gravity_x;
 7070              		.loc 1 74 5 is_stmt 1 view .LVU1981
  75:./../bno055.c ****     imu->gravity_y = &bno055_gravity_y;
 7071              		.loc 1 75 20 is_stmt 0 view .LVU1982
 7072 0162 2F4B     		ldr	r3, .L317+68
  76:./../bno055.c ****     imu->gravity_z = &bno055_gravity_z;
 7073              		.loc 1 76 20 view .LVU1983
 7074 0164 2F49     		ldr	r1, .L317+72
  75:./../bno055.c ****     imu->gravity_y = &bno055_gravity_y;
 7075              		.loc 1 75 20 view .LVU1984
 7076 0166 C4E91923 		strd	r2, r3, [r4, #100]
  76:./../bno055.c ****     imu->gravity_z = &bno055_gravity_z;
 7077              		.loc 1 76 5 is_stmt 1 view .LVU1985
  77:./../bno055.c ****     imu->gravity = &bno055_gravity;
 7078              		.loc 1 77 20 is_stmt 0 view .LVU1986
 7079 016a 2F4B     		ldr	r3, .L317+76
  78:./../bno055.c ****     imu->euler_yaw = &bno055_euler_yaw;
 7080              		.loc 1 78 18 view .LVU1987
 7081 016c 2F4A     		ldr	r2, .L317+80
 7082 016e 6267     		str	r2, [r4, #116]
  77:./../bno055.c ****     imu->gravity = &bno055_gravity;
 7083              		.loc 1 77 20 view .LVU1988
 7084 0170 C4E91B13 		strd	r1, r3, [r4, #108]
  78:./../bno055.c ****     imu->euler_yaw = &bno055_euler_yaw;
 7085              		.loc 1 78 5 is_stmt 1 view .LVU1989
  79:./../bno055.c ****     imu->euler_roll = &bno055_euler_roll;
 7086              		.loc 1 79 5 view .LVU1990
  79:./../bno055.c ****     imu->euler_roll = &bno055_euler_roll;
 7087              		.loc 1 79 20 is_stmt 0 view .LVU1991
 7088 0174 2E4B     		ldr	r3, .L317+84
ARM GAS  /tmp/cctFn18N.s 			page 180


  80:./../bno055.c ****     imu->euler_pitch = &bno055_euler_pitch;
 7089              		.loc 1 80 21 view .LVU1992
 7090 0176 2F49     		ldr	r1, .L317+88
  79:./../bno055.c ****     imu->euler_roll = &bno055_euler_roll;
 7091              		.loc 1 79 20 view .LVU1993
 7092 0178 C4F88030 		str	r3, [r4, #128]
  80:./../bno055.c ****     imu->euler_pitch = &bno055_euler_pitch;
 7093              		.loc 1 80 5 is_stmt 1 view .LVU1994
  81:./../bno055.c ****     imu->euler = &bno055_euler;
 7094              		.loc 1 81 22 is_stmt 0 view .LVU1995
 7095 017c 2E4B     		ldr	r3, .L317+92
  82:./../bno055.c ****     imu->quaternion_w = &bno055_quaternion_w;
 7096              		.loc 1 82 16 view .LVU1996
 7097 017e 2F4A     		ldr	r2, .L317+96
  81:./../bno055.c ****     imu->euler = &bno055_euler;
 7098              		.loc 1 81 22 view .LVU1997
 7099 0180 C4E91E13 		strd	r1, r3, [r4, #120]
  82:./../bno055.c ****     imu->quaternion_w = &bno055_quaternion_w;
 7100              		.loc 1 82 5 is_stmt 1 view .LVU1998
  83:./../bno055.c ****     imu->quaternion_x = &bno055_quaternion_x;
 7101              		.loc 1 83 23 is_stmt 0 view .LVU1999
 7102 0184 2E4B     		ldr	r3, .L317+100
  84:./../bno055.c ****     imu->quaternion_y = &bno055_quaternion_y;
 7103              		.loc 1 84 23 view .LVU2000
 7104 0186 2F49     		ldr	r1, .L317+104
  83:./../bno055.c ****     imu->quaternion_x = &bno055_quaternion_x;
 7105              		.loc 1 83 23 view .LVU2001
 7106 0188 C4E92123 		strd	r2, r3, [r4, #132]
  84:./../bno055.c ****     imu->quaternion_y = &bno055_quaternion_y;
 7107              		.loc 1 84 5 is_stmt 1 view .LVU2002
  85:./../bno055.c ****     imu->quaternion_z = &bno055_quaternion_z;
 7108              		.loc 1 85 23 is_stmt 0 view .LVU2003
 7109 018c 2E4B     		ldr	r3, .L317+108
  86:./../bno055.c ****     imu->quaternion = &bno055_quaternion;
 7110              		.loc 1 86 23 view .LVU2004
 7111 018e 2F4A     		ldr	r2, .L317+112
  85:./../bno055.c ****     imu->quaternion_z = &bno055_quaternion_z;
 7112              		.loc 1 85 23 view .LVU2005
 7113 0190 C4E92313 		strd	r1, r3, [r4, #140]
  86:./../bno055.c ****     imu->quaternion = &bno055_quaternion;
 7114              		.loc 1 86 5 is_stmt 1 view .LVU2006
  87:./../bno055.c **** 
 7115              		.loc 1 87 21 is_stmt 0 view .LVU2007
 7116 0194 2E4B     		ldr	r3, .L317+116
  89:./../bno055.c ****     imu->gyr_config = &bno055_gyr_conf;
 7117              		.loc 1 89 21 view .LVU2008
 7118 0196 2F49     		ldr	r1, .L317+120
  87:./../bno055.c **** 
 7119              		.loc 1 87 21 view .LVU2009
 7120 0198 C4E92523 		strd	r2, r3, [r4, #148]
  89:./../bno055.c ****     imu->gyr_config = &bno055_gyr_conf;
 7121              		.loc 1 89 5 is_stmt 1 view .LVU2010
  90:./../bno055.c ****     imu->mag_config = &bno055_mag_conf;
 7122              		.loc 1 90 21 is_stmt 0 view .LVU2011
 7123 019c 2E4A     		ldr	r2, .L317+124
  91:./../bno055.c ****     return BNO_OK;
 7124              		.loc 1 91 21 view .LVU2012
ARM GAS  /tmp/cctFn18N.s 			page 181


 7125 019e 2F4B     		ldr	r3, .L317+128
  90:./../bno055.c ****     imu->mag_config = &bno055_mag_conf;
 7126              		.loc 1 90 21 view .LVU2013
 7127 01a0 C4E92812 		strd	r1, r2, [r4, #160]
  91:./../bno055.c ****     return BNO_OK;
 7128              		.loc 1 91 5 is_stmt 1 view .LVU2014
  91:./../bno055.c ****     return BNO_OK;
 7129              		.loc 1 91 21 is_stmt 0 view .LVU2015
 7130 01a4 C4F8A830 		str	r3, [r4, #168]
  92:./../bno055.c **** }
 7131              		.loc 1 92 5 is_stmt 1 view .LVU2016
  92:./../bno055.c **** }
 7132              		.loc 1 92 12 is_stmt 0 view .LVU2017
 7133 01a8 45E7     		b	.L307
 7134              	.L314:
  36:./../bno055.c ****     }
 7135              		.loc 1 36 16 view .LVU2018
 7136 01aa 0625     		movs	r5, #6
  93:./../bno055.c **** 
 7137              		.loc 1 93 1 view .LVU2019
 7138 01ac 2846     		mov	r0, r5
 7139 01ae 09B0     		add	sp, sp, #36
 7140              	.LCFI183:
 7141              		.cfi_remember_state
 7142              		.cfi_def_cfa_offset 20
 7143              		@ sp needed
 7144 01b0 F0BD     		pop	{r4, r5, r6, r7, pc}
 7145              	.LVL739:
 7146              	.L316:
 7147              	.LCFI184:
 7148              		.cfi_restore_state
 7149              	.LBB679:
 7150              	.LBB662:
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 7151              		.loc 1 1332 5 is_stmt 1 view .LVU2020
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 7152              		.loc 1 1335 5 view .LVU2021
1336:./../bno055.c ****     if (err != BNO_OK) {
 7153              		.loc 1 1336 5 view .LVU2022
 7154              	.LBB659:
 7155              	.LBI659:
1317:./../bno055.c ****                             uint32_t buf_size) {
 7156              		.loc 1 1317 11 view .LVU2023
 7157              	.LBB660:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 7158              		.loc 1 1319 5 view .LVU2024
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7159              		.loc 1 1320 5 view .LVU2025
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7160              		.loc 1 1320 11 is_stmt 0 view .LVU2026
 7161 01b2 CDE90176 		strd	r7, r6, [sp, #4]
 7162              	.LVL740:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7163              		.loc 1 1320 11 view .LVU2027
 7164 01b6 0DF11F03 		add	r3, sp, #31
 7165              	.LVL741:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
ARM GAS  /tmp/cctFn18N.s 			page 182


 7166              		.loc 1 1320 11 view .LVU2028
 7167 01ba 0093     		str	r3, [sp]
 7168 01bc A179     		ldrb	r1, [r4, #6]	@ zero_extendqisi2
 7169 01be 2068     		ldr	r0, [r4]
 7170 01c0 3B46     		mov	r3, r7
 7171              	.LVL742:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7172              		.loc 1 1320 11 view .LVU2029
 7173 01c2 0722     		movs	r2, #7
 7174 01c4 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 7175              	.LVL743:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7176              		.loc 1 1322 5 is_stmt 1 view .LVU2030
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7177              		.loc 1 1322 8 is_stmt 0 view .LVU2031
 7178 01c8 0028     		cmp	r0, #0
 7179 01ca 7FF433AF 		bne	.L308
 7180              	.LVL744:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7181              		.loc 1 1322 8 view .LVU2032
 7182              	.LBE660:
 7183              	.LBE659:
1337:./../bno055.c ****         return err;
 7184              		.loc 1 1337 5 is_stmt 1 view .LVU2033
1340:./../bno055.c ****     HAL_Delay(2);
 7185              		.loc 1 1340 5 view .LVU2034
1340:./../bno055.c ****     HAL_Delay(2);
 7186              		.loc 1 1340 16 is_stmt 0 view .LVU2035
 7187 01ce 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 7188 01d2 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 7189              		.loc 1 1341 5 is_stmt 1 view .LVU2036
 7190 01d4 0220     		movs	r0, #2
 7191 01d6 FFF7FEFF 		bl	HAL_Delay
 7192              	.LVL745:
 7193              		.loc 1 1342 5 view .LVU2037
 7194              		.loc 1 1342 5 is_stmt 0 view .LVU2038
 7195 01da 76E7     		b	.L312
 7196              	.L318:
 7197              		.align	2
 7198              	.L317:
 7199 01dc 00000000 		.word	bno055_temperature
 7200 01e0 00000000 		.word	bno055_acc_x
 7201 01e4 00000000 		.word	bno055_acc_y
 7202 01e8 00000000 		.word	bno055_acc_z
 7203 01ec 00000000 		.word	bno055_acc
 7204 01f0 00000000 		.word	bno055_linear_acc_x
 7205 01f4 00000000 		.word	bno055_linear_acc_y
 7206 01f8 00000000 		.word	bno055_linear_acc_z
 7207 01fc 00000000 		.word	bno055_linear_acc
 7208 0200 00000000 		.word	bno055_gyro_x
 7209 0204 00000000 		.word	bno055_gyro_y
 7210 0208 00000000 		.word	bno055_gyro_z
 7211 020c 00000000 		.word	bno055_gyro
 7212 0210 00000000 		.word	bno055_mag_x
 7213 0214 00000000 		.word	bno055_mag_y
 7214 0218 00000000 		.word	bno055_mag_z
ARM GAS  /tmp/cctFn18N.s 			page 183


 7215 021c 00000000 		.word	bno055_mag
 7216 0220 00000000 		.word	bno055_gravity_x
 7217 0224 00000000 		.word	bno055_gravity_y
 7218 0228 00000000 		.word	bno055_gravity_z
 7219 022c 00000000 		.word	bno055_gravity
 7220 0230 00000000 		.word	bno055_euler_yaw
 7221 0234 00000000 		.word	bno055_euler_roll
 7222 0238 00000000 		.word	bno055_euler_pitch
 7223 023c 00000000 		.word	bno055_euler
 7224 0240 00000000 		.word	bno055_quaternion_w
 7225 0244 00000000 		.word	bno055_quaternion_x
 7226 0248 00000000 		.word	bno055_quaternion_y
 7227 024c 00000000 		.word	bno055_quaternion_z
 7228 0250 00000000 		.word	bno055_quaternion
 7229 0254 00000000 		.word	bno055_acc_conf
 7230 0258 00000000 		.word	bno055_gyr_conf
 7231 025c 00000000 		.word	bno055_mag_conf
 7232              	.LBE662:
 7233              	.LBE679:
 7234              		.cfi_endproc
 7235              	.LFE133:
 7237              		.section	.text.bno055_reset,"ax",%progbits
 7238              		.align	1
 7239              		.p2align 2,,3
 7240              		.global	bno055_reset
 7241              		.syntax unified
 7242              		.thumb
 7243              		.thumb_func
 7244              		.fpu fpv4-sp-d16
 7246              	bno055_reset:
 7247              	.LVL746:
 7248              	.LFB170:
1283:./../bno055.c ****     u8 data = 0x20U;
 7249              		.loc 1 1283 39 is_stmt 1 view -0
 7250              		.cfi_startproc
 7251              		@ args = 0, pretend = 0, frame = 8
 7252              		@ frame_needed = 0, uses_anonymous_args = 0
1284:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 7253              		.loc 1 1284 5 view .LVU2040
1283:./../bno055.c ****     u8 data = 0x20U;
 7254              		.loc 1 1283 39 is_stmt 0 view .LVU2041
 7255 0000 00B5     		push	{lr}
 7256              	.LCFI185:
 7257              		.cfi_def_cfa_offset 4
 7258              		.cfi_offset 14, -4
 7259              	.LBB680:
 7260              	.LBB681:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7261              		.loc 1 1320 11 view .LVU2042
 7262 0002 0123     		movs	r3, #1
 7263              	.LBE681:
 7264              	.LBE680:
1283:./../bno055.c ****     u8 data = 0x20U;
 7265              		.loc 1 1283 39 view .LVU2043
 7266 0004 87B0     		sub	sp, sp, #28
 7267              	.LCFI186:
 7268              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/cctFn18N.s 			page 184


 7269              	.LBB685:
 7270              	.LBB682:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7271              		.loc 1 1320 11 view .LVU2044
 7272 0006 4FF0FF31 		mov	r1, #-1
 7273 000a CDE90131 		strd	r3, r1, [sp, #4]
 7274 000e 0DF11702 		add	r2, sp, #23
 7275 0012 0092     		str	r2, [sp]
 7276 0014 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 7277 0016 0068     		ldr	r0, [r0]
 7278              	.LVL747:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7279              		.loc 1 1320 11 view .LVU2045
 7280              	.LBE682:
 7281              	.LBE685:
1284:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 7282              		.loc 1 1284 8 view .LVU2046
 7283 0018 4FF0200C 		mov	ip, #32
 7284              	.LBB686:
 7285              	.LBB683:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7286              		.loc 1 1320 11 view .LVU2047
 7287 001c 3F22     		movs	r2, #63
 7288              	.LBE683:
 7289              	.LBE686:
1284:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 7290              		.loc 1 1284 8 view .LVU2048
 7291 001e 8DF817C0 		strb	ip, [sp, #23]
1285:./../bno055.c ****         return BNO_ERR_I2C;
 7292              		.loc 1 1285 5 is_stmt 1 view .LVU2049
 7293              	.LVL748:
 7294              	.LBB687:
 7295              	.LBI680:
1317:./../bno055.c ****                             uint32_t buf_size) {
 7296              		.loc 1 1317 11 view .LVU2050
 7297              	.LBB684:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 7298              		.loc 1 1319 5 view .LVU2051
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7299              		.loc 1 1320 5 view .LVU2052
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7300              		.loc 1 1320 11 is_stmt 0 view .LVU2053
 7301 0022 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 7302              	.LVL749:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7303              		.loc 1 1322 5 is_stmt 1 view .LVU2054
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7304              		.loc 1 1322 5 is_stmt 0 view .LVU2055
 7305              	.LBE684:
 7306              	.LBE687:
1289:./../bno055.c **** 
 7307              		.loc 1 1289 1 view .LVU2056
 7308 0026 0038     		subs	r0, r0, #0
 7309 0028 18BF     		it	ne
 7310 002a 0120     		movne	r0, #1
 7311 002c 07B0     		add	sp, sp, #28
 7312              	.LCFI187:
ARM GAS  /tmp/cctFn18N.s 			page 185


 7313              		.cfi_def_cfa_offset 4
 7314              		@ sp needed
 7315 002e 5DF804FB 		ldr	pc, [sp], #4
 7316              		.cfi_endproc
 7317              	.LFE170:
 7319 0032 00BF     		.section	.text.bno055_on,"ax",%progbits
 7320              		.align	1
 7321              		.p2align 2,,3
 7322              		.global	bno055_on
 7323              		.syntax unified
 7324              		.thumb
 7325              		.thumb_func
 7326              		.fpu fpv4-sp-d16
 7328              	bno055_on:
 7329              	.LVL750:
 7330              	.LFB171:
1291:./../bno055.c ****     u8 data = 0x00U;
 7331              		.loc 1 1291 36 is_stmt 1 view -0
 7332              		.cfi_startproc
 7333              		@ args = 0, pretend = 0, frame = 8
 7334              		@ frame_needed = 0, uses_anonymous_args = 0
1292:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 7335              		.loc 1 1292 5 view .LVU2058
1291:./../bno055.c ****     u8 data = 0x00U;
 7336              		.loc 1 1291 36 is_stmt 0 view .LVU2059
 7337 0000 00B5     		push	{lr}
 7338              	.LCFI188:
 7339              		.cfi_def_cfa_offset 4
 7340              		.cfi_offset 14, -4
 7341              	.LBB688:
 7342              	.LBB689:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7343              		.loc 1 1320 11 view .LVU2060
 7344 0002 0123     		movs	r3, #1
 7345              	.LBE689:
 7346              	.LBE688:
1291:./../bno055.c ****     u8 data = 0x00U;
 7347              		.loc 1 1291 36 view .LVU2061
 7348 0004 87B0     		sub	sp, sp, #28
 7349              	.LCFI189:
 7350              		.cfi_def_cfa_offset 32
 7351              	.LBB693:
 7352              	.LBB690:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7353              		.loc 1 1320 11 view .LVU2062
 7354 0006 4FF0FF31 		mov	r1, #-1
 7355 000a CDE90131 		strd	r3, r1, [sp, #4]
 7356 000e 0DF11702 		add	r2, sp, #23
 7357 0012 0092     		str	r2, [sp]
 7358 0014 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 7359 0016 0068     		ldr	r0, [r0]
 7360              	.LVL751:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7361              		.loc 1 1320 11 view .LVU2063
 7362              	.LBE690:
 7363              	.LBE693:
1292:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
ARM GAS  /tmp/cctFn18N.s 			page 186


 7364              		.loc 1 1292 8 view .LVU2064
 7365 0018 4FF0000C 		mov	ip, #0
 7366              	.LBB694:
 7367              	.LBB691:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7368              		.loc 1 1320 11 view .LVU2065
 7369 001c 3F22     		movs	r2, #63
 7370              	.LBE691:
 7371              	.LBE694:
1292:./../bno055.c ****     if (bno055_write_regs(*imu, BNO_SYS_TRIGGER, &data, 1) != BNO_OK) {
 7372              		.loc 1 1292 8 view .LVU2066
 7373 001e 8DF817C0 		strb	ip, [sp, #23]
1293:./../bno055.c ****         return BNO_ERR_I2C;
 7374              		.loc 1 1293 5 is_stmt 1 view .LVU2067
 7375              	.LVL752:
 7376              	.LBB695:
 7377              	.LBI688:
1317:./../bno055.c ****                             uint32_t buf_size) {
 7378              		.loc 1 1317 11 view .LVU2068
 7379              	.LBB692:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 7380              		.loc 1 1319 5 view .LVU2069
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7381              		.loc 1 1320 5 view .LVU2070
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7382              		.loc 1 1320 11 is_stmt 0 view .LVU2071
 7383 0022 FFF7FEFF 		bl	HAL_I2C_Mem_Write
 7384              	.LVL753:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7385              		.loc 1 1322 5 is_stmt 1 view .LVU2072
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7386              		.loc 1 1322 5 is_stmt 0 view .LVU2073
 7387              	.LBE692:
 7388              	.LBE695:
1297:./../bno055.c **** 
 7389              		.loc 1 1297 1 view .LVU2074
 7390 0026 0038     		subs	r0, r0, #0
 7391 0028 18BF     		it	ne
 7392 002a 0120     		movne	r0, #1
 7393 002c 07B0     		add	sp, sp, #28
 7394              	.LCFI190:
 7395              		.cfi_def_cfa_offset 4
 7396              		@ sp needed
 7397 002e 5DF804FB 		ldr	pc, [sp], #4
 7398              		.cfi_endproc
 7399              	.LFE171:
 7401 0032 00BF     		.section	.text.bno055_read_regs,"ax",%progbits
 7402              		.align	1
 7403              		.p2align 2,,3
 7404              		.global	bno055_read_regs
 7405              		.syntax unified
 7406              		.thumb
 7407              		.thumb_func
 7408              		.fpu fpv4-sp-d16
 7410              	bno055_read_regs:
 7411              	.LVL754:
 7412              	.LFB172:
ARM GAS  /tmp/cctFn18N.s 			page 187


1300:./../bno055.c ****     HAL_StatusTypeDef err;
 7413              		.loc 1 1300 47 is_stmt 1 view -0
 7414              		.cfi_startproc
 7415              		@ args = 184, pretend = 16, frame = 8
 7416              		@ frame_needed = 0, uses_anonymous_args = 0
1300:./../bno055.c ****     HAL_StatusTypeDef err;
 7417              		.loc 1 1300 47 is_stmt 0 view .LVU2076
 7418 0000 84B0     		sub	sp, sp, #16
 7419              	.LCFI191:
 7420              		.cfi_def_cfa_offset 16
 7421 0002 30B5     		push	{r4, r5, lr}
 7422              	.LCFI192:
 7423              		.cfi_def_cfa_offset 28
 7424              		.cfi_offset 4, -28
 7425              		.cfi_offset 5, -24
 7426              		.cfi_offset 14, -20
 7427 0004 85B0     		sub	sp, sp, #20
 7428              	.LCFI193:
 7429              		.cfi_def_cfa_offset 48
1300:./../bno055.c ****     HAL_StatusTypeDef err;
 7430              		.loc 1 1300 47 view .LVU2077
 7431 0006 08AC     		add	r4, sp, #32
 7432 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
1305:./../bno055.c ****     if (err != HAL_OK) {
 7433              		.loc 1 1305 11 view .LVU2078
 7434 000c 4FF0FF35 		mov	r5, #-1
 7435 0010 9DF82610 		ldrb	r1, [sp, #38]	@ zero_extendqisi2
 7436 0014 0095     		str	r5, [sp]
 7437 0016 0123     		movs	r3, #1
 7438 0018 33AA     		add	r2, sp, #204
 7439 001a 0446     		mov	r4, r0
 7440              	.LVL755:
1301:./../bno055.c ****     // err = HAL_I2C_Mem_Read(imu.i2c, imu.addr, addr, I2C_MEMADD_SIZE_8BIT,
 7441              		.loc 1 1301 5 is_stmt 1 view .LVU2079
1305:./../bno055.c ****     if (err != HAL_OK) {
 7442              		.loc 1 1305 5 view .LVU2080
1305:./../bno055.c ****     if (err != HAL_OK) {
 7443              		.loc 1 1305 11 is_stmt 0 view .LVU2081
 7444 001c 0391     		str	r1, [sp, #12]
 7445 001e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 7446              	.LVL756:
1306:./../bno055.c ****         return BNO_ERR_I2C;
 7447              		.loc 1 1306 5 is_stmt 1 view .LVU2082
1306:./../bno055.c ****         return BNO_ERR_I2C;
 7448              		.loc 1 1306 8 is_stmt 0 view .LVU2083
 7449 0022 28B1     		cbz	r0, .L327
1307:./../bno055.c ****     }
 7450              		.loc 1 1307 16 view .LVU2084
 7451 0024 0120     		movs	r0, #1
 7452              	.LVL757:
1315:./../bno055.c **** 
 7453              		.loc 1 1315 1 view .LVU2085
 7454 0026 05B0     		add	sp, sp, #20
 7455              	.LCFI194:
 7456              		.cfi_remember_state
 7457              		.cfi_def_cfa_offset 28
 7458              		@ sp needed
ARM GAS  /tmp/cctFn18N.s 			page 188


 7459 0028 BDE83040 		pop	{r4, r5, lr}
 7460              	.LCFI195:
 7461              		.cfi_restore 14
 7462              		.cfi_restore 5
 7463              		.cfi_restore 4
 7464              		.cfi_def_cfa_offset 16
 7465              	.LVL758:
1315:./../bno055.c **** 
 7466              		.loc 1 1315 1 view .LVU2086
 7467 002c 04B0     		add	sp, sp, #16
 7468              	.LCFI196:
 7469              		.cfi_def_cfa_offset 0
 7470 002e 7047     		bx	lr
 7471              	.LVL759:
 7472              	.L327:
 7473              	.LCFI197:
 7474              		.cfi_restore_state
1309:./../bno055.c ****         HAL_I2C_Master_Receive(imu.i2c, imu.addr, buf, buf_size, HAL_MAX_DELAY);
 7475              		.loc 1 1309 5 is_stmt 1 view .LVU2087
1310:./../bno055.c ****     if (err != HAL_OK) {
 7476              		.loc 1 1310 9 is_stmt 0 view .LVU2088
 7477 0030 359B     		ldr	r3, [sp, #212]
 7478 0032 349A     		ldr	r2, [sp, #208]
 7479 0034 0399     		ldr	r1, [sp, #12]
 7480 0036 0095     		str	r5, [sp]
 7481 0038 9BB2     		uxth	r3, r3
 7482 003a 2046     		mov	r0, r4
 7483              	.LVL760:
1310:./../bno055.c ****     if (err != HAL_OK) {
 7484              		.loc 1 1310 9 view .LVU2089
 7485 003c FFF7FEFF 		bl	HAL_I2C_Master_Receive
 7486              	.LVL761:
1311:./../bno055.c ****         return BNO_ERR_I2C;
 7487              		.loc 1 1311 5 is_stmt 1 view .LVU2090
1307:./../bno055.c ****     }
 7488              		.loc 1 1307 16 is_stmt 0 view .LVU2091
 7489 0040 0038     		subs	r0, r0, #0
 7490              	.LVL762:
1307:./../bno055.c ****     }
 7491              		.loc 1 1307 16 view .LVU2092
 7492 0042 18BF     		it	ne
 7493 0044 0120     		movne	r0, #1
1315:./../bno055.c **** 
 7494              		.loc 1 1315 1 view .LVU2093
 7495 0046 05B0     		add	sp, sp, #20
 7496              	.LCFI198:
 7497              		.cfi_def_cfa_offset 28
 7498              		@ sp needed
 7499 0048 BDE83040 		pop	{r4, r5, lr}
 7500              	.LCFI199:
 7501              		.cfi_restore 14
 7502              		.cfi_restore 5
 7503              		.cfi_restore 4
 7504              		.cfi_def_cfa_offset 16
 7505              	.LVL763:
1315:./../bno055.c **** 
 7506              		.loc 1 1315 1 view .LVU2094
ARM GAS  /tmp/cctFn18N.s 			page 189


 7507 004c 04B0     		add	sp, sp, #16
 7508              	.LCFI200:
 7509              		.cfi_def_cfa_offset 0
 7510 004e 7047     		bx	lr
 7511              		.cfi_endproc
 7512              	.LFE172:
 7514              		.section	.text.bno055_write_regs,"ax",%progbits
 7515              		.align	1
 7516              		.p2align 2,,3
 7517              		.global	bno055_write_regs
 7518              		.syntax unified
 7519              		.thumb
 7520              		.thumb_func
 7521              		.fpu fpv4-sp-d16
 7523              	bno055_write_regs:
 7524              	.LVL764:
 7525              	.LFB173:
1318:./../bno055.c ****     HAL_StatusTypeDef err;
 7526              		.loc 1 1318 48 is_stmt 1 view -0
 7527              		.cfi_startproc
 7528              		@ args = 184, pretend = 16, frame = 0
 7529              		@ frame_needed = 0, uses_anonymous_args = 0
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 7530              		.loc 1 1319 5 view .LVU2096
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7531              		.loc 1 1320 5 view .LVU2097
1318:./../bno055.c ****     HAL_StatusTypeDef err;
 7532              		.loc 1 1318 48 is_stmt 0 view .LVU2098
 7533 0000 84B0     		sub	sp, sp, #16
 7534              	.LCFI201:
 7535              		.cfi_def_cfa_offset 16
 7536 0002 10B5     		push	{r4, lr}
 7537              	.LCFI202:
 7538              		.cfi_def_cfa_offset 24
 7539              		.cfi_offset 4, -24
 7540              		.cfi_offset 14, -20
 7541 0004 84B0     		sub	sp, sp, #16
 7542              	.LCFI203:
 7543              		.cfi_def_cfa_offset 40
1318:./../bno055.c ****     HAL_StatusTypeDef err;
 7544              		.loc 1 1318 48 view .LVU2099
 7545 0006 06AC     		add	r4, sp, #24
 7546 0008 84E80F00 		stm	r4, {r0, r1, r2, r3}
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7547              		.loc 1 1320 11 view .LVU2100
 7548 000c BDF8CC30 		ldrh	r3, [sp, #204]
1318:./../bno055.c ****     HAL_StatusTypeDef err;
 7549              		.loc 1 1318 48 view .LVU2101
 7550 0010 3299     		ldr	r1, [sp, #200]
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7551              		.loc 1 1320 11 view .LVU2102
 7552 0012 0091     		str	r1, [sp]
 7553 0014 4FF0FF34 		mov	r4, #-1
 7554 0018 CDE90134 		strd	r3, r4, [sp, #4]
 7555 001c BDF8C420 		ldrh	r2, [sp, #196]
 7556 0020 9DF81E10 		ldrb	r1, [sp, #30]	@ zero_extendqisi2
 7557 0024 FFF7FEFF 		bl	HAL_I2C_Mem_Write
ARM GAS  /tmp/cctFn18N.s 			page 190


 7558              	.LVL765:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7559              		.loc 1 1322 5 is_stmt 1 view .LVU2103
1326:./../bno055.c **** 
 7560              		.loc 1 1326 1 is_stmt 0 view .LVU2104
 7561 0028 0038     		subs	r0, r0, #0
 7562              	.LVL766:
1326:./../bno055.c **** 
 7563              		.loc 1 1326 1 view .LVU2105
 7564 002a 18BF     		it	ne
 7565 002c 0120     		movne	r0, #1
 7566 002e 04B0     		add	sp, sp, #16
 7567              	.LCFI204:
 7568              		.cfi_def_cfa_offset 24
 7569              		@ sp needed
 7570 0030 BDE81040 		pop	{r4, lr}
 7571              	.LCFI205:
 7572              		.cfi_restore 14
 7573              		.cfi_restore 4
 7574              		.cfi_def_cfa_offset 16
 7575 0034 04B0     		add	sp, sp, #16
 7576              	.LCFI206:
 7577              		.cfi_def_cfa_offset 0
 7578 0036 7047     		bx	lr
 7579              		.cfi_endproc
 7580              	.LFE173:
 7582              		.section	.text.bno055_set_page,"ax",%progbits
 7583              		.align	1
 7584              		.p2align 2,,3
 7585              		.global	bno055_set_page
 7586              		.syntax unified
 7587              		.thumb
 7588              		.thumb_func
 7589              		.fpu fpv4-sp-d16
 7591              	bno055_set_page:
 7592              	.LVL767:
 7593              	.LFB174:
1328:./../bno055.c ****     if (imu->_page != page) {
 7594              		.loc 1 1328 68 is_stmt 1 view -0
 7595              		.cfi_startproc
 7596              		@ args = 0, pretend = 0, frame = 8
 7597              		@ frame_needed = 0, uses_anonymous_args = 0
1329:./../bno055.c ****         return BNO_OK;
 7598              		.loc 1 1329 5 view .LVU2107
1328:./../bno055.c ****     if (imu->_page != page) {
 7599              		.loc 1 1328 68 is_stmt 0 view .LVU2108
 7600 0000 70B5     		push	{r4, r5, r6, lr}
 7601              	.LCFI207:
 7602              		.cfi_def_cfa_offset 16
 7603              		.cfi_offset 4, -16
 7604              		.cfi_offset 5, -12
 7605              		.cfi_offset 6, -8
 7606              		.cfi_offset 14, -4
1329:./../bno055.c ****         return BNO_OK;
 7607              		.loc 1 1329 8 view .LVU2109
 7608 0002 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
1328:./../bno055.c ****     if (imu->_page != page) {
ARM GAS  /tmp/cctFn18N.s 			page 191


 7609              		.loc 1 1328 68 view .LVU2110
 7610 0004 86B0     		sub	sp, sp, #24
 7611              	.LCFI208:
 7612              		.cfi_def_cfa_offset 40
1329:./../bno055.c ****         return BNO_OK;
 7613              		.loc 1 1329 8 view .LVU2111
 7614 0006 8B42     		cmp	r3, r1
1328:./../bno055.c ****     if (imu->_page != page) {
 7615              		.loc 1 1328 68 view .LVU2112
 7616 0008 8DF81710 		strb	r1, [sp, #23]
1329:./../bno055.c ****         return BNO_OK;
 7617              		.loc 1 1329 8 view .LVU2113
 7618 000c 1BD1     		bne	.L332
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 7619              		.loc 1 1332 5 is_stmt 1 view .LVU2114
1332:./../bno055.c ****         return BNO_ERR_PAGE_TOO_HIGH;
 7620              		.loc 1 1332 8 is_stmt 0 view .LVU2115
 7621 000e 012B     		cmp	r3, #1
 7622 0010 1DD8     		bhi	.L333
1335:./../bno055.c ****     err = bno055_write_regs(*imu, BNO_PAGE_ID, (u8*)&page, 1);
 7623              		.loc 1 1335 5 is_stmt 1 view .LVU2116
1336:./../bno055.c ****     if (err != BNO_OK) {
 7624              		.loc 1 1336 5 view .LVU2117
 7625              	.LVL768:
 7626              	.LBB696:
 7627              	.LBI696:
1317:./../bno055.c ****                             uint32_t buf_size) {
 7628              		.loc 1 1317 11 view .LVU2118
 7629              	.LBB697:
1319:./../bno055.c ****     err = HAL_I2C_Mem_Write(imu.i2c, imu.addr, addr, buf_size, buf, buf_size,
 7630              		.loc 1 1319 5 view .LVU2119
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7631              		.loc 1 1320 5 view .LVU2120
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7632              		.loc 1 1320 11 is_stmt 0 view .LVU2121
 7633 0012 0126     		movs	r6, #1
 7634 0014 4FF0FF32 		mov	r2, #-1
 7635 0018 CDE90162 		strd	r6, r2, [sp, #4]
 7636              	.LVL769:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7637              		.loc 1 1320 11 view .LVU2122
 7638 001c 0DF11703 		add	r3, sp, #23
 7639              	.LVL770:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7640              		.loc 1 1320 11 view .LVU2123
 7641 0020 0093     		str	r3, [sp]
 7642 0022 8179     		ldrb	r1, [r0, #6]	@ zero_extendqisi2
 7643              	.LVL771:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7644              		.loc 1 1320 11 view .LVU2124
 7645 0024 0446     		mov	r4, r0
 7646 0026 3346     		mov	r3, r6
 7647              	.LVL772:
1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7648              		.loc 1 1320 11 view .LVU2125
 7649 0028 0068     		ldr	r0, [r0]
 7650              	.LVL773:
ARM GAS  /tmp/cctFn18N.s 			page 192


1320:./../bno055.c ****                             HAL_MAX_DELAY);
 7651              		.loc 1 1320 11 view .LVU2126
 7652 002a 0722     		movs	r2, #7
 7653 002c FFF7FEFF 		bl	HAL_I2C_Mem_Write
 7654              	.LVL774:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7655              		.loc 1 1322 5 is_stmt 1 view .LVU2127
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7656              		.loc 1 1322 8 is_stmt 0 view .LVU2128
 7657 0030 0546     		mov	r5, r0
 7658 0032 80B9     		cbnz	r0, .L334
 7659              	.LVL775:
1322:./../bno055.c ****         return BNO_ERR_I2C;
 7660              		.loc 1 1322 8 view .LVU2129
 7661              	.LBE697:
 7662              	.LBE696:
1337:./../bno055.c ****         return err;
 7663              		.loc 1 1337 5 is_stmt 1 view .LVU2130
1340:./../bno055.c ****     HAL_Delay(2);
 7664              		.loc 1 1340 5 view .LVU2131
1340:./../bno055.c ****     HAL_Delay(2);
 7665              		.loc 1 1340 16 is_stmt 0 view .LVU2132
 7666 0034 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 7667 0038 6373     		strb	r3, [r4, #13]
1341:./../bno055.c ****     return BNO_OK;
 7668              		.loc 1 1341 5 is_stmt 1 view .LVU2133
 7669 003a 0220     		movs	r0, #2
 7670 003c FFF7FEFF 		bl	HAL_Delay
 7671              	.LVL776:
 7672              		.loc 1 1342 5 view .LVU2134
1343:./../bno055.c **** }
 7673              		.loc 1 1343 1 is_stmt 0 view .LVU2135
 7674 0040 2846     		mov	r0, r5
 7675 0042 06B0     		add	sp, sp, #24
 7676              	.LCFI209:
 7677              		.cfi_remember_state
 7678              		.cfi_def_cfa_offset 16
 7679              		@ sp needed
 7680 0044 70BD     		pop	{r4, r5, r6, pc}
 7681              	.LVL777:
 7682              	.L332:
 7683              	.LCFI210:
 7684              		.cfi_restore_state
1330:./../bno055.c ****     }
 7685              		.loc 1 1330 16 view .LVU2136
 7686 0046 0025     		movs	r5, #0
 7687              	.LVL778:
 7688              	.L331:
 7689              		.loc 1 1343 1 view .LVU2137
 7690 0048 2846     		mov	r0, r5
 7691 004a 06B0     		add	sp, sp, #24
 7692              	.LCFI211:
 7693              		.cfi_remember_state
 7694              		.cfi_def_cfa_offset 16
 7695              		@ sp needed
 7696 004c 70BD     		pop	{r4, r5, r6, pc}
 7697              	.LVL779:
ARM GAS  /tmp/cctFn18N.s 			page 193


 7698              	.L333:
 7699              	.LCFI212:
 7700              		.cfi_restore_state
1333:./../bno055.c ****     }
 7701              		.loc 1 1333 16 view .LVU2138
 7702 004e 0225     		movs	r5, #2
 7703              		.loc 1 1343 1 view .LVU2139
 7704 0050 2846     		mov	r0, r5
 7705              	.LVL780:
 7706              		.loc 1 1343 1 view .LVU2140
 7707 0052 06B0     		add	sp, sp, #24
 7708              	.LCFI213:
 7709              		.cfi_remember_state
 7710              		.cfi_def_cfa_offset 16
 7711              		@ sp needed
 7712 0054 70BD     		pop	{r4, r5, r6, pc}
 7713              	.LVL781:
 7714              	.L334:
 7715              	.LCFI214:
 7716              		.cfi_restore_state
 7717              	.LBB699:
 7718              	.LBB698:
1323:./../bno055.c ****     }
 7719              		.loc 1 1323 16 view .LVU2141
 7720 0056 3546     		mov	r5, r6
 7721 0058 F6E7     		b	.L331
 7722              	.LBE698:
 7723              	.LBE699:
 7724              		.cfi_endproc
 7725              	.LFE174:
 7727 005a 00BF     		.section	.rodata.bno055_err_str.str1.4,"aMS",%progbits,1
 7728              		.align	2
 7729              	.LC0:
 7730 0000 5B424E4F 		.ascii	"[BNO] Ok!\000"
 7730      5D204F6B 
 7730      2100
 7731              		.section	.text.bno055_err_str,"ax",%progbits
 7732              		.align	1
 7733              		.p2align 2,,3
 7734              		.global	bno055_err_str
 7735              		.syntax unified
 7736              		.thumb
 7737              		.thumb_func
 7738              		.fpu fpv4-sp-d16
 7740              	bno055_err_str:
 7741              	.LVL782:
 7742              	.LFB175:
1344:./../bno055.c **** 
1345:./../bno055.c **** char* bno055_err_str(const error_bno err) {
 7743              		.loc 1 1345 43 is_stmt 1 view -0
 7744              		.cfi_startproc
 7745              		@ args = 0, pretend = 0, frame = 0
 7746              		@ frame_needed = 0, uses_anonymous_args = 0
 7747              		@ link register save eliminated.
1346:./../bno055.c ****     switch (err) {
 7748              		.loc 1 1346 5 view .LVU2143
 7749 0000 0138     		subs	r0, r0, #1
ARM GAS  /tmp/cctFn18N.s 			page 194


 7750              	.LVL783:
 7751              		.loc 1 1346 5 is_stmt 0 view .LVU2144
 7752 0002 C0B2     		uxtb	r0, r0
 7753 0004 0528     		cmp	r0, #5
 7754 0006 9ABF     		itte	ls
 7755 0008 024B     		ldrls	r3, .L339
 7756 000a 53F82000 		ldrls	r0, [r3, r0, lsl #2]
1345:./../bno055.c ****     switch (err) {
 7757              		.loc 1 1345 43 view .LVU2145
 7758 000e 0248     		ldrhi	r0, .L339+4
1347:./../bno055.c ****         case BNO_OK:
1348:./../bno055.c ****             return "[BNO] Ok!";
1349:./../bno055.c ****         case BNO_ERR_I2C:
1350:./../bno055.c ****             return "[BNO] I2C error!";
1351:./../bno055.c ****         case BNO_ERR_PAGE_TOO_HIGH:
1352:./../bno055.c ****             return "[BNO] Page setting to high.";
1353:./../bno055.c ****         case BNO_ERR_NULL_PTR:
1354:./../bno055.c ****             return "[BNO] BNO struct is nullpointer.";
1355:./../bno055.c ****         case BNO_ERR_AXIS_REMAP:
1356:./../bno055.c ****             return "[BNO] Axis remap error!";
1357:./../bno055.c ****         case BNO_ERR_SETTING_PAGE:
1358:./../bno055.c ****             return "[BNO] TODO";
1359:./../bno055.c ****         case BNO_ERR_WRONG_CHIP_ID:
1360:./../bno055.c ****             return "[BNO] Wrong Chip ID.";
1361:./../bno055.c ****     }
1362:./../bno055.c ****     return "[BNO] Ok!";
1363:./../bno055.c **** }
 7759              		.loc 1 1363 1 view .LVU2146
 7760 0010 7047     		bx	lr
 7761              	.L340:
 7762 0012 00BF     		.align	2
 7763              	.L339:
 7764 0014 00000000 		.word	.LANCHOR0
 7765 0018 00000000 		.word	.LC0
 7766              		.cfi_endproc
 7767              	.LFE175:
 7769              		.section	.rodata.str1.4,"aMS",%progbits,1
 7770              		.align	2
 7771              	.LC1:
 7772 0000 5B424E4F 		.ascii	"[BNO] I2C error!\000"
 7772      5D204932 
 7772      43206572 
 7772      726F7221 
 7772      00
 7773 0011 000000   		.align	2
 7774              	.LC2:
 7775 0014 5B424E4F 		.ascii	"[BNO] Page setting to high.\000"
 7775      5D205061 
 7775      67652073 
 7775      65747469 
 7775      6E672074 
 7776              		.align	2
 7777              	.LC3:
 7778 0030 5B424E4F 		.ascii	"[BNO] TODO\000"
 7778      5D20544F 
 7778      444F00
 7779 003b 00       		.align	2
ARM GAS  /tmp/cctFn18N.s 			page 195


 7780              	.LC4:
 7781 003c 5B424E4F 		.ascii	"[BNO] BNO struct is nullpointer.\000"
 7781      5D20424E 
 7781      4F207374 
 7781      72756374 
 7781      20697320 
 7782 005d 000000   		.align	2
 7783              	.LC5:
 7784 0060 5B424E4F 		.ascii	"[BNO] Axis remap error!\000"
 7784      5D204178 
 7784      69732072 
 7784      656D6170 
 7784      20657272 
 7785              		.align	2
 7786              	.LC6:
 7787 0078 5B424E4F 		.ascii	"[BNO] Wrong Chip ID.\000"
 7787      5D205772 
 7787      6F6E6720 
 7787      43686970 
 7787      2049442E 
 7788              		.section	.rodata.CSWTCH.91,"a"
 7789              		.align	2
 7790              		.set	.LANCHOR0,. + 0
 7793              	CSWTCH.91:
 7794 0000 00000000 		.word	.LC1
 7795 0004 14000000 		.word	.LC2
 7796 0008 30000000 		.word	.LC3
 7797 000c 3C000000 		.word	.LC4
 7798 0010 60000000 		.word	.LC5
 7799 0014 78000000 		.word	.LC6
 7800              		.text
 7801              	.Letext0:
 7802              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 7803              		.file 3 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 7804              		.file 4 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 7805              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 7806              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 7807              		.file 7 "./../bno055.h"
 7808              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/cctFn18N.s 			page 196


DEFINED SYMBOLS
                            *ABS*:0000000000000000 bno055.c
     /tmp/cctFn18N.s:18     .text.bno055_mag_x:0000000000000000 $t
     /tmp/cctFn18N.s:27     .text.bno055_mag_x:0000000000000000 bno055_mag_x
     /tmp/cctFn18N.s:156    .text.bno055_mag_y:0000000000000000 $t
     /tmp/cctFn18N.s:164    .text.bno055_mag_y:0000000000000000 bno055_mag_y
     /tmp/cctFn18N.s:292    .text.bno055_mag_z:0000000000000000 $t
     /tmp/cctFn18N.s:300    .text.bno055_mag_z:0000000000000000 bno055_mag_z
     /tmp/cctFn18N.s:428    .text.bno055_quaternion_w:0000000000000000 $t
     /tmp/cctFn18N.s:436    .text.bno055_quaternion_w:0000000000000000 bno055_quaternion_w
     /tmp/cctFn18N.s:564    .text.bno055_quaternion_x:0000000000000000 $t
     /tmp/cctFn18N.s:572    .text.bno055_quaternion_x:0000000000000000 bno055_quaternion_x
     /tmp/cctFn18N.s:700    .text.bno055_quaternion_y:0000000000000000 $t
     /tmp/cctFn18N.s:708    .text.bno055_quaternion_y:0000000000000000 bno055_quaternion_y
     /tmp/cctFn18N.s:836    .text.bno055_quaternion_z:0000000000000000 $t
     /tmp/cctFn18N.s:844    .text.bno055_quaternion_z:0000000000000000 bno055_quaternion_z
     /tmp/cctFn18N.s:972    .text.bno055_temperature:0000000000000000 $t
     /tmp/cctFn18N.s:980    .text.bno055_temperature:0000000000000000 bno055_temperature
     /tmp/cctFn18N.s:1122   .text.bno055_acc_x:0000000000000000 $t
     /tmp/cctFn18N.s:1130   .text.bno055_acc_x:0000000000000000 bno055_acc_x
     /tmp/cctFn18N.s:1265   .text.bno055_acc_x:0000000000000060 $d
     /tmp/cctFn18N.s:1270   .text.bno055_euler_roll:0000000000000000 $t
     /tmp/cctFn18N.s:1278   .text.bno055_euler_roll:0000000000000000 bno055_euler_roll
     /tmp/cctFn18N.s:1419   .text.bno055_euler_roll:000000000000006c $d
     /tmp/cctFn18N.s:1424   .text.bno055_euler_pitch:0000000000000000 $t
     /tmp/cctFn18N.s:1432   .text.bno055_euler_pitch:0000000000000000 bno055_euler_pitch
     /tmp/cctFn18N.s:1573   .text.bno055_euler_pitch:000000000000006c $d
     /tmp/cctFn18N.s:1578   .text.bno055_acc_y:0000000000000000 $t
     /tmp/cctFn18N.s:1586   .text.bno055_acc_y:0000000000000000 bno055_acc_y
     /tmp/cctFn18N.s:1721   .text.bno055_acc_y:0000000000000060 $d
     /tmp/cctFn18N.s:1726   .text.bno055_acc_z:0000000000000000 $t
     /tmp/cctFn18N.s:1734   .text.bno055_acc_z:0000000000000000 bno055_acc_z
     /tmp/cctFn18N.s:1869   .text.bno055_acc_z:0000000000000060 $d
     /tmp/cctFn18N.s:1874   .text.bno055_linear_acc_x:0000000000000000 $t
     /tmp/cctFn18N.s:1882   .text.bno055_linear_acc_x:0000000000000000 bno055_linear_acc_x
     /tmp/cctFn18N.s:2017   .text.bno055_linear_acc_x:0000000000000060 $d
     /tmp/cctFn18N.s:2022   .text.bno055_gravity_x:0000000000000000 $t
     /tmp/cctFn18N.s:2030   .text.bno055_gravity_x:0000000000000000 bno055_gravity_x
     /tmp/cctFn18N.s:2171   .text.bno055_gravity_x:000000000000006c $d
     /tmp/cctFn18N.s:2176   .text.bno055_gravity_y:0000000000000000 $t
     /tmp/cctFn18N.s:2184   .text.bno055_gravity_y:0000000000000000 bno055_gravity_y
     /tmp/cctFn18N.s:2325   .text.bno055_gravity_y:000000000000006c $d
     /tmp/cctFn18N.s:2330   .text.bno055_gravity_z:0000000000000000 $t
     /tmp/cctFn18N.s:2338   .text.bno055_gravity_z:0000000000000000 bno055_gravity_z
     /tmp/cctFn18N.s:2479   .text.bno055_gravity_z:000000000000006c $d
     /tmp/cctFn18N.s:2484   .text.bno055_euler_yaw:0000000000000000 $t
     /tmp/cctFn18N.s:2492   .text.bno055_euler_yaw:0000000000000000 bno055_euler_yaw
     /tmp/cctFn18N.s:2633   .text.bno055_euler_yaw:000000000000006c $d
     /tmp/cctFn18N.s:2638   .text.bno055_gyro_y:0000000000000000 $t
     /tmp/cctFn18N.s:2646   .text.bno055_gyro_y:0000000000000000 bno055_gyro_y
     /tmp/cctFn18N.s:2785   .text.bno055_gyro_y:000000000000006c $d
     /tmp/cctFn18N.s:2790   .text.bno055_gyro_z:0000000000000000 $t
     /tmp/cctFn18N.s:2798   .text.bno055_gyro_z:0000000000000000 bno055_gyro_z
     /tmp/cctFn18N.s:2937   .text.bno055_gyro_z:000000000000006c $d
     /tmp/cctFn18N.s:2942   .text.bno055_linear_acc_y:0000000000000000 $t
     /tmp/cctFn18N.s:2950   .text.bno055_linear_acc_y:0000000000000000 bno055_linear_acc_y
     /tmp/cctFn18N.s:3085   .text.bno055_linear_acc_y:0000000000000060 $d
ARM GAS  /tmp/cctFn18N.s 			page 197


     /tmp/cctFn18N.s:3090   .text.bno055_linear_acc_z:0000000000000000 $t
     /tmp/cctFn18N.s:3098   .text.bno055_linear_acc_z:0000000000000000 bno055_linear_acc_z
     /tmp/cctFn18N.s:3233   .text.bno055_linear_acc_z:0000000000000060 $d
     /tmp/cctFn18N.s:3238   .text.bno055_gyro_x:0000000000000000 $t
     /tmp/cctFn18N.s:3246   .text.bno055_gyro_x:0000000000000000 bno055_gyro_x
     /tmp/cctFn18N.s:3385   .text.bno055_gyro_x:000000000000006c $d
     /tmp/cctFn18N.s:3390   .text.bno055_gravity:0000000000000000 $t
     /tmp/cctFn18N.s:3398   .text.bno055_gravity:0000000000000000 bno055_gravity
     /tmp/cctFn18N.s:3549   .text.bno055_gravity:0000000000000080 $d
     /tmp/cctFn18N.s:3554   .text.bno055_mag:0000000000000000 $t
     /tmp/cctFn18N.s:3562   .text.bno055_mag:0000000000000000 bno055_mag
     /tmp/cctFn18N.s:3714   .text.bno055_mag:0000000000000084 $d
     /tmp/cctFn18N.s:3719   .text.bno055_acc:0000000000000000 $t
     /tmp/cctFn18N.s:3727   .text.bno055_acc:0000000000000000 bno055_acc
     /tmp/cctFn18N.s:3887   .text.bno055_acc:0000000000000094 $d
     /tmp/cctFn18N.s:3892   .text.bno055_euler:0000000000000000 $t
     /tmp/cctFn18N.s:3900   .text.bno055_euler:0000000000000000 bno055_euler
     /tmp/cctFn18N.s:4060   .text.bno055_euler:0000000000000094 $d
     /tmp/cctFn18N.s:4065   .text.bno055_gyro:0000000000000000 $t
     /tmp/cctFn18N.s:4073   .text.bno055_gyro:0000000000000000 bno055_gyro
     /tmp/cctFn18N.s:4233   .text.bno055_gyro:0000000000000094 $d
     /tmp/cctFn18N.s:4238   .text.bno055_linear_acc:0000000000000000 $t
     /tmp/cctFn18N.s:4246   .text.bno055_linear_acc:0000000000000000 bno055_linear_acc
     /tmp/cctFn18N.s:4406   .text.bno055_linear_acc:0000000000000094 $d
     /tmp/cctFn18N.s:4411   .text.bno055_quaternion:0000000000000000 $t
     /tmp/cctFn18N.s:4419   .text.bno055_quaternion:0000000000000000 bno055_quaternion
     /tmp/cctFn18N.s:4581   .text.bno055_quaternion:0000000000000098 $d
     /tmp/cctFn18N.s:4586   .text.bno055_gyr_conf:0000000000000000 $t
     /tmp/cctFn18N.s:4594   .text.bno055_gyr_conf:0000000000000000 bno055_gyr_conf
     /tmp/cctFn18N.s:4984   .text.bno055_mag_conf:0000000000000000 $t
     /tmp/cctFn18N.s:4992   .text.bno055_mag_conf:0000000000000000 bno055_mag_conf
     /tmp/cctFn18N.s:5372   .text.bno055_acc_conf:0000000000000000 $t
     /tmp/cctFn18N.s:5380   .text.bno055_acc_conf:0000000000000000 bno055_acc_conf
     /tmp/cctFn18N.s:5760   .text.bno055_set_opmode:0000000000000000 $t
     /tmp/cctFn18N.s:5768   .text.bno055_set_opmode:0000000000000000 bno055_set_opmode
     /tmp/cctFn18N.s:5873   .text.bno055_set_unit:0000000000000000 $t
     /tmp/cctFn18N.s:5881   .text.bno055_set_unit:0000000000000000 bno055_set_unit
     /tmp/cctFn18N.s:6226   .text.bno055_set_pwr_mode:0000000000000000 $t
     /tmp/cctFn18N.s:6234   .text.bno055_set_pwr_mode:0000000000000000 bno055_set_pwr_mode
     /tmp/cctFn18N.s:6606   .text.bno055_init:0000000000000000 $t
     /tmp/cctFn18N.s:6614   .text.bno055_init:0000000000000000 bno055_init
     /tmp/cctFn18N.s:7199   .text.bno055_init:00000000000001dc $d
     /tmp/cctFn18N.s:7238   .text.bno055_reset:0000000000000000 $t
     /tmp/cctFn18N.s:7246   .text.bno055_reset:0000000000000000 bno055_reset
     /tmp/cctFn18N.s:7320   .text.bno055_on:0000000000000000 $t
     /tmp/cctFn18N.s:7328   .text.bno055_on:0000000000000000 bno055_on
     /tmp/cctFn18N.s:7402   .text.bno055_read_regs:0000000000000000 $t
     /tmp/cctFn18N.s:7410   .text.bno055_read_regs:0000000000000000 bno055_read_regs
     /tmp/cctFn18N.s:7515   .text.bno055_write_regs:0000000000000000 $t
     /tmp/cctFn18N.s:7523   .text.bno055_write_regs:0000000000000000 bno055_write_regs
     /tmp/cctFn18N.s:7583   .text.bno055_set_page:0000000000000000 $t
     /tmp/cctFn18N.s:7591   .text.bno055_set_page:0000000000000000 bno055_set_page
     /tmp/cctFn18N.s:7728   .rodata.bno055_err_str.str1.4:0000000000000000 $d
     /tmp/cctFn18N.s:7732   .text.bno055_err_str:0000000000000000 $t
     /tmp/cctFn18N.s:7740   .text.bno055_err_str:0000000000000000 bno055_err_str
     /tmp/cctFn18N.s:7764   .text.bno055_err_str:0000000000000014 $d
     /tmp/cctFn18N.s:7770   .rodata.str1.4:0000000000000000 $d
ARM GAS  /tmp/cctFn18N.s 			page 198


     /tmp/cctFn18N.s:7789   .rodata.CSWTCH.91:0000000000000000 $d
     /tmp/cctFn18N.s:7793   .rodata.CSWTCH.91:0000000000000000 CSWTCH.91

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
HAL_I2C_Master_Receive
HAL_I2C_Mem_Write
HAL_Delay
